
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/_smartfox/gui/UtilsUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '36367CtJ7JH0IcN1lK1XCUM', 'UtilsUI');
// _smartfox/gui/UtilsUI.js

"use strict";

var UtilsUI = {};

UtilsUI.loadImageLink = function (link, sprite, complete) {
  if (!sprite) {
    console.log("Loi sprite");
    return;
  }

  cc.loader.load({
    url: link,
    type: 'png'
  }, function (err, texture) {
    if (err) {
      console.log(err);
      return;
    }

    if (cc.isValid(sprite)) sprite.spriteFrame = new cc.SpriteFrame(texture);
    if (complete) complete(sprite);
  });
};

UtilsUI.loadImageRes = function (sprite, url) {
  cc.loader.loadRes(url, cc.SpriteFrame, function (err, spriteFrame) {
    if (err) {
      console.log(err);
      return;
    }

    if (cc.isValid(sprite)) {
      sprite.spriteFrame = spriteFrame;
      sprite.node.active = true;
    }
  });
};

UtilsUI.loadPlist = function (sprite, url, name) {
  cc.loader.loadRes(url, cc.SpriteAtlas, function (err, atlas) {
    if (err) {
      return;
    }

    var frame = atlas.getSpriteFrame(name);

    if (cc.isValid(sprite)) {
      sprite.spriteFrame = frame;
      sprite.node.active = true;
    }
  });
};

UtilsUI.addDotToNumber = function (value) {
  if (value <= 0) return 0;
  return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
};

UtilsUI.formatCurrency = function (money) {
  if (money <= 0) return 0;

  if (!mm.KythanhUserVariable.isBet()) {
    return Math.floor(money / 500);
  }

  if (money >= Math.pow(10, 4) && money < Math.pow(10, 6)) {
    return money / Math.pow(10, 3) + "K";
  } else if (money >= Math.pow(10, 6) && money < Math.pow(10, 9)) {
    money = Math.floor(money / Math.pow(10, 4)) / 100;
    return money + "M";
  } else if (money >= Math.pow(10, 9) && money < Math.pow(10, 12)) {
    money = Math.floor(money / Math.pow(10, 7)) / 100;
    return money + "B";
  } else if (money >= Math.pow(10, 12) && money <= Math.pow(10, 15)) {
    money = Math.floor(money / Math.pow(10, 10)) / 100;
    return money + "Q";
  } else if (money >= Math.pow(10, 15)) {
    money = Math.floor(money / Math.pow(10, 13)) / 100;
    return money + "~~";
  }

  return Utils.addDotToNumber(money);
};

UtilsUI.formatNumber = function (number, point) {
  var numberPoint = Math.pow(10, point);
  number = number / numberPoint;
  number = Math.floor(number);
  number = number * numberPoint;
  return number;
};

UtilsUI.formatTimeToString = function (time) {
  var minute = Math.floor(time / 60);
  var seconds = Math.floor(time % 60);

  if (minute < 10) {
    minute = "0" + minute;
  }

  if (seconds < 10) seconds = "0" + seconds;
  return minute + ":" + seconds;
};

UtilsUI.convertTimeStampToDate = function (timeStamp) {
  var date = new Date(timeStamp);
  var year = date.getFullYear();
  var month = date.getMonth();
  var day = date.getDay();
  var hours = date.getHours();
  var minutes = "0" + date.getMinutes();
  var seconds = "0" + date.getSeconds(); // return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);

  return day + "/" + month + "/" + year;
};

UtilsUI.convertTimeStampToTime = function (timeStamp, language) {
  //+ " " + Language.LANGUAGE()["txt_minute"];
  var date = new Date(timeStamp);
  var year = date.getFullYear();
  var month = date.getMonth();
  var day = date.getDay();
  var hours = date.getHours();
  var minutes = date.getMinutes();
  var seconds = date.getSeconds();
  return day + "/" + month + "/" + year;
};

UtilsUI.convertDateToTimestamp = function (myDate) {
  myDate = myDate.split("-");
  if (myDate.length != 3) return null;
  var newDate = myDate[1] + "/" + myDate[0] + "/" + myDate[2];
  var time = new Date(newDate).getTime();
  return time;
};

UtilsUI.formatText = function (text, maxLength) {
  if (text == undefined || text == null || text == '') return "Error: Empty";
  if (maxLength === undefined) maxLength = 10;
  var pre = "";
  if (text.length >= maxLength) pre = "..";
  text = text.substring(0, maxLength - pre.length);
  text += pre;
  return text;
};

UtilsUI.formatRelativeTime = function (seconds) {
  if (!Number.isInteger(seconds) || +seconds <= 0) {
    return '0 day';
  } else {
    var days = Math.floor(seconds / (24 * 60 * 60));
    return days + ' days';
  }
};

module.exports = UtilsUI;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,