
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/portal/PortalController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '24959Fm7pdDmb0wGbtw/yw8', 'PortalController');
// scripts/portal/PortalController.js

"use strict";

var UIManager = require("UIManager");

var PortalController = SmartFoxSDK.BaseController.extend({
  registerEvents: function registerEvents() {
    this._super();

    this.ZoneInstance.addEventListenerExtension(CasinoEvent.RESPONSE_NAME.TRANSFER_MONEY_RES, this.onTransferMoney, this);
    this.ZoneInstance.addEventListenerExtension(CasinoEvent.RESPONSE_NAME.CHANGE_PASS_RES, this.onChangePassword, this);
    this.ZoneInstance.addEventListenerExtension(CasinoEvent.RESPONSE_NAME.GIFT_CODE_RES, this.onGiftCode, this);
  },
  removeEvents: function removeEvents() {
    this._super();

    this.ZoneInstance.removeEventListenerExtension(CasinoEvent.RESPONSE_NAME.TRANSFER_MONEY_RES, this.onTransferMoney, this);
    this.ZoneInstance.removeEventListenerExtension(CasinoEvent.RESPONSE_NAME.CHANGE_PASS_RES, this.onChangePassword, this);
    this.ZoneInstance.removeEventListenerExtension(CasinoEvent.RESPONSE_NAME.GIFT_CODE_RES, this.onGiftCode, this);
  },
  onEventConnection: function onEventConnection(event) {
    if (event.success) {
      if (this.register) {
        this.register = false;
        var uiRegister = UIManager.getUIFromName("UIRegister");
        uiRegister.getComponent(uiRegister.name).eventClickRegister();
      } else {
        this.loginZone(this.un, this.pass);
      }
    } else {
      this._reset();
    }
  },
  onEventLogin: function onEventLogin(event) {
    this._super(event);

    mm.isLogin = true;
    UIManger.show("UIHome");
    Config.saveUsername(this.un);
    Config.savePass(this.pass);
  },
  onHistoryEvent: function onHistoryEvent(event) {
    mm.Loading.hide();
    var data = event.getSArray("d");
    var items = [];

    for (var i = 0; i < data.size(); i++) {
      var sItem = data.get(i).getObject();
      var item = {};
      item.session = i + 1;
      item.time = sItem.getUtfString("t");
      item.amount = sItem.getDouble("am");
      item.chip = sItem.getDouble("c");
      item.tax = sItem.getDouble("tx");
      item.des = sItem.getUtfString("des");
      items.push(item);
    }

    UIManger.show("UIBankLog", {
      pop: true,
      src: 'portal',
      data: {
        items: items
      }
    });
  },
  onTransferMoney: function onTransferMoney(event) {
    var transfer = new CasinoEvent.TransferMoneyEvent().fromEvent(event);
    var code = transfer.code;

    if (code == 1) {
      // true
      mm.Toast.showToast(1, "Chuyển tiền thành công");
    } else if (code == 0) {
      // false
      mm.Toast.showToast(1, "Tài khoản nhận không đúng");
    } else if (code == 2) {
      mm.Toast.showToast(1, "Bạn không đủ số dư");
    }

    mm.Loading.hide();
  },
  onChangePassword: function onChangePassword(event) {
    var changePass = new CasinoEvent.ChangePassEvent().fromEvent(event);
    var code = changePass.code;

    if (code == 1) {
      // true
      Config.clearUserPass();
      mm.Toast.showToast(1, "Đổi mật khẩu thành công");
    } else {
      // false
      mm.Toast.showToast(1, "Đổi mật khẩu thất bại");
    }
  },
  onGiftCode: function onGiftCode(event) {
    mm.Loading.hide();
    var giftCodeRes = new CasinoEvent.GiftCodeEvent().fromEvent(event);

    if (giftCodeRes.ec !== undefined && giftCodeRes.ec !== null) {
      mm.Toast.showToast(1, giftCodeRes.ec);
    } else {
      mm.Toast.showToast(1, "Bạn được quà " + Utils.addDotToNumber(giftCodeRes.gift_value));
    }
  }
});
var instance = null;

var getInstance = function getInstance() {
  if (instance == null) instance = new PortalController("UIPortal", 'portal');
  return instance;
};

SmartFoxSDK.PortalController = module.exports = getInstance();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHRzL3BvcnRhbC9Qb3J0YWxDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIlVJTWFuYWdlciIsInJlcXVpcmUiLCJQb3J0YWxDb250cm9sbGVyIiwiU21hcnRGb3hTREsiLCJCYXNlQ29udHJvbGxlciIsImV4dGVuZCIsInJlZ2lzdGVyRXZlbnRzIiwiX3N1cGVyIiwiWm9uZUluc3RhbmNlIiwiYWRkRXZlbnRMaXN0ZW5lckV4dGVuc2lvbiIsIkNhc2lub0V2ZW50IiwiUkVTUE9OU0VfTkFNRSIsIlRSQU5TRkVSX01PTkVZX1JFUyIsIm9uVHJhbnNmZXJNb25leSIsIkNIQU5HRV9QQVNTX1JFUyIsIm9uQ2hhbmdlUGFzc3dvcmQiLCJHSUZUX0NPREVfUkVTIiwib25HaWZ0Q29kZSIsInJlbW92ZUV2ZW50cyIsInJlbW92ZUV2ZW50TGlzdGVuZXJFeHRlbnNpb24iLCJvbkV2ZW50Q29ubmVjdGlvbiIsImV2ZW50Iiwic3VjY2VzcyIsInJlZ2lzdGVyIiwidWlSZWdpc3RlciIsImdldFVJRnJvbU5hbWUiLCJnZXRDb21wb25lbnQiLCJuYW1lIiwiZXZlbnRDbGlja1JlZ2lzdGVyIiwibG9naW5ab25lIiwidW4iLCJwYXNzIiwiX3Jlc2V0Iiwib25FdmVudExvZ2luIiwibW0iLCJpc0xvZ2luIiwiVUlNYW5nZXIiLCJzaG93IiwiQ29uZmlnIiwic2F2ZVVzZXJuYW1lIiwic2F2ZVBhc3MiLCJvbkhpc3RvcnlFdmVudCIsIkxvYWRpbmciLCJoaWRlIiwiZGF0YSIsImdldFNBcnJheSIsIml0ZW1zIiwiaSIsInNpemUiLCJzSXRlbSIsImdldCIsImdldE9iamVjdCIsIml0ZW0iLCJzZXNzaW9uIiwidGltZSIsImdldFV0ZlN0cmluZyIsImFtb3VudCIsImdldERvdWJsZSIsImNoaXAiLCJ0YXgiLCJkZXMiLCJwdXNoIiwicG9wIiwic3JjIiwidHJhbnNmZXIiLCJUcmFuc2Zlck1vbmV5RXZlbnQiLCJmcm9tRXZlbnQiLCJjb2RlIiwiVG9hc3QiLCJzaG93VG9hc3QiLCJjaGFuZ2VQYXNzIiwiQ2hhbmdlUGFzc0V2ZW50IiwiY2xlYXJVc2VyUGFzcyIsImdpZnRDb2RlUmVzIiwiR2lmdENvZGVFdmVudCIsImVjIiwidW5kZWZpbmVkIiwiVXRpbHMiLCJhZGREb3RUb051bWJlciIsImdpZnRfdmFsdWUiLCJpbnN0YW5jZSIsImdldEluc3RhbmNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQUlDLGdCQUFnQixHQUFHQyxXQUFXLENBQUNDLGNBQVosQ0FBMkJDLE1BQTNCLENBQWtDO0FBQ3JEQyxFQUFBQSxjQURxRCw0QkFDckM7QUFDWixTQUFLQyxNQUFMOztBQUNBLFNBQUtDLFlBQUwsQ0FBa0JDLHlCQUFsQixDQUE0Q0MsV0FBVyxDQUFDQyxhQUFaLENBQTBCQyxrQkFBdEUsRUFBMEYsS0FBS0MsZUFBL0YsRUFBZ0gsSUFBaEg7QUFDQSxTQUFLTCxZQUFMLENBQWtCQyx5QkFBbEIsQ0FBNENDLFdBQVcsQ0FBQ0MsYUFBWixDQUEwQkcsZUFBdEUsRUFBdUYsS0FBS0MsZ0JBQTVGLEVBQThHLElBQTlHO0FBQ0EsU0FBS1AsWUFBTCxDQUFrQkMseUJBQWxCLENBQTRDQyxXQUFXLENBQUNDLGFBQVosQ0FBMEJLLGFBQXRFLEVBQXFGLEtBQUtDLFVBQTFGLEVBQXNHLElBQXRHO0FBQ0gsR0FOb0Q7QUFPckRDLEVBQUFBLFlBUHFELDBCQU92QztBQUNWLFNBQUtYLE1BQUw7O0FBQ0EsU0FBS0MsWUFBTCxDQUFrQlcsNEJBQWxCLENBQStDVCxXQUFXLENBQUNDLGFBQVosQ0FBMEJDLGtCQUF6RSxFQUE2RixLQUFLQyxlQUFsRyxFQUFtSCxJQUFuSDtBQUNBLFNBQUtMLFlBQUwsQ0FBa0JXLDRCQUFsQixDQUErQ1QsV0FBVyxDQUFDQyxhQUFaLENBQTBCRyxlQUF6RSxFQUEwRixLQUFLQyxnQkFBL0YsRUFBaUgsSUFB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QSxFQUFFLENBQUNRLE9BQUgsQ0FBV0MsSUFBWDtBQUNBLFFBQUk4QixXQUFXLEdBQUcsSUFBSS9ELFdBQVcsQ0FBQ2dFLGFBQWhCLEdBQWdDUixTQUFoQyxDQUEwQzdDLEtBQTFDLENBQWxCOztBQUNBLFFBQUdvRCxXQUFXLENBQUNFLEVBQVosS0FBbUJDLFNBQW5CLElBQWdDSCxXQUFXLENBQUNFLEVBQVosS0FBbUIsSUFBdEQsRUFBMkQ7QUFDdkR6QyxNQUFBQSxFQUFFLENBQUNrQyxLQUFILENBQVNDLFNBQVQsQ0FBbUIsQ0FBbkIsRUFBc0JJLFdBQVcsQ0FBQ0UsRUFBbEM7QUFDSCxLQUZELE1BRUs7QUFDRHpDLE1BQUFBLEVBQUUsQ0FBQ2tDLEtBQUgsQ0FBU0MsU0FBVCxDQUFtQixDQUFuQixFQUFzQixrQkFBZ0JRLEtBQUssQ0FBQ0MsY0FBTixDQUFxQkwsV0FBVyxDQUFDTSxVQUFqQyxDQUF0QztBQUNIO0FBQ0o7QUFwRm9ELENBQWxDLENBQXZCO0FBdUZBLElBQUlDLFFBQVEsR0FBRyxJQUFmOztBQUNBLElBQUlDLFdBQVcsR0FBRyxTQUFkQSxXQUFjLEdBQVk7QUFDMUIsTUFBR0QsUUFBUSxJQUFJLElBQWYsRUFDSUEsUUFBUSxHQUFHLElBQUk5RSxnQkFBSixDQUFxQixVQUFyQixFQUFpQyxRQUFqQyxDQUFYO0FBQ0osU0FBTzhFLFFBQVA7QUFDSCxDQUpEOztBQUtBN0UsV0FBVyxDQUFDRCxnQkFBWixHQUErQmdGLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsV0FBVyxFQUEzRCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsibGV0IFVJTWFuYWdlciA9IHJlcXVpcmUoXCJVSU1hbmFnZXJcIik7XG5sZXQgUG9ydGFsQ29udHJvbGxlciA9IFNtYXJ0Rm94U0RLLkJhc2VDb250cm9sbGVyLmV4dGVuZCh7XG4gICAgcmVnaXN0ZXJFdmVudHMoKXtcbiAgICAgICAgdGhpcy5fc3VwZXIoKTtcbiAgICAgICAgdGhpcy5ab25lSW5zdGFuY2UuYWRkRXZlbnRMaXN0ZW5lckV4dGVuc2lvbihDYXNpbm9FdmVudC5SRVNQT05TRV9OQU1FLlRSQU5TRkVSX01PTkVZX1JFUywgdGhpcy5vblRyYW5zZmVyTW9uZXksIHRoaXMpO1xuICAgICAgICB0aGlzLlpvbmVJbnN0YW5jZS5hZGRFdmVudExpc3RlbmVyRXh0ZW5zaW9uKENhc2lub0V2ZW50LlJFU1BPTlNFX05BTUUuQ0hBTkdFX1BBU1NfUkVTLCB0aGlzLm9uQ2hhbmdlUGFzc3dvcmQsIHRoaXMpO1xuICAgICAgICB0aGlzLlpvbmVJbnN0YW5jZS5hZGRFdmVudExpc3RlbmVyRXh0ZW5zaW9uKENhc2lub0V2ZW50LlJFU1BPTlNFX05BTUUuR0lGVF9DT0RFX1JFUywgdGhpcy5vbkdpZnRDb2RlLCB0aGlzKTtcbiAgICB9LFxuICAgIHJlbW92ZUV2ZW50cygpe1xuICAgICAgICB0aGlzLl9zdXBlcigpO1xuICAgICAgICB0aGlzLlpvbmVJbnN0YW5jZS5yZW1vdmVFdmVudExpc3RlbmVyRXh0ZW5zaW9uKENhc2lub0V2ZW50LlJFU1BPTlNFX05BTUUuVFJBTlNGRVJfTU9ORVlfUkVTLCB0aGlzLm9uVHJhbnNmZXJNb25leSwgdGhpcyk7XG4gICAgICAgIHRoaXMuWm9uZUluc3RhbmNlLnJlbW92ZUV2ZW50TGlzdGVuZXJFeHRlbnNpb24oQ2FzaW5vRXZlbnQuUkVTUE9OU0VfTkFNRS5DSEFOR0VfUEFTU19SRVMsIHRoaXMub25DaGFuZ2VQYXNzd29yZCwgdGhpcyk7XG4gICAgICAgIHRoaXMuWm9uZUluc3RhbmNlLnJlbW92ZUV2ZW50TGlzdGVuZXJFeHRlbnNpb24oQ2FzaW5vRXZlbnQuUkVTUE9OU0VfTkFNRS5HSUZUX0NPREVfUkVTLCB0aGlzLm9uR2lmdENvZGUsIHRoaXMpO1xuICAgIH0sXG4gICAgb25FdmVudENvbm5lY3Rpb24oZXZlbnQpe1xuICAgICAgICBpZihldmVudC5zdWNjZXNzKXtcbiAgICAgICAgICAgIGlmKHRoaXMucmVnaXN0ZXIpe1xuICAgICAgICAgICAgICAgIHRoaXMucmVnaXN0ZXIgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBsZXQgdWlSZWdpc3RlciA9IFVJTWFuYWdlci5nZXRVSUZyb21OYW1lKFwiVUlSZWdpc3RlclwiKTtcbiAgICAgICAgICAgICAgICB1aVJlZ2lzdGVyLmdldENvbXBvbmVudCh1aVJlZ2lzdGVyLm5hbWUpLmV2ZW50Q2xpY2tSZWdpc3RlcigpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dpblpvbmUodGhpcy51biwgdGhpcy5wYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLl9yZXNldCgpO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBvbkV2ZW50TG9naW4oZXZlbnQpe1xuICAgICAgICB0aGlzLl9zdXBlcihldmVudCk7XG4gICAgICAgIG1tLmlzTG9naW4gPSB0cnVlO1xuICAgICAgICBVSU1hbmdlci5zaG93KFwiVUlIb21lXCIpO1xuICAgICAgICBDb25maWcuc2F2ZVVzZXJuYW1lKHRoaXMudW4pO1xuICAgICAgICBDb25maWcuc2F2ZVBhc3ModGhpcy5wYXNzKTtcbiAgICB9LFxuICAgIG9uSGlzdG9yeUV2ZW50KGV2ZW50KXtcbiAgICAgICAgbW0uTG9hZGluZy5oaWRlKCk7XG4gICAgICAgIGxldCBkYXRhID0gZXZlbnQuZ2V0U0FycmF5KFwiZFwiKTtcbiAgICAgICAgbGV0IGl0ZW1zID0gW107XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBkYXRhLnNpemUoKTsgaSsrKXtcbiAgICAgICAgICAgIGxldCBzSXRlbSA9IGRhdGEuZ2V0KGkpLmdldE9iamVjdCgpO1xuICAgICAgICAgICAgbGV0IGl0ZW0gPSB7fTtcbiAgICAgICAgICAgIGl0ZW0uc2Vzc2lvbiA9IGkgKyAxO1xuICAgICAgICAgICAgaXRlbS50aW1lID0gc0l0ZW0uZ2V0VXRmU3RyaW5nKFwidFwiKTtcbiAgICAgICAgICAgIGl0ZW0uYW1vdW50ID0gc0l0ZW0uZ2V0RG91YmxlKFwiYW1cIik7XG4gICAgICAgICAgICBpdGVtLmNoaXAgPSBzSXRlbS5nZXREb3VibGUoXCJjXCIpO1xuICAgICAgICAgICAgaXRlbS50YXggPSBzSXRlbS5nZXREb3VibGUoXCJ0eFwiKTtcbiAgICAgICAgICAgIGl0ZW0uZGVzID0gc0l0ZW0uZ2V0VXRmU3RyaW5nKFwiZGVzXCIpO1xuICAgICAgICAgICAgaXRlbXMucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgICAgICBVSU1hbmdlci5zaG93KFwiVUlCYW5rTG9nXCIsIHtwb3A6IHRydWUsIHNyYzogJ3BvcnRhbCcsIGRhdGE6IHtpdGVtczogaXRlbXN9fSk7XG4gICAgfSxcbiAgICBvblRyYW5zZmVyTW9uZXkoZXZlbnQpe1xuICAgICAgICBsZXQgdHJhbnNmZXIgPSBuZXcgQ2FzaW5vRXZlbnQuVHJhbnNmZXJNb25leUV2ZW50KCkuZnJvbUV2ZW50KGV2ZW50KTtcbiAgICAgICAgbGV0IGNvZGUgPSB0cmFuc2Zlci5jb2RlO1xuICAgICAgICBpZihjb2RlID09IDEpe1xuICAgICAgICAgICAgLy8gdHJ1ZVxuICAgICAgICAgICAgbW0uVG9hc3Quc2hvd1RvYXN0KDEsIFwiQ2h1eeG7g24gdGnhu4FuIHRow6BuaCBjw7RuZ1wiKTtcbiAgICAgICAgfWVsc2UgaWYoY29kZSA9PSAwKXtcbiAgICAgICAgICAgIC8vIGZhbHNlXG4gICAgICAgICAgICBtbS5Ub2FzdC5zaG93VG9hc3QoMSwgXCJUw6BpIGtob+G6o24gbmjhuq1uIGtow7RuZyDEkcO6bmdcIik7XG4gICAgICAgIH1lbHNlIGlmKGNvZGUgPT0gMil7XG4gICAgICAgICAgICBtbS5Ub2FzdC5zaG93VG9hc3QoMSwgXCJC4bqhbiBraMO0bmcgxJHhu6cgc+G7kSBkxrBcIik7XG4gICAgICAgIH1cbiAgICAgICAgbW0uTG9hZGluZy5oaWRlKCk7XG4gICAgfSxcbiAgICBvbkNoYW5nZVBhc3N3b3JkKGV2ZW50KXtcbiAgICAgICAgbGV0IGNoYW5nZVBhc3MgPSBuZXcgQ2FzaW5vRXZlbnQuQ2hhbmdlUGFzc0V2ZW50KCkuZnJvbUV2ZW50KGV2ZW50KTtcbiAgICAgICAgbGV0IGNvZGUgPSBjaGFuZ2VQYXNzLmNvZGU7XG4gICAgICAgIGlmKGNvZGUgPT0gMSl7XG4gICAgICAgICAgICAvLyB0cnVlXG4gICAgICAgICAgICBDb25maWcuY2xlYXJVc2VyUGFzcygpO1xuICAgICAgICAgICAgbW0uVG9hc3Quc2hvd1RvYXN0KDEsIFwixJDhu5VpIG3huq10IGto4bqpdSB0aMOgbmggY8O0bmdcIik7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgLy8gZmFsc2VcbiAgICAgICAgICAgIG1tLlRvYXN0LnNob3dUb2FzdCgxLCBcIsSQ4buVaSBt4bqtdCBraOG6qXUgdGjhuqV0IGLhuqFpXCIpO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBvbkdpZnRDb2RlKGV2ZW50KXtcbiAgICAgICAgbW0uTG9hZGluZy5oaWRlKCk7XG4gICAgICAgIGxldCBnaWZ0Q29kZVJlcyA9IG5ldyBDYXNpbm9FdmVudC5HaWZ0Q29kZUV2ZW50KCkuZnJvbUV2ZW50KGV2ZW50KTtcbiAgICAgICAgaWYoZ2lmdENvZGVSZXMuZWMgIT09IHVuZGVmaW5lZCAmJiBnaWZ0Q29kZVJlcy5lYyAhPT0gbnVsbCl7XG4gICAgICAgICAgICBtbS5Ub2FzdC5zaG93VG9hc3QoMSwgZ2lmdENvZGVSZXMuZWMpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIG1tLlRvYXN0LnNob3dUb2FzdCgxLCBcIkLhuqFuIMSRxrDhu6NjIHF1w6AgXCIrVXRpbHMuYWRkRG90VG9OdW1iZXIoZ2lmdENvZGVSZXMuZ2lmdF92YWx1ZSkpO1xuICAgICAgICB9XG4gICAgfSxcblxufSk7XG5sZXQgaW5zdGFuY2UgPSBudWxsO1xubGV0IGdldEluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmKGluc3RhbmNlID09IG51bGwpXG4gICAgICAgIGluc3RhbmNlID0gbmV3IFBvcnRhbENvbnRyb2xsZXIoXCJVSVBvcnRhbFwiLCAncG9ydGFsJyk7XG4gICAgcmV0dXJuIGluc3RhbmNlO1xufVxuU21hcnRGb3hTREsuUG9ydGFsQ29udHJvbGxlciA9IG1vZHVsZS5leHBvcnRzID0gZ2V0SW5zdGFuY2UoKTtcbiJdfQ==