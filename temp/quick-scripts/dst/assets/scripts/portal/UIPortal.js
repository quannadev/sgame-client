
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/portal/UIPortal.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f6ef9eiwYxF8IQ0CLghykqY', 'UIPortal');
// scripts/portal/UIPortal.js

"use strict";

cc.Class({
  "extends": cc.VozBaseComponent,
  properties: {
    hoiXoayDapXoay: cc.Node,
    progressBar: cc.ProgressBar,
    lb_loading: cc.Label,
    lbUpdate: cc.Label
  },
  onEnable: function onEnable() {
    cc.debug.setDisplayStats(false);
    this.updateProcess(0);

    if (!cc.sys.isNative) {
      this.scheduleOnce(this.loadResources, 0);
    } else {
      if (cc.isValid(this.hoiXoayDapXoay)) {
        var self = this;
        var script = this.hoiXoayDapXoay.getComponent("HoiXoayServer");
        script.hotUpdate(function () {
          self.scheduleOnce(self.loadResources, 0);
        });
      } else {
        this.scheduleOnce(this.loadResources, 0);
      }
    }
  },
  loadResources: function loadResources() {
    var self = this;
    var ui = [];
    this.lbUpdate.string = "Tải tài nguyên, không tốn dung lượng.";
    ui.push('UIHome');
    ui.push('UILogin');
    ui.push('taixiu/UITaiXiu');
    ui.push('taixiu/UITaiXiuSoiCau');
    ui.push('taixiu/UITaiXiuSessionDetail');

    if (cc.sys.os === cc.sys.OS_ANDROID || cc.sys.os === cc.sys.OS_IOS) {
      ui.push('UIRegister');
      ui.push('UILobby');
      ui.push('UIDialogOne');
      ui.push('UIDialogBuyIn');
      ui.push('portal/UIMenu');
      ui.push('portal/UIPayment');
      ui.push('rongho/UIRongHo');
      ui.push('xocdia/UIXocDia');
      ui.push('tlmn/UITLMN');
      ui.push('bacay/UIBaCay');
      ui.push('maubinh/UIMauBinh');
      ui.push('baccarat/UIBaccarat');
      ui.push('zeus/UIZeus');
      ui.push('kimcuong/UIKimCuong');
      ui.push('minipoker/UIMiniPoker');
      ui.push('candy/UICandy');
      ui.push('roulette/UIRoulette');
      ui.push('baccarat/UIBaccarat');
    }

    cc.loader.loadResArray(ui, cc.Asset, function (completedCount, totalCount, item) {
      self.updateProcess(completedCount / totalCount);
    }, function (err, assets) {
      if (err) {
        console.log(err);
        return;
      }

      for (var i = 0; i < assets.length; i++) {
        cc.loader.setAutoReleaseRecursively(assets[i], true);
      }

      self.loadFinish();
    });
  },
  updateProcess: function updateProcess(process) {
    var percent = parseFloat(process);
    this.progressBar.progress = percent;
    this.lb_loading.string = Math.floor(percent * 100) + "%";
  },
  loadFinish: function loadFinish() {
    this.show('UIHome');
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,