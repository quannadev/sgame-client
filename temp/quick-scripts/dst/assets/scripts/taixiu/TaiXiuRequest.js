
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/taixiu/TaiXiuRequest.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '44e56M9KuFB6pnqHb2NPffu', 'TaiXiuRequest');
// scripts/taixiu/TaiXiuRequest.js

"use strict";

var TaiXiuRequest = {};
TaiXiuRequest.REQUEST_NAME = {
  BET_REQUEST: "tx1",
  SESSION_DETAIL: "tx4",
  SOI_CAU_REQUEST: "tx5",
  TAN_LOC_REQUEST: "tx6",
  RUT_LOC_REQUEST: "tx7",
  HISTORY_TAN_LOC_REQUEST: "tx8",
  HISTORY_RUT_LOC_REQUEST: "tx9",
  TOP_BET_REQUEST: "tx10",
  TOP_BET_RULE_REQUEST: "tx12",
  RANK_TAN_LOC_REQUEST: "tx13",
  RANK_RUT_LOC_REQUEST: "tx14",
  TOP_REWARD_RES_REQUEST: "tx16"
};
TaiXiuRequest._BaseRequest = SmartFoxSDK.Class.extend({
  ctor: function ctor(name) {
    this._requestName = name;
    this._params = new SmartFoxSDK.SObject();
    this._roomId = SmartFoxSDK.TaiXiuController.ZoneInstance.getRoomByName("taixiu").id;
  },
  setRoomId: function setRoomId(id) {
    this._roomId = id;
    return this;
  },
  getRequestName: function getRequestName() {
    return this._requestName;
  },
  toSRequest: function toSRequest() {
    return new SmartFoxSDK.SmartFox.Requests.System.ExtensionRequest(this._requestName, this._params, this._roomId);
  }
});
TaiXiuRequest.BetRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.BET_REQUEST);
  },
  setTypePot: function setTypePot(type) {
    this._params.putByte("t", type);

    return this;
  },
  setBetChip: function setBetChip(betChip) {
    this._params.putDouble("b", betChip);

    return this;
  }
});
TaiXiuRequest.SoiCauRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.SOI_CAU_REQUEST);
  }
});
TaiXiuRequest.SessionDetailRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.SESSION_DETAIL);
  },
  setSessionId: function setSessionId(referenceId) {
    this._params.putDouble("id", referenceId);

    return this;
  }
});
TaiXiuRequest.TanLocRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.TAN_LOC_REQUEST);
  },
  setChip: function setChip(chip) {
    this._params.putDouble("c", chip);

    return this;
  }
});
TaiXiuRequest.RutLocRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.RUT_LOC_REQUEST);
  }
});
TaiXiuRequest.HistoryTanLocRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.HISTORY_TAN_LOC_REQUEST);
  }
});
TaiXiuRequest.HistoryRutLocRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.HISTORY_RUT_LOC_REQUEST);
  }
});
TaiXiuRequest.TopBetRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.TOP_BET_REQUEST);
  }
});
TaiXiuRequest.TopBetRuleRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.TOP_BET_RULE_REQUEST);
  }
});
TaiXiuRequest.RankRutLocRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.RANK_RUT_LOC_REQUEST);
  }
});
TaiXiuRequest.TopRewardResRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.TOP_REWARD_RES_REQUEST);
  }
});
TaiXiuRequest.RankTanLocRequest = TaiXiuRequest._BaseRequest.extend({
  ctor: function ctor() {
    this._super(TaiXiuRequest.REQUEST_NAME.RANK_TAN_LOC_REQUEST);
  }
});
window.TaiXiuRequest = TaiXiuRequest;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdGFpeGl1XFxUYWlYaXVSZXF1ZXN0LmpzIl0sIm5hbWVzIjpbIlRhaVhpdVJlcXVlc3QiLCJSRVFVRVNUX05BTUUiLCJCRVRfUkVRVUVTVCIsIlNFU1NJT05fREVUQUlMIiwiU09JX0NBVV9SRVFVRVNUIiwiVEFOX0xPQ19SRVFVRVNUIiwiUlVUX0xPQ19SRVFVRVNUIiwiSElTVE9SWV9UQU5fTE9DX1JFUVVFU1QiLCJISVNUT1JZX1JVVF9MT0NfUkVRVUVTVCIsIlRPUF9CRVRfUkVRVUVTVCIsIlRPUF9CRVRfUlVMRV9SRVFVRVNUIiwiUkFOS19UQU5fTE9DX1JFUVVFU1QiLCJSQU5LX1JVVF9MT0NfUkVRVUVTVCIsIlRPUF9SRVdBUkRfUkVTX1JFUVVFU1QiLCJfQmFzZVJlcXVlc3QiLCJTbWFydEZveFNESyIsIkNsYXNzIiwiZXh0ZW5kIiwiY3RvciIsIm5hbWUiLCJfcmVxdWVzdE5hbWUiLCJfcGFyYW1zIiwiU09iamVjdCIsIl9yb29tSWQiLCJUYWlYaXVDb250cm9sbGVyIiwiWm9uZUluc3RhbmNlIiwiZ2V0Um9vbUJ5TmFtZSIsImlkIiwic2V0Um9vbUlkIiwiZ2V0UmVxdWVzdE5hbWUiLCJ0b1NSZXF1ZXN0IiwiU21hcnRGb3giLCJSZXF1ZXN0cyIsIlN5c3RlbSIsIkV4dGVuc2lvblJlcXVlc3QiLCJCZXRSZXF1ZXN0IiwiX3N1cGVyIiwic2V0VHlwZVBvdCIsInR5cGUiLCJwdXRCeXRlIiwic2V0QmV0Q2hpcCIsImJldENoaXAiLCJwdXREb3VibGUiLCJTb2lDYXVSZXF1ZXN0IiwiU2Vzc2lvbkRldGFpbFJlcXVlc3QiLCJzZXRTZXNzaW9uSWQiLCJyZWZlcmVuY2VJZCIsIlRhbkxvY1JlcXVlc3QiLCJzZXRDaGlwIiwiY2hpcCIsIlJ1dExvY1JlcXVlc3QiLCJIaXN0b3J5VGFuTG9jUmVxdWVzdCIsIkhpc3RvcnlSdXRMb2NSZXF1ZXN0IiwiVG9wQmV0UmVxdWVzdCIsIlRvcEJldFJ1bGVSZXF1ZXN0IiwiUmFua1J1dExvY1JlcXVlc3QiLCJUb3BSZXdhcmRSZXNSZXF1ZXN0IiwiUmFua1RhbkxvY1JlcXVlc3QiLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsYUFBYSxHQUFHLEVBQXBCO0FBQ0FBLGFBQWEsQ0FBQ0MsWUFBZCxHQUE2QjtBQUN6QkMsRUFBQUEsV0FBVyxFQUFHLEtBRFc7QUFFekJDLEVBQUFBLGNBQWMsRUFBRyxLQUZRO0FBR3pCQyxFQUFBQSxlQUFlLEVBQUUsS0FIUTtBQUl6QkMsRUFBQUEsZUFBZSxFQUFFLEtBSlE7QUFLekJDLEVBQUFBLGVBQWUsRUFBRSxLQUxRO0FBTXpCQyxFQUFBQSx1QkFBdUIsRUFBRSxLQU5BO0FBT3pCQyxFQUFBQSx1QkFBdUIsRUFBRSxLQVBBO0FBUXpCQyxFQUFBQSxlQUFlLEVBQUUsTUFSUTtBQVN6QkMsRUFBQUEsb0JBQW9CLEVBQUUsTUFURztBQVV6QkMsRUFBQUEsb0JBQW9CLEVBQUUsTUFWRztBQVd6QkMsRUFBQUEsb0JBQW9CLEVBQUUsTUFYRztBQVl6QkMsRUFBQUEsc0JBQXNCLEVBQUU7QUFaQyxDQUE3QjtBQWNBYixhQUFhLENBQUNjLFlBQWQsR0FBNkJDLFdBQVcsQ0FBQ0MsS0FBWixDQUFrQkMsTUFBbEIsQ0FBeUI7QUFDbERDLEVBQUFBLElBRGtELGdCQUM3Q0MsSUFENkMsRUFDeEM7QUFDTixTQUFLQyxZQUFMLEdBQW9CRCxJQUFwQjtBQUNBLFNBQUtFLE9BQUwsR0FBZSxJQUFJTixXQUFXLENBQUNPLE9BQWhCLEVBQWY7QUFDQSxTQUFLQyxPQUFMLEdBQWVSLFdBQVcsQ0FBQ1MsZ0JBQVosQ0FBNkJDLFlBQTdCLENBQTBDQyxhQUExQyxDQUF3RCxRQUF4RCxFQUFrRUMsRUFBakY7QUFDSCxHQUxpRDtBQU1sREMsRUFBQUEsU0FOa0QscUJBTXhDRCxFQU53QyxFQU1yQztBQUNULFNBQUtKLE9BQUwsR0FBZUksRUFBZjtBQUNBLFdBQU8sSUFBUDtBQUNILEdBVGlEO0FBVWxERSxFQUFBQSxjQVZrRCw0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Q0FBMkJVLG9CQUF2QztBQUNIO0FBSCtELENBQWxDLENBQWxDO0FBS0ErQyxNQUFNLENBQUMxRCxhQUFQLEdBQXVCQSxhQUF2QiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsibGV0IFRhaVhpdVJlcXVlc3QgPSB7fTtcclxuVGFpWGl1UmVxdWVzdC5SRVFVRVNUX05BTUUgPSB7XHJcbiAgICBCRVRfUkVRVUVTVCA6IFwidHgxXCIsXHJcbiAgICBTRVNTSU9OX0RFVEFJTCA6IFwidHg0XCIsXHJcbiAgICBTT0lfQ0FVX1JFUVVFU1Q6IFwidHg1XCIsXHJcbiAgICBUQU5fTE9DX1JFUVVFU1Q6IFwidHg2XCIsXHJcbiAgICBSVVRfTE9DX1JFUVVFU1Q6IFwidHg3XCIsXHJcbiAgICBISVNUT1JZX1RBTl9MT0NfUkVRVUVTVDogXCJ0eDhcIixcclxuICAgIEhJU1RPUllfUlVUX0xPQ19SRVFVRVNUOiBcInR4OVwiLFxyXG4gICAgVE9QX0JFVF9SRVFVRVNUOiBcInR4MTBcIixcclxuICAgIFRPUF9CRVRfUlVMRV9SRVFVRVNUOiBcInR4MTJcIixcclxuICAgIFJBTktfVEFOX0xPQ19SRVFVRVNUOiBcInR4MTNcIixcclxuICAgIFJBTktfUlVUX0xPQ19SRVFVRVNUOiBcInR4MTRcIixcclxuICAgIFRPUF9SRVdBUkRfUkVTX1JFUVVFU1Q6IFwidHgxNlwiLFxyXG59XHJcblRhaVhpdVJlcXVlc3QuX0Jhc2VSZXF1ZXN0ID0gU21hcnRGb3hTREsuQ2xhc3MuZXh0ZW5kKHtcclxuICAgIGN0b3IobmFtZSl7XHJcbiAgICAgICAgdGhpcy5fcmVxdWVzdE5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuX3BhcmFtcyA9IG5ldyBTbWFydEZveFNESy5TT2JqZWN0KCk7XHJcbiAgICAgICAgdGhpcy5fcm9vbUlkID0gU21hcnRGb3hTREsuVGFpWGl1Q29udHJvbGxlci5ab25lSW5zdGFuY2UuZ2V0Um9vbUJ5TmFtZShcInRhaXhpdVwiKS5pZDtcclxuICAgIH0sXHJcbiAgICBzZXRSb29tSWQoaWQpe1xyXG4gICAgICAgIHRoaXMuX3Jvb21JZCA9IGlkO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfSxcclxuICAgIGdldFJlcXVlc3ROYW1lKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3ROYW1lO1xyXG4gICAgfSxcclxuICAgIHRvU1JlcXVlc3QoKXtcclxuICAgICAgICByZXR1cm4gbmV3IFNtYXJ0Rm94U0RLLlNtYXJ0Rm94LlJlcXVlc3RzLlN5c3RlbS5FeHRlbnNpb25SZXF1ZXN0KHRoaXMuX3JlcXVlc3ROYW1lLCB0aGlzLl9wYXJhbXMsIHRoaXMuX3Jvb21JZCk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuVGFpWGl1UmVxdWVzdC5CZXRSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5CRVRfUkVRVUVTVCk7XHJcbiAgICB9LFxyXG4gICAgc2V0VHlwZVBvdCh0eXBlKXtcclxuICAgICAgICB0aGlzLl9wYXJhbXMucHV0Qnl0ZShcInRcIiwgdHlwZSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9LFxyXG4gICAgc2V0QmV0Q2hpcChiZXRDaGlwKXtcclxuICAgICAgICB0aGlzLl9wYXJhbXMucHV0RG91YmxlKFwiYlwiLCBiZXRDaGlwKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxufSlcclxuVGFpWGl1UmVxdWVzdC5Tb2lDYXVSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5TT0lfQ0FVX1JFUVVFU1QpO1xyXG4gICAgfVxyXG59KVxyXG5UYWlYaXVSZXF1ZXN0LlNlc3Npb25EZXRhaWxSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5TRVNTSU9OX0RFVEFJTCk7XHJcbiAgICB9LFxyXG4gICAgc2V0U2Vzc2lvbklkKHJlZmVyZW5jZUlkKXtcclxuICAgICAgICB0aGlzLl9wYXJhbXMucHV0RG91YmxlKFwiaWRcIiwgcmVmZXJlbmNlSWQpO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG59KVxyXG5UYWlYaXVSZXF1ZXN0LlRhbkxvY1JlcXVlc3QgPSBUYWlYaXVSZXF1ZXN0Ll9CYXNlUmVxdWVzdC5leHRlbmQoe1xyXG4gICAgY3Rvcigpe1xyXG4gICAgICAgIHRoaXMuX3N1cGVyKFRhaVhpdVJlcXVlc3QuUkVRVUVTVF9OQU1FLlRBTl9MT0NfUkVRVUVTVCk7XHJcbiAgICB9LFxyXG4gICAgc2V0Q2hpcChjaGlwKXtcclxuICAgICAgICB0aGlzLl9wYXJhbXMucHV0RG91YmxlKFwiY1wiLCBjaGlwKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxufSlcclxuVGFpWGl1UmVxdWVzdC5SdXRMb2NSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5SVVRfTE9DX1JFUVVFU1QpO1xyXG4gICAgfVxyXG59KVxyXG5UYWlYaXVSZXF1ZXN0Lkhpc3RvcnlUYW5Mb2NSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5ISVNUT1JZX1RBTl9MT0NfUkVRVUVTVCk7XHJcbiAgICB9XHJcbn0pXHJcblRhaVhpdVJlcXVlc3QuSGlzdG9yeVJ1dExvY1JlcXVlc3QgPSBUYWlYaXVSZXF1ZXN0Ll9CYXNlUmVxdWVzdC5leHRlbmQoe1xyXG4gICAgY3Rvcigpe1xyXG4gICAgICAgIHRoaXMuX3N1cGVyKFRhaVhpdVJlcXVlc3QuUkVRVUVTVF9OQU1FLkhJU1RPUllfUlVUX0xPQ19SRVFVRVNUKTtcclxuICAgIH1cclxufSlcclxuVGFpWGl1UmVxdWVzdC5Ub3BCZXRSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5UT1BfQkVUX1JFUVVFU1QpO1xyXG4gICAgfVxyXG59KVxyXG5UYWlYaXVSZXF1ZXN0LlRvcEJldFJ1bGVSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5UT1BfQkVUX1JVTEVfUkVRVUVTVCk7XHJcbiAgICB9XHJcbn0pXHJcblRhaVhpdVJlcXVlc3QuUmFua1J1dExvY1JlcXVlc3QgPSBUYWlYaXVSZXF1ZXN0Ll9CYXNlUmVxdWVzdC5leHRlbmQoe1xyXG4gICAgY3Rvcigpe1xyXG4gICAgICAgIHRoaXMuX3N1cGVyKFRhaVhpdVJlcXVlc3QuUkVRVUVTVF9OQU1FLlJBTktfUlVUX0xPQ19SRVFVRVNUKTtcclxuICAgIH1cclxufSlcclxuVGFpWGl1UmVxdWVzdC5Ub3BSZXdhcmRSZXNSZXF1ZXN0ID0gVGFpWGl1UmVxdWVzdC5fQmFzZVJlcXVlc3QuZXh0ZW5kKHtcclxuICAgIGN0b3IoKXtcclxuICAgICAgICB0aGlzLl9zdXBlcihUYWlYaXVSZXF1ZXN0LlJFUVVFU1RfTkFNRS5UT1BfUkVXQVJEX1JFU19SRVFVRVNUKTtcclxuICAgIH1cclxufSlcclxuVGFpWGl1UmVxdWVzdC5SYW5rVGFuTG9jUmVxdWVzdCA9IFRhaVhpdVJlcXVlc3QuX0Jhc2VSZXF1ZXN0LmV4dGVuZCh7XHJcbiAgICBjdG9yKCl7XHJcbiAgICAgICAgdGhpcy5fc3VwZXIoVGFpWGl1UmVxdWVzdC5SRVFVRVNUX05BTUUuUkFOS19UQU5fTE9DX1JFUVVFU1QpO1xyXG4gICAgfVxyXG59KVxyXG53aW5kb3cuVGFpWGl1UmVxdWVzdCA9IFRhaVhpdVJlcXVlc3Q7XHJcbiJdfQ==