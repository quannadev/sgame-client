{"version":3,"sources":["assets/scripts/MiniGame.js"],"names":["MiniGame","cc","Class","VozBaseComponent","properties","bgAll","Node","BG","ICON","statics","inst","onLoad","window","active","node","zIndex","lastZIndex","showIcon","eventClickMini","event","target","move","getComponent","isMove","_isMove","showGames","hideGames","rotation","rotateBy","scaleBig","scaleTo","scaleSmall","fadeIn","hideBg","opacity","scale","spawn1","spawn","sequence","delayTime","runAction","fadeout","self","callFunc","onSelectGame","game","mm","isLogin","gameController","PortalManager","getGameController","Loading","show","loginZone","Config","getUsername","getPass","pop"],"mappings":"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","sourceRoot":"/","sourcesContent":["let MiniGame = cc.Class({\n    extends: cc.VozBaseComponent,\n\n    properties: {\n        bgAll: cc.Node,\n        BG: cc.Node,\n        ICON: cc.Node\n    },\n    statics: {\n        inst:  null,\n    },\n    onLoad(){\n        MiniGame.inst = this;\n        window.MiniGame = this;\n        this.BG.active = false;\n        this.node.zIndex = cc.lastZIndex+1;\n        this.ICON.active  = false;\n        this.bgAll.active = false;\n    },\n    showIcon(){\n        this.ICON.active = true;\n    },\n    eventClickMini(event){\n        let target = event.target;\n        let move = target.getComponent(\"Move\");\n        if(move && move.isMove()){\n            move._isMove = false;\n            return;\n        }\n\n        let BG = this.BG.active;\n        if(!BG){\n            this.showGames();\n        }else{\n            this.hideGames();\n        }\n    },\n    showGames(){\n        this.BG.active    = true;\n        this.bgAll.active  = true;\n\n        let rotation    = cc.rotateBy(0.6, 8*360);\n        let scaleBig    = cc.scaleTo(0.4, 1.1);\n        let scaleSmall  = cc.scaleTo(0.2, 1);\n        let fadeIn      = cc.fadeIn(0.6);\n        let hideBg     = cc.fadeIn(0.6);\n\n        this.BG.opacity    = 0;\n        this.bgAll.opacity = 0;\n        this.BG.scale      = 0;\n        let spawn1         = cc.spawn(rotation, scaleBig, fadeIn, cc.sequence(cc.delayTime(0.4), scaleSmall));\n        this.bgAll.runAction(hideBg);\n        this.BG.runAction(spawn1);\n    },\n    hideGames(){\n        let rotation    = cc.rotateBy(0.6, 8*360);\n        let scaleBig    = cc.scaleTo(0.2, 1.1);\n        let scaleSmall  = cc.scaleTo(0.4, 0);\n        let fadeout     = cc.fadeIn(0.6);\n        let hideBg      = cc.fadeIn(0.6);\n        let spawn1      = cc.spawn(rotation, scaleBig, fadeout, cc.sequence(cc.delayTime(0.2), scaleSmall));\n        let self        = this;\n        this.bgAll.runAction(hideBg);\n        this.BG.runAction(cc.sequence(spawn1, cc.callFunc(function(){\n            self.BG.active      = false;\n            self.bgAll.active   = false;\n        })));\n    },\n    onSelectGame(event, game){\n        this.hideGames();\n        if(mm.isLogin) {\n           let gameController = PortalManager.getGameController(game);\n           if(gameController){\n               mm.Loading.show();\n               gameController.loginZone(Config.getUsername(), Config.getPass());\n           }\n        }else{\n            this.show(\"UILogin\", {pop: true});\n        }\n\n    }\n});\n"]}