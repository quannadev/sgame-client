{"version":3,"sources":["assets/scripts/kimcuong/KimCuongLine.js"],"names":["helper","require","cc","Class","Component","properties","nodeLine","Node","typeLine","init","obj","KCV","eventSelectAll","eventOpen","node","active","eventClose","total","getTotalLineSelect","addNotice","eventSelect","event","numberStr","numberLine","parseInt","setMaterialGray","target","getComponent","Sprite","isMaterialGray","data","updateString","eventBoChon","Promise","all","children","map","line","index","then","result","eventSelectChan","eventSelectLe","e","select","setNumberLines","setNumberStake","getTotalLineChan","getTotalLineLe","getTotalLine","i","length"],"mappings":";;;;;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAIJ,EAAE,CAACK,IADP;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAHP;AAOLC,EAAAA,IAAI,EAAE,cAASC,GAAT,EAAa;AACf,SAAKC,GAAL,GAAWD,GAAX;AACA,SAAKE,cAAL;AACH,GAVI;AAWLC,EAAAA,SAAS,EAAE,qBAAU;AACjB,SAAKC,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACH,GAbI;AAcLC,EAAAA,UAAU,EAAE,sBAAU;AAClB,QAAIC,KAAK,GAAG,KAAKC,kBAAL,EAAZ;;AACA,QAAI,KAAKJ,IAAL,CAAUC,MAAV,IAAoBE,KAAK,GAAG,CAAhC,EAAmC;AAC/B,WAAKN,GAAL,CAASQ,SAAT,CAAmB,qBAAnB;AACH,KAFD,MAEK;AACD,WAAKL,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;AACJ,GArBI;AAsBLK,EAAAA,WAAW,EAAE,qBAASC,KAAT,EAAgBC,SAAhB,EAA2B;AACpC,QAAIC,UAAU,GAAGC,QAAQ,CAACF,SAAD,CAAzB;AACAtB,IAAAA,MAAM,CAACyB,eAAP,CAAuBJ,KAAK,CAACK,MAAN,CAAaC,YAAb,CAA0BzB,EAAE,CAAC0B,MAA7B,CAAvB,EAA6D5B,MAAM,CAAC6B,cAAP,CAAsBR,KAAK,CAACK,MAAN,CAAaC,YAAb,CAA0BzB,EAAE,CAAC0B,MAA7B,CAAtB,CAA7D;AACA,SAAKE,IAAL,CAAUP,UAAV,IAAwBvB,MAAM,CAAC6B,cAAP,CAAsBR,KAAK,CAACK,MAAN,CAAaC,YAAb,CAA0BzB,EAAE,CAAC0B,MAA7B,CAAtB,CAAxB;AACA,SAAKG,YAAL;AACA,SAAKvB,QAAL,GAAgB,CAAhB;AACH,GA5BI;AA6BLwB,EAAAA,WAAW,EAAE,uBAAU;AAAA;;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5B,QAAL,CAAc6B,QAAd,CAAuBC,GAAvB,CAA2B,UAASC,IAAT,EAAeC,KAAf,EAAqB;AACxDtC,MAAAA,MAAM,CAACyB,eAAP,CAAuBY,IAAI,CAACV,YAAL,CAAkBzB,EAAE,CAAC0B,MAArB,CAAvB,EAAqD,IAArD;AACA,aAAO,KAAP;AACH,KAHW,CAAZ,EAGIW,IAHJ,CAGS,UAAAC,MAAM,EAAI;AACf,MAAA,KAAI,CAACV,IAAL,GAAYU,MAAZ;AACA,MAAA,KAAI,CAAChC,QAAL,GAAgB,CAAC,CAAjB;;AACA,MAAA,KAAI,CAACuB,YAAL;AACH,KAPD;AAQH,GAtCI;AAuCLU,EAAAA,eAAe,EAAE,2BAAW;AAAA;;AACxBR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5B,QAAL,CAAc6B,QAAd,CAAuBC,GAAvB,CAA2B,UAASC,IAAT,EAAeC,KAAf,EAAqB;AACxDtC,MAAAA,MAAM,CAACyB,eAAP,CAAuBY,IAAI,CAACV,YAAL,CAAkBzB,EAAE,CAAC0B,MAArB,CAAvB,EAAqDU,KAAK,GAAC,CAAN,IAAU,CAA/D;AACA,aAAOA,KAAK,GAAC,CAAN,IAAU,CAAjB;AACH,KAHW,CAAZ,EAGIC,IAHJ,CAGS,UAAAC,MAAM,EAAI;AACf,MAAA,MAAI,CAACV,IAAL,GAAYU,MAAZ;AACA,MAAA,MAAI,CAAChC,QAAL,GAAgB,CAAhB;;AACA,MAAA,MAAI,CAACuB,YAAL;AACH,KAPD;AAQH,GAhDI;AAiDLW,EAAAA,aAAa,EAAE,yBAAW;AAAA;;AACtBT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5B,QAAL,CAAc6B,QAAd,CAAuBC,GAAvB,CAA2B,UAASC,IAAT,EAAeC,KAAf,EAAqB;AACxDtC,MAAAA,MAAM,CAACyB,eAAP,CAAuBY,IAAI,CAACV,YAAL,CAAkBzB,EAAE,CAAC0B,MAArB,CAAvB,EAAqDU,KAAK,GAAC,CAAN,IAAU,CAA/D;AACA,aAAOA,KAAK,GAAC,CAAN,IAAW,CAAlB;AACH,KAHW,CAAZ,EAGIC,IAHJ,CAGS,UAAAC,MAAM,EAAI;AACf,MAAA,MAAI,CAACV,IAAL,GAAYU,MAAZ;AACA,MAAA,MAAI,CAAChC,QAAL,GAAgB,CAAhB;;AACA,MAAA,MAAI,CAACuB,YAAL;AACH,KAPD;AAQH,GA1DI;AA2DLnB,EAAAA,cAAc,EAAE,wBAAS+B,CAAT,EAAYC,MAAZ,EAAoB;AAAA;;AAChCX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5B,QAAL,CAAc6B,QAAd,CAAuBC,GAAvB,CAA2B,UAASC,IAAT,EAAeC,KAAf,EAAqB;AACxDtC,MAAAA,MAAM,CAACyB,eAAP,CAAuBY,IAAI,CAACV,YAAL,CAAkBzB,EAAE,CAAC0B,MAArB,CAAvB,EAAqD,KAArD;AACA,aAAO,IAAP;AACH,KAHW,CAAZ,EAGIW,IAHJ,CAGS,UAAAC,MAAM,EAAI;AACf,MAAA,MAAI,CAAChC,QAAL,GAAgB,CAAhB;AACA,MAAA,MAAI,CAACsB,IAAL,GAAYU,MAAZ;;AACA,MAAA,MAAI,CAACT,YAAL;AACH,KAPD;AASH,GArEI;AAsELA,EAAAA,YAAY,EAAE,wBAAY;AACvB,QAAId,KAAK,GAAG,KAAKC,kBAAL,EAAZ;AACC,SAAKP,GAAL,CAASkC,cAAT,CAAwB5B,KAAxB;AACA,SAAKN,GAAL,CAASmC,cAAT,CAAwB7B,KAAxB;AACH,GA1EI;AA2EL8B,EAAAA,gBA3EK,8BA2Ec;AACf,WAAO,EAAP;AACH,GA7EI;AA8ELC,EAAAA,cA9EK,4BA8EY;AACb,WAAO,EAAP;AACH,GAhFI;AAiFLC,EAAAA,YAjFK,0BAiFU;AACX,WAAO,EAAP;AACH,GAnFI;AAoFL/B,EAAAA,kBAAkB,EAAE,8BAAY;AAC5B,QAAID,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIiC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAE,KAAKpB,IAAL,CAAUqB,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,UAAI,KAAKpB,IAAL,CAAUoB,CAAV,CAAJ,EACIjC,KAAK;AACZ;;AACD,WAAOA,KAAP;AACH;AA3FI,CAAT","sourceRoot":"/","sourcesContent":["\nvar helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        nodeLine:   cc.Node,\n        typeLine: 0\n    },\n    init: function(obj){\n        this.KCV = obj;\n        this.eventSelectAll();\n    },\n    eventOpen: function(){\n        this.node.active = true;\n    },\n    eventClose: function(){\n        let total = this.getTotalLineSelect();\n        if (this.node.active && total < 1) {\n            this.KCV.addNotice('Chọn ít nhất 1 dòng');\n        }else{\n            this.node.active = false;\n        }\n    },\n    eventSelect: function(event, numberStr) {\n        let numberLine = parseInt(numberStr);\n        helper.setMaterialGray(event.target.getComponent(cc.Sprite), helper.isMaterialGray(event.target.getComponent(cc.Sprite)));\n        this.data[numberLine] = helper.isMaterialGray(event.target.getComponent(cc.Sprite));\n        this.updateString();\n        this.typeLine = 3;\n    },\n    eventBoChon: function(){\n        Promise.all(this.nodeLine.children.map(function(line, index){\n            helper.setMaterialGray(line.getComponent(cc.Sprite), true);\n            return false;\n        })).then(result => {\n            this.data = result;\n            this.typeLine = -1;\n            this.updateString();\n        });\n    },\n    eventSelectChan: function() {\n        Promise.all(this.nodeLine.children.map(function(line, index){\n            helper.setMaterialGray(line.getComponent(cc.Sprite), index%2 ==1);\n            return index%2 !=1;\n        })).then(result => {\n            this.data = result;\n            this.typeLine = 2;\n            this.updateString();\n        });\n    },\n    eventSelectLe: function() {\n        Promise.all(this.nodeLine.children.map(function(line, index){\n            helper.setMaterialGray(line.getComponent(cc.Sprite), index%2 ==0);\n            return index%2 != 0;\n        })).then(result => {\n            this.data = result;\n            this.typeLine = 1;\n            this.updateString();\n        });\n    },\n    eventSelectAll: function(e, select) {\n        Promise.all(this.nodeLine.children.map(function(line, index){\n            helper.setMaterialGray(line.getComponent(cc.Sprite), false);\n            return true;\n        })).then(result => {\n            this.typeLine = 0;\n            this.data = result;\n            this.updateString();\n        });\n\n    },\n    updateString: function () {\n       let total = this.getTotalLineSelect();\n        this.KCV.setNumberLines(total);\n        this.KCV.setNumberStake(total);\n    },\n    getTotalLineChan() {\n        return 10;\n    },\n    getTotalLineLe() {\n        return 10;\n    },\n    getTotalLine() {\n        return 20;\n    },\n    getTotalLineSelect: function () {\n        let total = 0;\n        for (let i=1; i< this.data.length; i++){\n            if (this.data[i])\n                total++;\n        }\n        return total;\n    }\n});\n"]}