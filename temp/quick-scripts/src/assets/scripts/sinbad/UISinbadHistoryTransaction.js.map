{"version":3,"sources":["assets\\scripts\\sinbad\\UISinbadHistoryTransaction.js"],"names":["Listview","require","cc","Class","VozBaseComponent","properties","listview","onLoad","listTransaction","numItems","length","onEnable","_data","items","eventClose","back","onListRender","item","idx","rank","getComponent","name","init","onListSelected","selectedId","lastSelectedId","val","list","listItem","_list","str","node","selectedMode","console","log","eventHistoryWin","eventAll"],"mappings":";;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,gBADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAMN;AADN,GAHP;AAMLO,EAAAA,MANK,oBAMI;AACL,SAAKC,eAAL,GAAuB,CACnB;AACI,iBAAgB,SADpB;AAEI,cAAc,mBAFlB;AAGI,gBAAa,MAHjB;AAII,aAAc;AAJlB,KADmB,EAOnB;AACI,iBAAgB,SADpB;AAEI,cAAc,mBAFlB;AAGI,gBAAa,MAHjB;AAII,aAAc;AAJlB,KAPmB,EAanB;AACI,iBAAgB,SADpB;AAEI,cAAc,mBAFlB;AAGI,gBAAa,MAHjB;AAII,aAAc;AAJlB,KAbmB,EAmBnB;AACI,iBAAgB,SADpB;AAEI,cAAc,mBAFlB;AAGI,gBAAa,MAHjB;AAII,aAAc;AAJlB,KAnBmB,EAyBnB;AACI,iBAAgB,SADpB;AAEI,cAAc,mBAFlB;AAGI,gBAAa,MAHjB;AAII,aAAc;AAJlB,KAzBmB,EA+BnB;AACI,iBAAgB,SADpB;AAEI,cAAc,mBAFlB;AAGI,gBAAa,MAHjB;AAII,aAAc;AAJlB,KA/BmB,CAAvB;AAuCA,SAAKF,QAAL,CAAcG,QAAd,GAAyB,KAAKD,eAAL,CAAqBE,MAA9C;AACH,GA/CI;AAgDLC,EAAAA,QAhDK,sBAgDK;AACN,QAAG,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWC,KAA5B,EAAkC;AAC9B,WAAKL,eAAL,GAAuB,KAAKI,KAAL,CAAWC,KAAlC;AACA,WAAKP,QAAL,CAAcG,QAAd,GAAyB,KAAKD,eAAL,CAAqBE,MAA9C;AACH;AACJ,GArDI;AAsDLI,EAAAA,UAtDK,wBAsDQ;AACT,SAAKC,IAAL;AACH,GAxDI;AAyDLC,EAAAA,YAzDK,wBAyDQC,IAzDR,EAyDcC,GAzDd,EAyDmB;AACpB,QAAIC,IAAI,GAAG,KAAKX,eAAL,CAAqBU,GAArB,CAAX;AACAD,IAAAA,IAAI,CAACG,YAAL,CAAkBH,IAAI,CAACI,IAAvB,EAA6BC,IAA7B,CAAkCH,IAAlC;AACH,GA5DI;AA6DLI,EAAAA,cA7DK,0BA6DUN,IA7DV,EA6DgBO,UA7DhB,EA6D4BC,cA7D5B,EA6D4CC,GA7D5C,EA6DiD;AAClD,QAAI,CAACT,IAAL,EACI;AACJ,QAAIU,IAAI,GAAGV,IAAI,CAACW,QAAL,CAAcC,KAAzB;AACA,QAAIC,GAAG,GAAG,qCAAqCH,IAAI,CAACI,IAAL,CAAUV,IAA/C,GAAsD,wBAAtD,GAAiFG,UAAjF,GAA8F,yBAA9F,GAA0HC,cAApI;;AACA,QAAIE,IAAI,CAACK,YAAL,IAAqB,CAAzB,EAA4B;AAAE;AAC1BF,MAAAA,GAAG,IAAI,uBAAuBJ,GAA9B;AACH;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,GAtEI;AAuELK,EAAAA,eAvEK,6BAuEa,CAEjB,CAzEI;AA0ELC,EAAAA,QA1EK,sBA0EM,CAEV;AA5EI,CAAT","sourceRoot":"/","sourcesContent":["const Listview = require('Listview');\r\ncc.Class({\r\n    extends: cc.VozBaseComponent,\r\n\r\n    properties: {\r\n        listview    : Listview,\r\n    },\r\n    onLoad() {\r\n        this.listTransaction = [\r\n            {\r\n                \"session\"     : \"1234567\",\r\n                \"time\"      : \"22/07/2020 19: 04\",\r\n                \"stakes\"   : \"1000\",\r\n                \"win\"       : \"10.000\"\r\n            },\r\n            {\r\n                \"session\"     : \"1234567\",\r\n                \"time\"      : \"22/07/2020 19: 04\",\r\n                \"stakes\"   : \"1000\",\r\n                \"win\"       : \"10.000\"\r\n            },\r\n            {\r\n                \"session\"     : \"1234567\",\r\n                \"time\"      : \"22/07/2020 19: 04\",\r\n                \"stakes\"   : \"1000\",\r\n                \"win\"       : \"10.000\"\r\n            },\r\n            {\r\n                \"session\"     : \"1234567\",\r\n                \"time\"      : \"22/07/2020 19: 04\",\r\n                \"stakes\"   : \"1000\",\r\n                \"win\"       : \"10.000\"\r\n            },\r\n            {\r\n                \"session\"     : \"1234567\",\r\n                \"time\"      : \"22/07/2020 19: 04\",\r\n                \"stakes\"   : \"1000\",\r\n                \"win\"       : \"10.000\"\r\n            },\r\n            {\r\n                \"session\"     : \"1234567\",\r\n                \"time\"      : \"22/07/2020 19: 04\",\r\n                \"stakes\"   : \"1000\",\r\n                \"win\"       : \"10.000\"\r\n            },\r\n\r\n        ];\r\n        this.listview.numItems = this.listTransaction.length;\r\n    },\r\n    onEnable(){\r\n        if(this._data && this._data.items){\r\n            this.listTransaction = this._data.items;\r\n            this.listview.numItems = this.listTransaction.length;\r\n        }\r\n    },\r\n    eventClose() {\r\n        this.back();\r\n    },\r\n    onListRender(item, idx) {\r\n        let rank = this.listTransaction[idx];\r\n        item.getComponent(item.name).init(rank);\r\n    },\r\n    onListSelected(item, selectedId, lastSelectedId, val) {\r\n        if (!item)\r\n            return;\r\n        let list = item.listItem._list;\r\n        let str = 'Danh sách hoạt động hiện tại là:' + list.node.name + '，Lựa chọn hiện tại là：' + selectedId + '，Lựa chọn cuối cùng là：' + lastSelectedId;\r\n        if (list.selectedMode == 2) { //Nếu nó là chế độ đa lựa chọn\r\n            str += '，Giá trị hiện tại：' + val;\r\n        }\r\n        console.log(str);\r\n    },\r\n    eventHistoryWin() {\r\n\r\n    },\r\n    eventAll() {\r\n\r\n    }\r\n});\r\n"]}