{"version":3,"sources":["assets/scripts/poker/PokerEvent.js"],"names":["PokerEvent","RESPONSE_NAME","FINISH_GAME_RES","STAND_UP_RES","LOAD_TABLE_INFO_RES","USER_SIT_ON_RES","USER_SIT_OUT_RES","START","PRE_START","KICK_USER_RES","USER_READY_RES","SHOW_DOWN_RES","USER_BET_RES","USER_CALL_RES","USER_CHECK_RES","USER_FOLD_RES","USER_RAISE_RES","USER_GOING_ALL_RES","GAME_TURN_RES","USER_TURN_RES","USER_BUY_IN_RES","LEVEL_TURN_RES","PAY_ANTE_RES","LoadTableInfoEvent","CasinoEvent","_BaseEvent","extend","ctor","_super","m_isGameStart","m_isPrestart","m_prestartTime","m_listDesk","m_listUserSitOut","m_listUser","m_listActiveUserName","m_listHandCard","m_listBetChip","m_listCommunityCard","m_potChip","m_dealer","m_smallBlind","m_bigBlind","fromEvent","event","param","get","getBool","getInt","getDouble","getUtfString","sfsListDesk","getSArray","i","size","desk","deskFromSObject","getObject","push","sfsListUserSitOut","sfsListUser","sfsListUserPlaying","sfsListHandCard","sfsHandCards","cards","j","sfsListBetChip","sfsListCommunityCard","obj","DeskId","UserName","DeskState","UserChip","UserSitOnEvent","m_deskId","m_userName","m_userChip","m_buyIn","m_deskState","m_currentUser","UserSitOutEvent","m_username","m_isSitOut","PreStartEvent","StartEvent","m_listCard","m_userTime","m_betChipGame","m_isTurnNextLevel","containsKey","m_levelTimeLife","sfsCards","sfsActiveUsers","UserTurnEvent","m_betchip","m_time","UserFoldEvent","UserCallEvent","m_chip","UserCheckEvent","UserRaiseEvent","UserAllInEvent","GameTurnEvent","m_currentGameTurn","ShowDownEvent","sfsUsers","sfsListCard","m_listComCard","sfsComCards","FinishGameEvent","m_listPokerHand","sfsPokerHands","m_listChip","sfsChip","m_listPokerHandCard","sfsPokerHandCard","m_listWinner","sfsWinners","KickUserEvent","m_resType","window","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["let PokerEvent = {};\nPokerEvent.RESPONSE_NAME = {\n    FINISH_GAME_RES : \"game_finish_res\",\n    STAND_UP_RES: \"stand_up_res\",\n    LOAD_TABLE_INFO_RES: \"load_table_info_res\",\n    USER_SIT_ON_RES: \"user_sit_on_res\",\n    USER_SIT_OUT_RES: \"user_sit_out_res\",\n    START: \"start_res\",\n    PRE_START: \"pre_start_res\",\n    KICK_USER_RES: \"kick_user_res\",\n    USER_READY_RES: \"user_ready_res\",\n    SHOW_DOWN_RES: \"show_down_res\",\n    USER_BET_RES: \"user_bet_res\",\n    USER_CALL_RES: \"user_call_res\",\n    USER_CHECK_RES: \"user_check_res\",\n    USER_FOLD_RES: \"user_fold_res\",\n    USER_RAISE_RES: \"user_raise_res\",\n    USER_GOING_ALL_RES: \"user_going_all_res\",\n    GAME_TURN_RES: \"game_turn_res\",\n    USER_TURN_RES: \"user_turn_res\",\n    USER_BUY_IN_RES: \"user_buy_in_res\",\n    LEVEL_TURN_RES: \"level_turn_res\",\n    PAY_ANTE_RES: \"pay_ante_res\"\n}\nPokerEvent.LoadTableInfoEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.LOAD_TABLE_INFO_RES);\n        this.m_isGameStart = false;\n        this.m_isPrestart = false;\n        this.m_prestartTime = 0;\n        this.m_listDesk = [];\n        this.m_listUserSitOut = [];\n        this.m_listUser = [];\n        this.m_listActiveUserName = [];\n        this.m_listHandCard = [];\n        this.m_listBetChip = [];\n        this.m_listCommunityCard = [];\n        this.m_potChip = 0;\n        this.m_dealer = \"\";\n        this.m_smallBlind = 0;\n        this.m_bigBlind = 0;\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.LOAD_TABLE_INFO_RES);\n        this.m_isGameStart = param.getBool(\"is_game_start\");\n        this.m_isPrestart = param.getBool(\"is_prestart\");\n        this.m_prestartTime = param.getInt(\"prestart_time\");\n        this.m_potChip = param.getDouble(\"pot_chip\");\n\n        this.m_dealer = param.getUtfString(\"dealer\");\n        this.m_smallBlind = param.getUtfString(\"small_blind\");\n        this.m_bigBlind = param.getUtfString(\"big_blind\");\n\n        let sfsListDesk = param.getSArray(\"list_desk\");\n        for(let i = 0; i < sfsListDesk.size(); i++){\n            let desk = this.deskFromSObject(sfsListDesk.get(i).getObject());\n            this.m_listDesk.push(desk);\n        }\n\n        let sfsListUserSitOut = param.getSArray(\"list_user_sit_out\");\n        for(let i = 0; i < sfsListUserSitOut.size();i++){\n            this.m_listUserSitOut.push(sfsListUserSitOut.get(i).getObject());\n        }\n\n        let sfsListUser = param.getSArray(\"list_player\");\n        for(let i = 0; i < sfsListUser.size();i++){\n            this.m_listUser.push(sfsListUser.get(i).getObject());\n        }\n\n        let sfsListUserPlaying = param.getSArray(\"list_active_user\");\n        for(let i = 0; i < sfsListUserPlaying.size();i++){\n            this.m_listActiveUserName.push(sfsListUserPlaying.get(i).getObject());\n        }\n\n        let sfsListHandCard = param.getSArray(\"list_Hand_Card\");\n        for(let i = 0; i < sfsListHandCard.size();i++){\n            let sfsHandCards = sfsListHandCard.get(i).getObject();\n            let cards = [];\n            for(let j = 0; j < sfsHandCards.size();j++){\n                cards.push(sfsHandCards.get(j).getObject());\n            }\n            this.m_listHandCard[i] = cards;\n        }\n\n        let sfsListBetChip = param.getSArray(\"list_bet_chip\");\n        for(let i = 0; i < sfsListBetChip.size();i++){\n            this.m_listBetChip.push(sfsListBetChip.get(i).getObject());\n        }\n\n        let sfsListCommunityCard = param.getSArray(\"list_comminity_card\");\n        for(let i = 0; i < sfsListCommunityCard.size();i++){\n            this.m_listCommunityCard.push(sfsListCommunityCard.get(i).getObject());\n        }\n        return this;\n    },\n    deskFromSObject(obj){\n        let desk = {};\n        desk.DeskId = obj.getInt(\"deskID\");\n        desk.UserName = obj.getUtfString(\"userName\");\n        desk.DeskState = obj.getUtfString(\"deskState\");\n        desk.UserChip = obj.getDouble(\"chip\");\n        return desk;\n    }\n});\nPokerEvent.UserSitOnEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_SIT_ON_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_SIT_ON_RES);\n        this.m_deskId = param.getInt(\"deskID\");\n        this.m_userName = param.getUtfString(\"username\");\n        this.m_userChip = param.getDouble(\"chip\");\n        this.m_buyIn = param.getDouble(\"buy_in\");\n        this.m_deskState = param.getUtfString(\"deskState\");\n        this.m_currentUser = param.getUtfString(\"currentUser\");\n        return this;\n    }\n});\nPokerEvent.UserSitOutEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_SIT_OUT_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_SIT_OUT_RES);\n        this.m_username = param.getUtfString(\"user_name\");\n        this.m_isSitOut = param.getBool(\"is_sit_out\");\n        return this;\n    }\n})\nPokerEvent.PreStartEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.PRE_START);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.PRE_START);\n        this.m_isPrestart = param.getBool(\"is_prestart\");\n        this.m_prestartTime = param.getInt(\"time\");\n        return this;\n    }\n});\nPokerEvent.StartEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.START);\n        this.m_listCard = [];\n        this.m_listActiveUserName = [];\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.START);\n        this.m_dealer = param.getUtfString(\"dealer\");\n        this.m_smallBlind = param.getUtfString(\"small_blind\");\n        this.m_bigBlind = param.getUtfString(\"big_blind\");\n        this.m_currentUser = param.getUtfString(\"current_user\");\n        this.m_userTime = param.getInt(\"user_time\");\n        this.m_betChipGame = param.getDouble(\"bet_chip_game\");\n\n        this.m_isTurnNextLevel = param.getBool(\"is_turn_next_level\");\n        if(param.containsKey(\"level_time_life\")){\n            this.m_levelTimeLife = param.getInt(\"level_time_life\");\n        }else{\n            this.m_levelTimeLife = -1;\n        }\n\n        let sfsCards = param.getSArray(\"list_card\");\n        for(let i = 0; i < sfsCards.size(); i++){\n            this.m_listCard.push(sfsCards.get(i).getObject());\n        }\n\n        let sfsActiveUsers = param.getSArray(\"list_active_user_name\");\n        for(let i = 0; i < sfsActiveUsers.size(); i++){\n            this.m_listActiveUserName.push(sfsActiveUsers.get(i).getObject());\n        }\n        return this;\n    }\n});\nPokerEvent.UserTurnEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_TURN_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_TURN_RES);\n        this.m_username = param.getUtfString(\"user_name\");\n        this.m_betchip = param.getDouble(\"bet_chip\");\n        this.m_time = param.getInt(\"time\");\n        return this;\n    }\n});\nPokerEvent.UserFoldEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_FOLD_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_FOLD_RES);\n        this.m_username = param.getUtfString(\"user_name\");\n        return this;\n    }\n});\nPokerEvent.UserCallEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_CALL_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_CALL_RES);\n        this.m_username = param.getUtfString(\"user_name\");\n        this.m_chip = param.getDouble(\"chip\");\n        return this;\n    }\n});\nPokerEvent.UserCheckEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_CHECK_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_CHECK_RES);\n        this.m_username = param.getUtfString(\"user_name\");\n        return this;\n    }\n});\nPokerEvent.UserRaiseEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_RAISE_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_RAISE_RES);\n        this.m_username = param.getUtfString(\"user_name\");\n        this.m_chip = param.getDouble(\"chip\");\n        return this;\n    }\n});\nPokerEvent.UserAllInEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.USER_GOING_ALL_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.USER_GOING_ALL_RES);\n        this.m_username = param.getUtfString(\"user_name\");\n        this.m_chip = param.getDouble(\"chip\");\n        return this;\n    }\n});\nPokerEvent.GameTurnEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.GAME_TURN_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.GAME_TURN_RES);\n        this.m_currentUser = param.getUtfString(\"current_user\");\n        this.m_currentGameTurn = param.getUtfString(\"current_game_turn\");\n        this.m_time = param.getInt(\"time\");\n\n        this.m_listCommunityCard = [];\n        let sfsCards = param.getSArray(\"list_community_card\");\n        for(let j = 0; j < sfsCards.size(); j++){\n            this.m_listCommunityCard.push(sfsCards.get(j).getObject());\n        }\n        return this;\n    }\n});\nPokerEvent.ShowDownEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.SHOW_DOWN_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.SHOW_DOWN_RES);\n        this.m_currentGameTurn = param.getUtfString(\"current_game_turn\");\n        this.m_listUser = [];\n        let sfsUsers = param.getSArray(\"list_user\");\n        for(let i = 0; i < sfsUsers.size(); i++){\n            this.m_listUser.push(sfsUsers.get(i).getObject());\n        }\n\n        this.m_listCard = [];\n        let sfsListCard = param.getSArray(\"list_card\");\n        for(let i = 0; i < sfsListCard.size(); i++){\n            let sfsCards = sfsListCard.get(i).getObject();\n            let cards = [];\n            for(let j = 0; j < sfsCards.size(); j++){\n                cards.push(sfsCards.get(j).getObject());\n            }\n            this.m_listCard.push(cards);\n        }\n\n        this.m_listComCard = [];\n        let sfsComCards = param.getSArray(\"list_community_card\");\n        for(let i = 0; i < sfsComCards.size(); i++){\n            this.m_listComCard.push(sfsComCards.get(i).getObject());\n        }\n        return this;\n    }\n});\nPokerEvent.FinishGameEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.FINISH_GAME_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.FINISH_GAME_RES);\n        this.m_listUser = [];\n        var sfsUsers = param.getSArray(\"list_user\");\n        for(let i = 0; i < sfsUsers.size(); i++){\n            this.m_listUser.push(sfsUsers.get(i).getObject());\n        }\n\n        this.m_listPokerHand = [];\n        var sfsPokerHands = param.getSArray(\"list_poker_Hand\");\n        for(let i = 0; i < sfsPokerHands.size(); i++){\n            this.m_listPokerHand.push(sfsPokerHands.get(i).getObject());\n        }\n\n        this.m_listChip = [];\n        var sfsChip = param.getSArray(\"list_chip\");\n        for(let i = 0; i < sfsChip.size(); i++){\n            this.m_listChip.push(sfsChip.get(i).getObject());\n        }\n\n        this.m_listPokerHandCard = [];\n        var sfsPokerHandCard = param.getSArray(\"list_poker_hand_card\");\n        for(let i = 0; i < sfsPokerHandCard.size(); i++){\n            this.m_listPokerHandCard.push(sfsPokerHandCard.get(i).getObject());\n        }\n\n        this.m_listWinner = [];\n        var sfsWinners = param.getSArray(\"list_winner\");\n        for(let i = 0; i < sfsWinners.size(); i++){\n            this.m_listWinner.push(sfsWinners.get(i).getObject());\n        }\n        return this;\n    }\n});\nPokerEvent.KickUserEvent = CasinoEvent._BaseEvent.extend({\n    ctor(){\n        this._super(PokerEvent.RESPONSE_NAME.KICK_USER_RES);\n    },\n    fromEvent(event){\n        let param = event.get(PokerEvent.RESPONSE_NAME.KICK_USER_RES);\n        this.m_resType = param.getInt(\"response_type\");\n        this.m_username = param.getUtfString(\"user_name\");\n        return this;\n    }\n})\nwindow.PokerEvent = module.exports = PokerEvent;"]}