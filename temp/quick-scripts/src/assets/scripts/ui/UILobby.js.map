{"version":3,"sources":["assets/scripts/ui/UILobby.js"],"names":["Listview","require","cc","Class","VozBaseComponent","properties","roomList","roomContent","lb_name","Label","lb_chip","_currentGroup","Avatar","Sprite","titleGame","UIPokerRank","Node","onLoad","Utils","loadRes","Config","getDefaultAvatar","onEnable","updateUserVariable","mm","game","_data","groups","numItems","length","string","Loading","hide","updateRank","arr","getComponent","name","subChip","PortalManager","getGameController","formatText","GameVariables","Poker","getDisplayName","SmartFoxSDK","PortalController","ZoneInstance","mySelf","addDotToNumber","getChip","back","audio","playButton","UIManger","show","onRenderLobby","item","idx","jsItem","init","onSelectRoom","self","groupId","group_id","minChip","group_vars","bet_chip","Toast","showToast","includes","bet","min","min_chip","max","max_chip","remainChip","currentChip","distance","data","cbYes","err","PokerController","QuickJoinRoomConfig","buy_in","getBuyIn","number_desk","_sizeDesk","quickRequest","CasinoRequest","QuickJoinGameRequest","setGame","setSizeDesk","setGroup","send","toSRequest","pop","sizeDesk"],"mappings":"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","sourceRoot":"/","sourcesContent":["let Listview = require('Listview');\ncc.Class({\n    extends: cc.VozBaseComponent,\n\n    properties: {\n        roomList: Listview,\n        roomContent: [],\n        lb_name: cc.Label,\n        lb_chip: cc.Label,\n        _currentGroup: null,\n        Avatar: cc.Sprite,\n        titleGame: cc.Label,\n        UIPokerRank: cc.Node\n    },\n    onLoad(){\n        // update avatar image\n        Utils.loadRes(this.Avatar, \"images/avatar/\"+Config.getDefaultAvatar());\n    },\n    onEnable(){\n        this.updateUserVariable(null);\n        if(mm.game && mm.game[this._data.game]){\n            this.roomContent = mm.game[this._data.game].groups;\n            this.roomList.numItems = this.roomContent.length;\n        }\n        if(this._data.game == \"poker\"){\n            this.titleGame.string = \"Poker\"\n        }else if(this._data.game == \"tlmn\"){\n            this.titleGame.string = \"TLMN\"\n        }else if(this._data.game == \"bacay\"){\n            this.titleGame.string = \"Ba Cây\"\n        }else if(this._data.game == \"maubinh\"){\n            this.titleGame.string = \"Mậu binh\";\n        }else{\n            this.titleGame.string = \"Casino\";\n        }\n        mm.Loading.hide();\n    },\n    updateRank(arr){\n        if(this.UIPokerRank)\n            this.UIPokerRank.getComponent(this.UIPokerRank.name).updateRank(arr);\n    },\n    updateUserVariable(subChip){\n        if(PortalManager.getGameController(this._data.game)){\n            this.lb_name.string = Utils.formatText(GameVariables.Poker.getDisplayName(SmartFoxSDK.PortalController.ZoneInstance.mySelf), 20);\n            this.lb_chip.string = Utils.addDotToNumber(GameVariables.Poker.getChip(SmartFoxSDK.PortalController.ZoneInstance.mySelf)-subChip);\n        }\n    },\n    back(){\n        mm.audio.playButton();\n        UIManger.show(\"UIHome\");\n    },\n    onRenderLobby(item, idx){\n        let jsItem = item.getComponent(item.name);\n        jsItem.init(this.roomContent[idx]);\n    },\n    onSelectRoom(item, idx){\n        mm.audio.playButton();\n        let self = this;\n        let groupId = this.roomContent[idx].group_id;\n        let minChip = this.roomContent[idx].group_vars.bet_chip*100;\n        if(GameVariables.Poker.getChip(SmartFoxSDK.PortalController.ZoneInstance.mySelf) < minChip){\n            mm.Toast.showToast(1, \"Bạn cần tối thiểu \"+Utils.addDotToNumber(minChip) +'đ');\n            return;\n        }\n        if(groupId.includes(\"poker\")){\n            let bet = this.roomContent[idx].group_vars.bet_chip;\n            let min = this.roomContent[idx].group_vars.min_chip;\n            let max = this.roomContent[idx].group_vars.max_chip;\n            let remainChip = GameVariables.Poker.getChip(PortalManager.getGameController(this._data.game).ZoneInstance.mySelf);\n            let currentChip = min;\n            let distance = bet;\n            if(GameVariables.Poker.getChip(PortalManager.getGameController(this._data.game).ZoneInstance.mySelf) < min){\n                mm.Toast.showToast(1, \"Bạn cần tối thiểu \"+Utils.addDotToNumber(min) +' Chip ');\n                return;\n            }\n            this.show(\"UIDialogBuyIn\", {data: {\n                    distance: distance,\n                    remainChip: remainChip,\n                    currentChip: currentChip,\n                    min : min,\n                    max: max,\n                    cbYes: function (err) {\n                        if(err){\n                            mm.Toast.showToast(0.5, err);\n                            return;\n                        }\n                        mm.Loading.show();\n                        SmartFoxSDK.PokerController.QuickJoinRoomConfig.buy_in = this.getBuyIn();\n                        SmartFoxSDK.PokerController.QuickJoinRoomConfig.number_desk = this._sizeDesk;\n                        let quickRequest = new CasinoRequest.QuickJoinGameRequest();\n                        quickRequest.setGame(self._data.game);\n                        quickRequest.setSizeDesk(this._sizeDesk);\n                        quickRequest.setGroup(groupId);\n                        SmartFoxSDK.PokerController.ZoneInstance.send(quickRequest.toSRequest());\n                        this.back();\n                    }\n             }, pop: true});\n        }else {\n            mm.Loading.show();\n            let sizeDesk = 4;\n            if(this._data.game == \"bacay\")\n                sizeDesk = 6;\n            let quickRequest = new CasinoRequest.QuickJoinGameRequest();\n            quickRequest.setGroup(groupId);\n            quickRequest.setSizeDesk(sizeDesk);\n            PortalManager.getGameController(this._data.game).ZoneInstance.send(quickRequest.toSRequest());\n        }\n    }\n});\n"]}