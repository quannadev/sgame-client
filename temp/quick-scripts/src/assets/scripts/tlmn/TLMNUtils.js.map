{"version":3,"sources":["assets\\scripts\\tlmn\\TLMNUtils.js"],"names":["Suit","Spade","Club","Diamond","Heart","SuitName","split","A2_10JQK","Card","id","Object","defineProperties","point","value","writable","suit","Math","floor","pointName","get","suitName","prototype","toString","TLMN","TypeCard","cc","Enum","CARD_NULL","CARDS_SINGLE","CARDS_COUPLE","CARDS_XAMCO","CARDS_TUQUY","CARDS_SERIAL","CARDS_THREE_COUPLE","CARDS_SERIAL_COUPLE","getValue","b","v","getType","sortCards","cards","i","length","j","tempCard","isBigger","c1","c2","v1","v2","isSerialCards","cardLength","isSerialCouple","checkCardsType","isValidateFightNoNeedTurn","myHand","lastCards","checkHasTuQuy","checkHas4SerialCouple","tempCards","indexOf","push","count","step","card8","slice","cardType","suggestCards","cardSelect","lastCard","cardHand","typeLastCard","StartID","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Suit = {};\r\nSuit.Spade = 0;\r\nSuit.Club = 1;\r\nSuit.Diamond = 2;\r\nSuit.Heart = 3;\r\nlet SuitName = 'spade,club,diamond,heart'.split(',');\r\nlet A2_10JQK = 'A,2,3,4,5,6,7,8,9,10,J,Q,K'.split(',');\r\nfunction Card(id) {\r\n    Object.defineProperties(this, {\r\n        point: {\r\n            value: id % 13,\r\n            writable: false\r\n        },\r\n        suit: {\r\n            value: Math.floor(id / 13),\r\n            writable: false\r\n        },\r\n        id: {\r\n            value: id,\r\n            writable: false\r\n        },\r\n        pointName: {\r\n            get: function () {\r\n                return A2_10JQK[this.point];\r\n            }\r\n        },\r\n        suitName: {\r\n            get: function () {\r\n                return SuitName[this.suit];\r\n            }\r\n        }\r\n    })\r\n};\r\nCard.prototype.toString = function () {\r\n    return this.pointName + ' '+ this.suitName;\r\n};\r\nlet TLMN = {};\r\nTLMN.TypeCard = cc.Enum({\r\n    CARD_NULL: 0,\r\n    CARDS_SINGLE: 1,\r\n    CARDS_COUPLE : 2,\r\n    CARDS_XAMCO : 3,\r\n    CARDS_TUQUY: 4,\r\n    CARDS_SERIAL: 5,\r\n    CARDS_THREE_COUPLE: 6,\r\n    CARDS_SERIAL_COUPLE: 7,\r\n});\r\nTLMN.getValue = function(b){\r\n    let v = b % 13;\r\n    if(v == 0){\r\n        return 11;\r\n    }else if(v == 1){\r\n        return 12;\r\n    }else{\r\n        return v - 2;\r\n    }\r\n}\r\nTLMN.getType = function(v){\r\n    return Math.floor(v  / 13);\r\n}\r\n\r\nTLMN.sortCards = function(cards){\r\n    if(cards == null)\r\n        return null;\r\n    for(let i = 0; i < cards.length - 1; i++){\r\n        for(let j = i+1; j < cards.length;j++){\r\n            if(TLMN.getValue(cards[i]) > TLMN.getValue(cards[j])){\r\n                let tempCard = cards[j];\r\n                cards[j] = cards[i];\r\n                cards[i] = tempCard;\r\n            }\r\n        }\r\n    }\r\n    return cards;\r\n}\r\nTLMN.isBigger = function(c1, c2){\r\n    let v1 = TLMN.getValue(c1);\r\n    let v2 = TLMN.getValue(c2);\r\n    if(v1 == v2){\r\n        return TLMN.getType(c1) > TLMN.getType(c2);\r\n    }else{\r\n        return v1 > v2;\r\n    }\r\n}\r\nTLMN.isSerialCards = function(cards){\r\n    let cardLength = cards.length;\r\n    if(cardLength <= 2){\r\n        return false;\r\n    }\r\n    // Trong sảnh không bao giờ chứa quân 2 trừ sảnh rồng\r\n    for(let i = 0; i < cardLength; i++){\r\n        if(TLMN.getValue(cards[i]) == 12 && cardLength != 13){\r\n            return false;\r\n        }\r\n    }\r\n    cards = TLMN.sortCards(cards);\r\n    for(let i = 0; i < cardLength -1; i++){\r\n        if(TLMN.getValue(cards[i] + 1) != TLMN.getValue(cards[i+1])){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nTLMN.isSerialCouple = function(cards){\r\n    let cardLength = cards.length;\r\n    if(cardLength < 6 || cardLength % 2 != 0){\r\n        return false;\r\n    }\r\n    // Trong sảnh không bao giờ chứa quân 2 trừ sảnh rồng\r\n    for(let i = 0; i < cardLength; i++){\r\n        if(TLMN.getValue(cards[i]) == 12){\r\n            return false;\r\n        }\r\n    }\r\n    cards = TLMN.sortCards(cards);\r\n    for (let i = 0; i < cardLength - 3; i += 2) {\r\n        if (!(TLMN.getValue(cards[i]) == TLMN.getValue(cards[i + 1])\r\n            && (TLMN.getValue(cards[i + 1]) + 1 == TLMN.getValue(cards[i + 2])))) {\r\n            return false;\r\n        }\r\n    }\r\n    if (TLMN.getValue(cards[cardLength - 1]) == TLMN.getValue(cards[cardLength - 2])) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nTLMN.checkCardsType = function(cards){\r\n    if(!cards || cards.length == 0)\r\n        return TLMN.TypeCard.CARD_NULL;\r\n    if(cards.length == 1)\r\n        return TLMN.TypeCard.CARDS_SINGLE;\r\n    for(let i = 0; i < cards.length - 1;i++){\r\n        if(TLMN.getValue(cards[i]) != TLMN.getValue(cards[i + 1])){\r\n            if(cards.length > 2){\r\n                if(TLMN.isSerialCards(cards)){\r\n                    return TLMN.TypeCard.CARDS_SERIAL;\r\n                }else if(TLMN.isSerialCouple(cards)){\r\n                    return TLMN.TypeCard.CARDS_SERIAL_COUPLE;\r\n                }else{\r\n                    return -1;\r\n                }\r\n            }else{\r\n                return -1;\r\n            }\r\n        }\r\n    }\r\n    if(cards.length == 2){\r\n        return TLMN.TypeCard.CARDS_COUPLE;\r\n    }else if(cards.length == 3){\r\n        return TLMN.TypeCard.CARDS_XAMCO;\r\n    }else if(cards.length == 4){\r\n        return TLMN.TypeCard.CARDS_TUQUY;\r\n    }else{\r\n        return -1;\r\n    }\r\n}\r\nTLMN.isValidateFightNoNeedTurn = function(myHand, lastCards){\r\n    if(lastCards == null || myHand == null)\r\n        return false;\r\n    myHand = TLMN.sortCards(myHand);\r\n    lastCards = TLMN.sortCards(lastCards);\r\n    // Tứ quý chặt 1 quân 2, hoặc 1 đôi 2 hoặc 3 đôi thông bất kỳ\r\n    if(TLMN.checkHasTuQuy(myHand)){\r\n        if((TLMN.checkCardsType(lastCards) <= 2 && TLMN.getValue(lastCards[lastCards.length - 1]) == 12)\r\n            || (TLMN.checkCardsType(lastCards) == TLMN.TypeCard.CARDS_SERIAL_COUPLE && lastCards.length == 6)){\r\n            return true;\r\n        }\r\n    }\r\n    // 4 đôi thông chặt 1 quân 2, hoặc 1 đôi 2 hoặc 3 đôi thông bất kỳ và tứ quý\r\n    if(TLMN.checkHas4SerialCouple(myHand)){\r\n        if((TLMN.checkCardsType(lastCards) <= 2 && TLMN.getValue(lastCards[lastCards.length - 1]) == 12)\r\n            || (TLMN.checkCardsType(lastCards) == TLMN.TypeCard.CARDS_SERIAL_COUPLE && lastCards.length == 6)\r\n            || TLMN.checkCardsType(lastCards) == TLMN.TypeCard.CARDS_TUQUY){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nTLMN.checkHas4SerialCouple = function(cards){\r\n    if(cards == null || cards.length < 8)\r\n        return false;\r\n    cards = TLMN.sortCards(cards);\r\n    let tempCards = [];\r\n    for(let i = 0; i < cards.length - 1; i++){\r\n        let v1= TLMN.getValue(cards[i]);\r\n        let v2 = TLMN.getValue(cards[i + 1]);\r\n        if( v1 == v2  && v1 != 12){\r\n            if(tempCards.indexOf(v1) == -1){\r\n                tempCards.push(v1);\r\n            }\r\n        }\r\n    }\r\n    let count = 0;\r\n    for(let i = 0; i < tempCards.length -1; i++){\r\n        if((tempCards[i] + 1) == tempCards[i + 1]){\r\n            count++;\r\n        }\r\n    }\r\n    if(count >= 3){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nTLMN.checkHasTuQuy = function(cards){\r\n    if(cards.length < 4)\r\n        return false;\r\n    cards = TLMN.sortCards(cards);\r\n    let step = cards.length - 4;\r\n    for(let i = 0; i <= step; i++){\r\n        let card8 = cards.slice(i, 4 + i);\r\n        let cardType = TLMN.checkCardsType(card8);\r\n        if(cardType == TLMN.TypeCard.CARDS_TUQUY){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nTLMN.suggestCards = function(cardSelect, lastCard, cardHand){\r\n    lastCard = TLMN.sortCards(lastCard);\r\n    cardHand = TLMN.sortCards(cardHand);\r\n    let typeLastCard = TLMN.checkCardsType(lastCard);\r\n    let cards = [];\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_SINGLE){\r\n        if(TLMN.getValue(lastCard[0]) == 12){\r\n            // tứ quý chặt 1 hai\r\n            for(let i = 0; i < cardHand.length;i++){\r\n                if(TLMN.getValue(cardHand[i]) == TLMN.getValue(cardSelect) && cardHand[i] != cardSelect){\r\n                    cards.push(cardHand[i]);\r\n                    if(cards.length == 3){\r\n                        return cards;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }else if(typeLastCard == TLMN.TypeCard.CARDS_COUPLE){\r\n        if(TLMN.getValue(lastCard[0]) == 12){\r\n            // tứ quý chặt doi hai\r\n            for(let i = 0; i < cardHand.length;i++){\r\n                if(TLMN.getValue(cardHand[i]) == TLMN.getValue(cardSelect) && cardHand[i] != cardSelect){\r\n                    cards.push(cardHand[i]);\r\n                    if(cards.length == 3){\r\n                        return cards;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if(TLMN.getValue(cardHand[i]) == TLMN.getValue(cardSelect) && cardHand[i] != cardSelect){\r\n                cards.push(cardHand[i]);\r\n                return cards;\r\n            }\r\n        }\r\n        return [];\r\n    }else if(typeLastCard == TLMN.TypeCard.CARDS_SERIAL){\r\n        let StartID = cardSelect;\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if(TLMN.getValue(cardHand[i]) == (TLMN.getValue(StartID) + 1) && cardHand[i] != cardSelect){\r\n                cards.push(cardHand[i]);\r\n                StartID = cardHand[i];\r\n                if(cards.length == lastCard.length - 1){\r\n                    return cards;\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }else if(typeLastCard == TLMN.TypeCard.CARDS_SERIAL_COUPLE){\r\n\r\n    }else if(typeLastCard == TLMN.TypeCard.CARDS_XAMCO){\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if(TLMN.getValue(cardHand[i]) == TLMN.getValue(cardSelect) && cardHand[i] != cardSelect){\r\n                cards.push(cardHand[i]);\r\n                if(cards.length == 2)\r\n                    return cards;\r\n            }\r\n        }\r\n        return [];\r\n    }else if(typeLastCard == TLMN.TypeCard.CARDS_TUQUY){\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if(TLMN.getValue(cardHand[i]) == TLMN.getValue(cardSelect) && cardHand[i] != cardSelect){\r\n                cards.push(cardHand[i]);\r\n                if(cards.length == 3)\r\n                    return cards;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    return cards;\r\n}\r\nmodule.exports = {\r\n    Card : Card,\r\n    Suit : Suit,\r\n    TLMN : TLMN\r\n}\r\n"]}