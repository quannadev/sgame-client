{"version":3,"sources":["assets\\scripts\\tlmn\\TLMNCard.js"],"names":["Suit","Spade","Club","Diamond","Heart","SuitName","split","A2_10JQK","SuitRankFile","Card","id","Object","defineProperties","point","value","writable","suit","Math","floor","pointName","get","suitName","nameFile","parseInt","indexOf","color","cc","Color","RED","BLACK","prototype","toString","TLMN","TypeCard","Enum","CARD_NULL","CARDS_SINGLE","CARDS_COUPLE","CARDS_XAMCO","CARDS_TUQUY","CARDS_SERIAL","CARDS_THREE_COUPLE","CARDS_SERIAL_COUPLE","getValue","b","v","getType","sortCards","cards","i","length","j","tempCard","sortCardType","typeSort","coupleCards","v1","v2","push","seriCards","isBigger","c1","c2","isSerialCards","cardLength","isSerialCouple","checkCardsType","isValidateFightNoNeedTurn","myHand","lastCards","checkHasTuQuy","checkHas4SerialCouple","tempCards","count","step","card8","slice","cardType","suggestNoCards","cardSelect","cardHand","cardValue","isDoi","isSanh","getTuQuyOnHand","getBaDoiThong","last","newCards","getBonDoiThong","getSerialCard","lastCard","StartID","listValue","allCards","log","getCardsReady","typeLastCard","tuQuy","suggestCards","indexTuQuy","splice","doiThong","indexDoiThong","bonDoiThong","indexBonDoi","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Suit = {};\r\nSuit.Spade = 0;\r\nSuit.Club = 1;\r\nSuit.Diamond = 2;\r\nSuit.Heart = 3;\r\nlet SuitName = 'spade,club,diamond,heart'.split(',');\r\nlet A2_10JQK = '1,2,3,4,5,6,7,8,9,10,11,12,13'.split(',');\r\nlet SuitRankFile = 'heart,diamond,spade,club'.split(',');\r\nfunction Card(id) {\r\n    Object.defineProperties(this, {\r\n        point: {\r\n            value: id % 13,\r\n            writable: false\r\n        },\r\n        suit: {\r\n            value: Math.floor(id / 13),\r\n            writable: false\r\n        },\r\n        id: {\r\n            value: id,\r\n            writable: false\r\n        },\r\n        pointName: {\r\n            get: function () {\r\n                return A2_10JQK[this.point];\r\n            }\r\n        },\r\n        suitName: {\r\n            get: function () {\r\n                return SuitName[this.suit];\r\n            }\r\n        },\r\n        nameFile: {\r\n            get: function () {\r\n                return parseInt(this.pointName) + 13 * SuitRankFile.indexOf(this.suitName);\r\n            }\r\n        },\r\n        color: {\r\n            get: function () {\r\n                if(this.suit == Suit.Diamond || this.suit == Suit.Heart){\r\n                    return cc.Color.RED;\r\n                }else{\r\n                    return cc.Color.BLACK;\r\n                }\r\n            }\r\n        }\r\n    })\r\n};\r\nCard.prototype.toString = function () {\r\n    return this.pointName + ' '+ this.suitName;\r\n};\r\n\r\n/*\r\nLogic for TMLM\r\n */\r\nlet TLMN = {};\r\nTLMN.TypeCard = cc.Enum({\r\n    CARD_NULL: 0,\r\n    CARDS_SINGLE: 1,\r\n    CARDS_COUPLE : 2,\r\n    CARDS_XAMCO : 3,\r\n    CARDS_TUQUY: 4,\r\n    CARDS_SERIAL: 5,\r\n    CARDS_THREE_COUPLE: 6,\r\n    CARDS_SERIAL_COUPLE:7\r\n});\r\nTLMN.getValue = function(b){\r\n    let v = b % 13;\r\n    if(v == 0){\r\n        return 11;\r\n    }else if(v == 1){\r\n        return 12;\r\n    }else{\r\n        return v - 2;\r\n    }\r\n}\r\nTLMN.getType = function(v){\r\n    return Math.floor(v  / 13);\r\n}\r\nTLMN.sortCards = function(cards){\r\n    if(cards == null)\r\n        return null;\r\n    for(let i = 0; i < cards.length - 1; i++){\r\n        for(let j = i+1; j < cards.length;j++){\r\n            if(TLMN.getValue(cards[i]) > TLMN.getValue(cards[j])){\r\n                let tempCard = cards[j];\r\n                cards[j] = cards[i];\r\n                cards[i] = tempCard;\r\n            }\r\n        }\r\n    }\r\n    return cards;\r\n}\r\nTLMN.sortCardType = function(cards, typeSort){\r\n    if(cards == null)\r\n        return null;\r\n    cards = TLMN.sortCards(cards);\r\n    if (typeSort == 1){\r\n        let coupleCards   = [];\r\n        for (let i=0; i< cards.length-1; i++){\r\n            let v1= TLMN.getValue(cards[i]);\r\n            let v2= TLMN.getValue(cards[i+1]);\r\n            if (v1 == v2){\r\n                if (coupleCards.indexOf(cards[i]) == -1){\r\n                    coupleCards.push(cards[i]);\r\n                }\r\n                coupleCards.push(cards[i+1]);\r\n            }\r\n        }\r\n        for (let i=0; i< cards.length; i++){\r\n            if (coupleCards.indexOf(cards[i]) == -1){\r\n                coupleCards.push(cards[i]);\r\n            }\r\n        }\r\n        return coupleCards;\r\n    }else if (typeSort == 2){\r\n        let seriCards   = [];\r\n        for (let i=0; i< cards.length-1; i++){\r\n            for (let j = i; j< cards.length-1; j++){\r\n                let v1= TLMN.getValue(cards[j]);\r\n                let v2= TLMN.getValue(cards[j+1]);\r\n                if (v1+1 == v2){\r\n                    if (seriCards.indexOf(cards[j]) == -1){\r\n                        seriCards.push(cards[j]);\r\n                    }\r\n                    if (seriCards.indexOf(cards[j+1]) == -1){\r\n                        seriCards.push(cards[j+1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i=0; i< cards.length; i++){\r\n            if (seriCards.indexOf(cards[i]) == -1){\r\n                seriCards.push(cards[i]);\r\n            }\r\n        }\r\n        return seriCards;\r\n    }\r\n    return cards;\r\n}\r\nTLMN.isBigger = function(c1, c2){\r\n    let v1 = TLMN.getValue(c1);\r\n    let v2 = TLMN.getValue(c2);\r\n    if(v1 == v2){\r\n        return c1 > c2;\r\n    }else{\r\n        return v1 > v2;\r\n    }\r\n}\r\nTLMN.isSerialCards = function(cards){\r\n    let cardLength = cards.length;\r\n    if(cardLength <= 2){\r\n        return false;\r\n    }\r\n    // Trong sảnh không bao giờ chứa quân 2 trừ sảnh rồng\r\n    for(let i = 0; i < cardLength; i++){\r\n        if(TLMN.getValue(cards[i]) == 12 && cardLength != 13){\r\n            return false;\r\n        }\r\n    }\r\n    cards = TLMN.sortCards(cards);\r\n    for(let i = 0; i < cardLength -1; i++){\r\n        if(TLMN.getValue(cards[i] + 1) != TLMN.getValue(cards[i+1])){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nTLMN.isSerialCouple = function(cards){\r\n    let cardLength = cards.length;\r\n    if(cardLength < 6 || cardLength % 2 != 0){\r\n        return false;\r\n    }\r\n    // Trong sảnh không bao giờ chứa quân 2 trừ sảnh rồng\r\n    for(let i = 0; i < cardLength; i++){\r\n        if(TLMN.getValue(cards[i]) == 12){\r\n            return false;\r\n        }\r\n    }\r\n    cards = TLMN.sortCards(cards);\r\n    for (let i = 0; i < cardLength - 3; i += 2) {\r\n        if (!(TLMN.getValue(cards[i]) == TLMN.getValue(cards[i + 1])\r\n            && (TLMN.getValue(cards[i + 1]) + 1 == TLMN.getValue(cards[i + 2])))) {\r\n            return false;\r\n        }\r\n    }\r\n    if (TLMN.getValue(cards[cardLength - 1]) == TLMN.getValue(cards[cardLength - 2])) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nTLMN.checkCardsType = function(cards){\r\n    if(!cards || cards.length == 0)\r\n        return TLMN.TypeCard.CARD_NULL;\r\n    if(cards.length == 1)\r\n        return TLMN.TypeCard.CARDS_SINGLE;\r\n    for(let i = 0; i < cards.length - 1;i++){\r\n        if(TLMN.getValue(cards[i]) != TLMN.getValue(cards[i + 1])){\r\n            if(cards.length > 2){\r\n                if(TLMN.isSerialCards(cards)){\r\n                    return TLMN.TypeCard.CARDS_SERIAL;\r\n                }else if(TLMN.isSerialCouple(cards)){\r\n                    if (cards.length == 6)\r\n                        return TLMN.TypeCard.CARDS_THREE_COUPLE;\r\n                    return TLMN.TypeCard.CARDS_SERIAL_COUPLE;\r\n                }else{\r\n                    return -1;\r\n                }\r\n            }else{\r\n                return -1;\r\n            }\r\n        }\r\n    }\r\n    if(cards.length == 2){\r\n        return TLMN.TypeCard.CARDS_COUPLE;\r\n    }else if(cards.length == 3){\r\n        return TLMN.TypeCard.CARDS_XAMCO;\r\n    }else if(cards.length == 4){\r\n        return TLMN.TypeCard.CARDS_TUQUY;\r\n    }else{\r\n        return -1;\r\n    }\r\n}\r\nTLMN.isValidateFightNoNeedTurn = function(myHand, lastCards){\r\n    if(lastCards == null || myHand == null)\r\n        return false;\r\n    myHand = TLMN.sortCards(myHand);\r\n    lastCards = TLMN.sortCards(lastCards);\r\n    // Tứ quý chặt 1 quân 2, hoặc 1 đôi 2 hoặc 3 đôi thông bất kỳ\r\n    if(TLMN.checkHasTuQuy(myHand)){\r\n        if((TLMN.checkCardsType(lastCards) <= 2 && TLMN.getValue(lastCards[lastCards.length - 1]) == 12)\r\n            || (TLMN.checkCardsType(lastCards) == TLMN.TypeCard.CARDS_SERIAL_COUPLE && lastCards.length == 6)){\r\n            return true;\r\n        }\r\n    }\r\n    // 4 đôi thông chặt 1 quân 2, hoặc 1 đôi 2 hoặc 3 đôi thông bất kỳ và tứ quý\r\n    if(TLMN.checkHas4SerialCouple(myHand)){\r\n        if((TLMN.checkCardsType(lastCards) <= 2 && TLMN.getValue(lastCards[lastCards.length - 1]) == 12)\r\n            || (TLMN.checkCardsType(lastCards) == TLMN.TypeCard.CARDS_SERIAL_COUPLE && lastCards.length == 6)\r\n            || TLMN.checkCardsType(lastCards) == TLMN.TypeCard.CARDS_TUQUY){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nTLMN.checkHas4SerialCouple = function(cards){\r\n    if(cards == null || cards.length < 8)\r\n        return false;\r\n    cards = TLMN.sortCards(cards);\r\n    let tempCards = [];\r\n    for(let i = 0; i < cards.length - 1; i++){\r\n        let v1= TLMN.getValue(cards[i]);\r\n        let v2 = TLMN.getValue(cards[i + 1]);\r\n        if( v1 == v2  && v1 != 12){\r\n            if(tempCards.indexOf(v1) == -1){\r\n                tempCards.push(v1);\r\n            }\r\n        }\r\n    }\r\n    let count = 0;\r\n    for(let i = 0; i < tempCards.length -1; i++){\r\n        if((tempCards[i] + 1) == tempCards[i + 1]){\r\n            count++;\r\n        }\r\n    }\r\n    if(count >= 3){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nTLMN.checkHasTuQuy = function(cards){\r\n    if(cards.length < 4)\r\n        return false;\r\n    cards = TLMN.sortCards(cards);\r\n    let step = cards.length - 4;\r\n    for(let i = 0; i <= step; i++){\r\n        let card8 = cards.slice(i, 4 + i);\r\n        let cardType = TLMN.checkCardsType(card8);\r\n        if(cardType == TLMN.TypeCard.CARDS_TUQUY){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nTLMN.suggestNoCards = function (cardSelect, cardHand){\r\n    let cards = [];\r\n    if (cardSelect.length  < 2 || cardHand.length < 3)\r\n        return  cardSelect;\r\n    cardSelect = TLMN.sortCards(cardSelect);\r\n    cardHand   = TLMN.sortCards(cardHand);\r\n\r\n    if (cardSelect.length  > 2){\r\n\r\n    }else{\r\n        let cardValue = TLMN.getValue(cardSelect[1]);\r\n        let isDoi     = TLMN.getValue(cardSelect[0]) == cardValue;\r\n        let isSanh    = TLMN.getValue(cardSelect[0]) == (cardValue-1);\r\n        if (isDoi){\r\n            // check 3, tu quy\r\n            for(let i = 0; i < cardHand.length;i++){\r\n                if(TLMN.getValue(cardHand[i]) == cardValue){\r\n                    cards.push(cardHand[i]);\r\n                }\r\n            }\r\n            if (cards.length > 2)\r\n                return cards;\r\n            // check 3 doi thong\r\n            if (cardHand.length >= 6 && cardValue != 12){\r\n                for(let i = 0; i < cardHand.length-1;i++){\r\n                    if( (TLMN.getValue(cardHand[i]) != 12 && TLMN.getValue(cardHand[i+1]) != 12 && TLMN.getValue(cardHand[i]) == (cardValue+1) && TLMN.getValue(cardHand[i]) == TLMN.getValue(cardHand[i+1]))){\r\n                        cards.push(cardHand[i]);\r\n                        cards.push(cardHand[i+1]);\r\n                        cardValue = TLMN.getValue(cardHand[i]);\r\n                    }\r\n                }\r\n                if (cards.length >=6)\r\n                    return cards;\r\n            }\r\n        }else if (isSanh){\r\n            cards = cardSelect;\r\n            for(let i = 0; i < cardHand.length;i++){\r\n                if( (TLMN.getValue(cardHand[i]) != 12) && (TLMN.getValue(cardHand[i]) == (cardValue+1))\r\n                ){\r\n                    cards.push(cardHand[i]);\r\n                    cardValue = TLMN.getValue(cardHand[i]);\r\n                }\r\n            }\r\n            if (cards.length > 2)\r\n                return cards;\r\n        }\r\n\r\n    }\r\n    return cardSelect;\r\n}\r\n\r\nTLMN.getTuQuyOnHand = function (cardHand){\r\n    if (cardHand.length <= 4)\r\n        return [];\r\n    let step = cardHand.length - 4;\r\n    for(let i = 0; i <= step; i++){\r\n        let card8 = cardHand.slice(i, 4 + i);\r\n        let cardType = TLMN.checkCardsType(card8);\r\n        if(cardType == TLMN.TypeCard.CARDS_TUQUY){\r\n            return card8;\r\n        }\r\n    }\r\n    return [];\r\n}\r\nTLMN.getBaDoiThong = function(cardHand){\r\n    // 3 doi thong\r\n    if(cardHand.length < 7)\r\n        return [];\r\n    let tempCards = [];\r\n    let last      = -1;\r\n    for(let i = 0; i < cardHand.length - 1; i++){\r\n        let v1 = TLMN.getValue(cardHand[i]);\r\n        let v2 = TLMN.getValue(cardHand[i + 1]);\r\n        if( v1 == v2  && v2 != last && v1 != 12){\r\n            if(tempCards.indexOf(cardHand[i]) == -1){\r\n                tempCards.push(cardHand[i]);\r\n            }\r\n            tempCards.push(cardHand[i+1]);\r\n            last = v2;\r\n        }\r\n    }\r\n    if(tempCards.length >= 6){\r\n        let newCards = [];\r\n        for (let i=0; i < tempCards.length-2; i++){\r\n            let v1 = TLMN.getValue(tempCards[i]);\r\n            let v2 = TLMN.getValue(tempCards[i + 2]);\r\n            if (v1 == v2-1){\r\n                if(newCards.indexOf(tempCards[i]) == -1){\r\n                    newCards.push(tempCards[i]);\r\n                }\r\n                if(newCards.indexOf(tempCards[i+2]) == -1){\r\n                    newCards.push(tempCards[i+2]);\r\n                }\r\n            }\r\n        }\r\n        // 33 44 555 666 77\r\n        // 555 666\r\n        if (newCards.length >= 6)\r\n            return newCards;\r\n    }\r\n    return [];\r\n}\r\nTLMN.getBonDoiThong = function(cardHand){\r\n    // 4 doi thong\r\n    if(cardHand.length < 9)\r\n        return [];\r\n    let tempCards = [];\r\n    let last      = -1;\r\n    for(let i = 0; i < cardHand.length - 1; i++){\r\n        let v1 = TLMN.getValue(cardHand[i]);\r\n        let v2 = TLMN.getValue(cardHand[i + 1]);\r\n        if( v1 == v2  && v2 != last && v1 != 12){\r\n            if(tempCards.indexOf(cardHand[i]) == -1){\r\n                tempCards.push(cardHand[i]);\r\n            }\r\n            tempCards.push(cardHand[i+1]);\r\n            last = v2;\r\n        }\r\n    }\r\n    if(tempCards.length >= 8){\r\n        let newCards = [];\r\n        for (let i=0; i < tempCards.length-2; i++){\r\n            let v1 = TLMN.getValue(tempCards[i]);\r\n            let v2 = TLMN.getValue(tempCards[i + 2]);\r\n            if (v1 == v2-1){\r\n                if(newCards.indexOf(tempCards[i]) == -1){\r\n                    newCards.push(tempCards[i]);\r\n                }\r\n                if(newCards.indexOf(tempCards[i+2]) == -1){\r\n                    newCards.push(tempCards[i+2]);\r\n                }\r\n            }\r\n        }\r\n        // 33 44 555 666 77\r\n        // 555 666\r\n        if (newCards.length >= 8)\r\n            return newCards;\r\n    }\r\n    return [];\r\n}\r\nTLMN.getSerialCard   = function (cardHand, lastCard){\r\n    let StartID      = TLMN.getValue(lastCard[0]);\r\n    let listValue    = [];\r\n    let cards        = [];\r\n    for (let i=cardHand.length-1; i>= 0; i--){\r\n        let v1= TLMN.getValue(cardHand[i]);\r\n        if(v1 != 12 && v1>=StartID && listValue.indexOf(v1) == -1){\r\n            cards.push(cardHand[i]);\r\n            listValue.push(v1);\r\n        }\r\n    }\r\n    let newCards = [];\r\n    let allCards = [];\r\n    //10 9 8 6 5 4 3\r\n    if (cards.length >= lastCard.length){\r\n        for (let i=0; i< cards.length-1; i++){\r\n            let v1= TLMN.getValue(cards[i]);\r\n            let v2= TLMN.getValue(cards[i+1]);\r\n            if (v2+1 == v1){\r\n                if (newCards.indexOf(cards[i]) == -1){\r\n                    newCards.push(cards[i]);\r\n                }\r\n                newCards.push(cards[i+1]);\r\n            }else{\r\n                cc.log(newCards);\r\n                newCards = TLMN.sortCards(newCards);\r\n                if (newCards.length >= lastCard.length && TLMN.isBigger(newCards[newCards.length-1], lastCard[lastCard.length-1])){\r\n                    allCards.push(newCards);\r\n                }\r\n                newCards = [];\r\n            }\r\n        }\r\n        cc.log(newCards);\r\n        newCards = TLMN.sortCards(newCards);\r\n        if (newCards.length >= lastCard.length && TLMN.isBigger(newCards[newCards.length-1], lastCard[lastCard.length-1])){\r\n            allCards.push(newCards);\r\n        }\r\n        cc.log(allCards);\r\n        return allCards;\r\n    }\r\n    return [];\r\n}\r\nTLMN.getCardsReady = function(lastCard, cardHand){\r\n    lastCard = TLMN.sortCards(lastCard);\r\n    cardHand = TLMN.sortCards(cardHand);\r\n    let typeLastCard = TLMN.checkCardsType(lastCard);\r\n    let cards = [];\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_SINGLE){\r\n        if(TLMN.getValue(lastCard[0]) == 12){\r\n            // tứ quý chặt 1 hai\r\n            cards = TLMN.getTuQuyOnHand(cardHand);\r\n            if (cards.length > 0)\r\n                return cards;\r\n            cards = TLMN.getBaDoiThong(cardHand);\r\n            if (cards.length > 0)\r\n                return cards;\r\n        }\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if (TLMN.isBigger(cardHand[i], lastCard[0]))\r\n                cards.push(cardHand[i]);\r\n        }\r\n        return cards;\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_COUPLE){\r\n        if(TLMN.getValue(lastCard[0]) == 12){\r\n            // tứ quý chặt doi hai\r\n            cards = TLMN.getTuQuyOnHand(cardHand);\r\n            if (cards.length > 0)\r\n                return cards;\r\n            // 4 doi thong\r\n            return TLMN.getBonDoiThong(cardHand);\r\n        }else {\r\n            for(let i = 0; i < cardHand.length-1; i++){\r\n                if (TLMN.isBigger(cardHand[i+1], lastCard[1]) && TLMN.getValue(cardHand[i])==TLMN.getValue(cardHand[i+1])){\r\n                    cards.push(cardHand[i]);\r\n                    cards.push(cardHand[i+1]);\r\n                }\r\n            }\r\n            return cards;\r\n        }\r\n    }//55 6 77 88\r\n    // 99 10 J QQ KK A\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_SERIAL){\r\n        return TLMN.getSerialCard(cardHand, lastCard);\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_THREE_COUPLE){\r\n        if(cardHand.length < lastCard.length)\r\n            return [];\r\n        let tuQuy     = TLMN.getTuQuyOnHand(cardHand);\r\n        if (tuQuy.length > 0)\r\n            return tuQuy;\r\n        let tempCards = TLMN.getBaDoiThong(cardHand);\r\n        if (TLMN.isBigger(tempCards[tempCards.length-1], lastCard[lastCard.length-1])){\r\n            return tempCards;\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_SERIAL_COUPLE){\r\n        if(cardHand.length < lastCard.length)\r\n            return [];\r\n        let tempCards = TLMN.getBonDoiThong(cardHand);\r\n        if (TLMN.isBigger(tempCards[tempCards.length-1], lastCard[lastCard.length-1])){\r\n            return tempCards;\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_XAMCO){\r\n        for(let i = 0; i < cardHand.length-2;i++){\r\n            if(TLMN.isBigger(TLMN.getValue(cardHand[i+2]), lastCard[2]) && TLMN.getValue(cardHand[i]) == TLMN.getValue(cardHand[i+1]) && TLMN.getValue(cardHand[i+1]) == TLMN.getValue(cardHand[i+2])){\r\n                cards.push(cardHand[i]);\r\n                cards.push(cardHand[i+1]);\r\n                cards.push(cardHand[i+2]);\r\n                return cards;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_TUQUY){\r\n        // tứ quý chặt doi hai\r\n        let tuQuy = TLMN.getTuQuyOnHand(cardHand);\r\n        if (tuQuy.length > 0){\r\n            if (TLMN.isBigger(tuQuy[3], lastCard[3])){\r\n                return tuQuy;\r\n            }\r\n        }\r\n        // 4 doi thong\r\n        return TLMN.getBonDoiThong(cardHand);\r\n    }\r\n    return cards;\r\n}\r\nTLMN.suggestCards = function(cardSelect, lastCard, cardHand){\r\n    lastCard = TLMN.sortCards(lastCard);\r\n    cardHand = TLMN.sortCards(cardHand);\r\n    let typeLastCard = TLMN.checkCardsType(lastCard);\r\n    let cards = [];\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_SINGLE){\r\n        if(TLMN.getValue(lastCard[0]) == 12){\r\n            // tứ quý chặt 1 hai\r\n            let tuQuy      = TLMN.getTuQuyOnHand(cardHand);\r\n            let indexTuQuy = tuQuy.indexOf(cardSelect);\r\n            if (indexTuQuy != -1){\r\n                tuQuy.splice(indexTuQuy, 1);\r\n                return tuQuy;\r\n            }\r\n            let doiThong = TLMN.getBaDoiThong(cardHand);\r\n            let indexDoiThong = doiThong.indexOf(cardSelect);\r\n            if (indexDoiThong != -1){\r\n                doiThong.splice(indexDoiThong, 1);\r\n                return doiThong;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_COUPLE){\r\n        if(TLMN.getValue(lastCard[0]) == 12){\r\n            // tứ quý chặt doi hai\r\n            let tuQuy      = TLMN.getTuQuyOnHand(cardHand);\r\n            let indexTuQuy = tuQuy.indexOf(cardSelect);\r\n            if (indexTuQuy != -1){\r\n                tuQuy.splice(indexTuQuy, 1);\r\n                return tuQuy;\r\n            }\r\n            // 4 doi thong\r\n            let bonDoiThong      = TLMN.getBonDoiThong(cardHand);\r\n            let indexBonDoi = bonDoiThong.indexOf(cardSelect);\r\n            if (indexBonDoi != -1){\r\n                bonDoiThong.splice(indexBonDoi, 1);\r\n                return bonDoiThong;\r\n            }\r\n        }\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if(TLMN.getValue(cardHand[i]) == TLMN.getValue(cardSelect) && cardHand[i] != cardSelect){\r\n                cards.push(cardHand[i]);\r\n                return cards;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_SERIAL){\r\n        let StartID = cardSelect;\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if(TLMN.getValue(cardHand[i]) == (TLMN.getValue(StartID) + 1) && cardHand[i] != cardSelect){\r\n                cards.push(cardHand[i]);\r\n                StartID = cardHand[i];\r\n                if(cards.length == lastCard.length - 1){\r\n                    return cards;\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_THREE_COUPLE){\r\n        let tuQuy      = TLMN.getTuQuyOnHand(cardHand);\r\n        let indexTuQuy = tuQuy.indexOf(cardSelect);\r\n        if (indexTuQuy != -1){\r\n            tuQuy.splice(indexTuQuy, 1);\r\n            return tuQuy;\r\n        }\r\n        let doiThong = TLMN.getBaDoiThong(cardHand);\r\n        let indexDoiThong = doiThong.indexOf(cardSelect);\r\n        if (indexDoiThong != -1){\r\n            doiThong.splice(indexDoiThong, 1);\r\n            return doiThong;\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_SERIAL_COUPLE){\r\n        if(cardHand.length < lastCard.length)\r\n            return [];\r\n        let bonDoiThong      = TLMN.getBonDoiThong(cardHand);\r\n        let indexBonDoi = bonDoiThong.indexOf(cardSelect);\r\n        if (indexBonDoi != -1){\r\n            bonDoiThong.splice(indexBonDoi, 1);\r\n            return bonDoiThong;\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_XAMCO){\r\n        for(let i = 0; i < cardHand.length;i++){\r\n            if(TLMN.getValue(cardHand[i]) == TLMN.getValue(cardSelect) && cardHand[i] != cardSelect){\r\n                cards.push(cardHand[i]);\r\n                if(cards.length == 2)\r\n                    return cards;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    if(typeLastCard == TLMN.TypeCard.CARDS_TUQUY){\r\n        let tuQuy      = TLMN.getTuQuyOnHand(cardHand);\r\n        let indexTuQuy = tuQuy.indexOf(cardSelect);\r\n        if (indexTuQuy != -1){\r\n            tuQuy.splice(indexTuQuy, 1);\r\n            return tuQuy;\r\n        }\r\n        return [];\r\n    }\r\n    return cards;\r\n}\r\nmodule.exports = {\r\n    Suit: Suit,\r\n    Card: Card,\r\n    TLMN: TLMN\r\n}\r\n"]}