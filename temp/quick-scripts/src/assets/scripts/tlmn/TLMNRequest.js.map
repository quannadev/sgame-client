{"version":3,"sources":["assets\\scripts\\tlmn\\TLMNRequest.js"],"names":["TLMNRequest","REQUEST_NAME","SIT_ON_REQUEST","SIT_OUT_REQUEST","STAND_UP_REQUEST","PRE_START_REQUEST","START_REQUEST","FIRE_REQUEST","KICK_REQUEST","FINISH_GAME_REQUEST","LOAD_TABLE_REQUEST","FOLD_REQUEST","USER_TURN_REQUEST","CHEAT_REQUEST","_BaseRequest","SmartFoxSDK","Class","extend","ctor","name","_requestName","_params","SObject","_roomId","undefined","setRoomId","id","getRequestName","toSRequest","SmartFox","Requests","System","ExtensionRequest","SitOnRequest","PokerRequest","_super","setDeskId","putInt","constructor","DESK_ID","setAutoSitOn","AUTO_SIT_ON","SitOutRequest","setSitOut","sit_out","putBool","IS_SIT_OUT","StandUpRequest","FireRequest","setCards","cards","putByteArray","FoldRequest","CheatReequst","setTypeUser","type","user","putUtfString","window"],"mappings":"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","sourceRoot":"/","sourcesContent":["let TLMNRequest = {};\r\nTLMNRequest.REQUEST_NAME = {\r\n    SIT_ON_REQUEST : \"tl1\",\r\n    SIT_OUT_REQUEST : \"tl2\",\r\n    STAND_UP_REQUEST : \"tl3\",\r\n    PRE_START_REQUEST : \"tl4\",\r\n    START_REQUEST : \"tl5\",\r\n    FIRE_REQUEST : \"tl6\",\r\n    KICK_REQUEST : \"tl7\",\r\n    FINISH_GAME_REQUEST : \"tl8\",\r\n    LOAD_TABLE_REQUEST : \"tl9\",\r\n    FOLD_REQUEST : \"tl10\",\r\n    USER_TURN_REQUEST : \"tl11\",\r\n    CHEAT_REQUEST : \"cheat\",\r\n}\r\n//\r\nTLMNRequest._BaseRequest = SmartFoxSDK.Class.extend({\r\n    ctor(name){\r\n        this._requestName = name;\r\n        this._params = new SmartFoxSDK.SObject();\r\n        this._roomId = undefined;\r\n    },\r\n    setRoomId(id){\r\n        this._roomId = id;\r\n        return this;\r\n    },\r\n    getRequestName(){\r\n        return this._requestName;\r\n    },\r\n    toSRequest(){\r\n        return new SmartFoxSDK.SmartFox.Requests.System.ExtensionRequest(this._requestName, this._params, this._roomId);\r\n    }\r\n});\r\n//\r\nTLMNRequest.SitOnRequest = PokerRequest._BaseRequest.extend({\r\n    ctor(){\r\n        this._super(TLMNRequest.REQUEST_NAME.SIT_ON_REQUEST);\r\n    },\r\n    setDeskId(id){\r\n        this._params.putInt(this.constructor.DESK_ID, id);\r\n        return this;\r\n    },\r\n    setAutoSitOn(){\r\n        this._params.putInt(this.constructor.AUTO_SIT_ON, -10);\r\n        return this;\r\n    }\r\n});\r\nTLMNRequest.SitOnRequest.DESK_ID = \"id\";\r\nTLMNRequest.SitOnRequest.AUTO_SIT_ON = \"as\";\r\n//\r\nTLMNRequest.SitOutRequest = TLMNRequest._BaseRequest.extend({\r\n    ctor(){\r\n        this._super(TLMNRequest.REQUEST_NAME.SIT_OUT_REQUEST);\r\n    },\r\n    setSitOut(sit_out){\r\n        this._params.putBool(this.constructor.IS_SIT_OUT, sit_out);\r\n        return this;\r\n    }\r\n});\r\nTLMNRequest.SitOutRequest.IS_SIT_OUT = \"iso\";\r\n//\r\nTLMNRequest.StandUpRequest = TLMNRequest._BaseRequest.extend({\r\n    ctor(){\r\n        this._super(TLMNRequest.REQUEST_NAME.STAND_UP_REQUEST);\r\n    }\r\n});\r\n//\r\nTLMNRequest.FireRequest = TLMNRequest._BaseRequest.extend({\r\n    ctor(){\r\n        this._super(TLMNRequest.REQUEST_NAME.FIRE_REQUEST);\r\n    },\r\n    setCards(cards){\r\n        this._params.putByteArray(\"c\",cards);\r\n        return this;\r\n    }\r\n});\r\nTLMNRequest.FoldRequest = TLMNRequest._BaseRequest.extend({\r\n    ctor(){\r\n        this._super(TLMNRequest.REQUEST_NAME.FOLD_REQUEST);\r\n    }\r\n});\r\nTLMNRequest.CheatReequst = TLMNRequest._BaseRequest.extend({\r\n    ctor(){\r\n        this._super(\"cheat\");\r\n    },\r\n    setTypeUser(type, user){\r\n        this._params.putInt(\"t\", type);\r\n        this._params.putUtfString(\"u\", user);\r\n        return this;\r\n    }\r\n})\r\nwindow.TLMNRequest = TLMNRequest;\r\n"]}