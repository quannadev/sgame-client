{"version":3,"sources":["assets\\scripts\\abase\\BaseGame.js"],"names":["cc","BaseGame","Class","VozBaseComponent","properties","poses","type","Node","nodePlayers","WaitingTimer","BaseController","prefabPlayer","Prefab","_number_desk","_CURRENT_POS","controller","_room","lb_bet_title","Label","lb_id_table","requestLeaveRoom","mm","Loading","show","ZoneInstance","send","SmartFoxSDK","SmartFox","Requests","System","LeaveRoomRequest","setInfoTable","table_name","table_bet","string","eventBack","setWaitingTimer","isOn","totalProcess","currentProcess","active","timer","getComponent","name","setTotalProgress","setCurrentProgress","turnOnTimer","showDeskEmpty","_isPlayer","mySelf","i","_children","length","player","_getJSPlayerById","hideDeskEmpty","_changeToMyView","myId","_getPlayerId","myPos","maxUsers","distanceToZero","nodePlayer","_getNodePlayerById","isValid","newIndex","position","js","_getJSPlayer","newPos","number_desk","updatePosHand","_updateNodePlayers","m_listDesk","desk","DeskId","instantiate","addChild","playerId","displayName","GameVariables","getDisplayName","getUserByName","UserName","setDesk","removePlayer","userOut","_getJSPlayerByName","getDesk","_removeNodePlayerById","m_tableInfo","splice","indexOf","m_listUser","turnOffAllTimerPlayers","m_listActiveUserName","turnOffTimer","idPlayer","removeChild","username","deskId"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.BaseGame = cc.Class({\r\n    extends: cc.VozBaseComponent,\r\n\r\n    properties: {\r\n        poses: {\r\n            default: [],\r\n            type: cc.Node\r\n        },\r\n        nodePlayers: cc.Node,\r\n        WaitingTimer: cc.Node,\r\n        BaseController: cc.Node,\r\n        prefabPlayer: cc.Prefab,\r\n        _number_desk: 4,\r\n        _CURRENT_POS: cc.Node,\r\n        controller: null,\r\n        _room: null,\r\n        lb_bet_title: cc.Label,\r\n        lb_id_table: cc.Label\r\n    },\r\n    requestLeaveRoom(){\r\n        mm.Loading.show();\r\n        this.controller.ZoneInstance.send(new SmartFoxSDK.SmartFox.Requests.System.LeaveRoomRequest(this._room));\r\n    },\r\n    setInfoTable(table_name, table_bet){\r\n        this.lb_id_table.string = table_name;\r\n        this.lb_bet_title.string = table_bet;\r\n    },\r\n    eventBack(){\r\n\r\n    },\r\n    setWaitingTimer(isOn, totalProcess, currentProcess){\r\n        if(isOn){\r\n            this.WaitingTimer.active = true;\r\n            let timer = this.WaitingTimer.getComponent(this.WaitingTimer.name);\r\n            timer.setTotalProgress(totalProcess);\r\n            timer.setCurrentProgress(currentProcess);\r\n            timer.turnOnTimer();\r\n        }else{\r\n            this.WaitingTimer.active = false;\r\n        }\r\n    },\r\n    showDeskEmpty(){\r\n        if(this._isPlayer(this.controller.ZoneInstance.mySelf.name))\r\n            return;\r\n        for(let i = 0; i < this._CURRENT_POS._children.length; i++){\r\n            let player = this._getJSPlayerById(i);\r\n            if(!player){\r\n                this._CURRENT_POS._children[i].active = true;\r\n            }\r\n        }\r\n    },\r\n    hideDeskEmpty(){\r\n        for(let i = 0; i < this._number_desk; i++){\r\n            let player = this._getJSPlayerById(i);\r\n            if(!player){\r\n                this._CURRENT_POS._children[i].active = false;\r\n            }\r\n        }\r\n    },\r\n    _changeToMyView(){\r\n        if(this._isPlayer(this.controller.ZoneInstance.mySelf.name)){\r\n            let myId = this._getPlayerId(this.controller.ZoneInstance.mySelf.name);\r\n            let myPos = myId;\r\n            let maxUsers = this._number_desk;\r\n            let distanceToZero = maxUsers - myPos;\r\n            for(let i = 0; i < maxUsers; i++){\r\n                let nodePlayer = this._getNodePlayerById(i);\r\n                if(cc.isValid(nodePlayer)){\r\n                    let newIndex = (i + distanceToZero) % maxUsers;\r\n                    nodePlayer.position = this.poses[newIndex];\r\n                    let js = this._getJSPlayer(nodePlayer);\r\n                    js.newPos = newIndex;\r\n                    js.number_desk = this._number_desk;\r\n                    js.updatePosHand();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _updateNodePlayers(m_listDesk){\r\n        // process List Desk for player\r\n        for(let i = 0; i < m_listDesk.length;i++){\r\n            let desk = m_listDesk[i];\r\n            let nodePlayer = this._getNodePlayerById(desk.DeskId);\r\n            if(nodePlayer == null){\r\n                nodePlayer = cc.instantiate(this.prefabPlayer);\r\n                this.nodePlayers.addChild(nodePlayer);\r\n            }\r\n            nodePlayer.position = this.poses[desk.DeskId].position;\r\n            nodePlayer.playerId = desk.DeskId;\r\n            desk.displayName = GameVariables.getDisplayName(this._room.getUserByName(desk.UserName));\r\n            this._getJSPlayer(nodePlayer).setDesk(desk);\r\n        }\r\n        this._changeToMyView();\r\n    },\r\n\r\n    removePlayer(userOut){\r\n        // remove player in active\r\n        // remove desk in listDesk mm.mm_tableInfo\r\n        // remove user in mm.m_tableInfo.m_listUser\r\n        for(let i = 0; i < userOut.length; i++){\r\n            let player = this._getJSPlayerByName(userOut);\r\n            if(player && player.getDesk().UserName == userOut[i]){\r\n                this._removeNodePlayerById(player.getDesk().DeskId);\r\n                this.controller.m_tableInfo.m_listDesk.splice(this.controller.m_tableInfo.m_listDesk.indexOf(player.getDesk()), 1);\r\n                this.controller.m_tableInfo.m_listUser.splice(this.controller.m_tableInfo.m_listUser.indexOf(userOut[i]), 1);\r\n            }\r\n        }\r\n    },\r\n    turnOffAllTimerPlayers(){\r\n        if(this.controller.m_tableInfo && this.controller.m_tableInfo.m_listActiveUserName){\r\n            for(let i = 0; i < this.controller.m_tableInfo.m_listActiveUserName.length;i++){\r\n                let player = this._getJSPlayerByName(this.controller.m_tableInfo.m_listActiveUserName[i]);\r\n                if(player){\r\n                    player.turnOffTimer();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getNodePlayerById(idPlayer){\r\n        for(let i = 0; i < this.nodePlayers._children.length;i++){\r\n            if(this.nodePlayers._children[i].playerId == idPlayer){\r\n                return this.nodePlayers._children[i];\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    _removeNodePlayerById(idPlayer){\r\n        for(let i = 0; i < this.nodePlayers._children.length;i++){\r\n            if(this.nodePlayers._children[i].playerId == idPlayer){\r\n                this.nodePlayers._children[i].active = false;\r\n                this.nodePlayers.removeChild(this.nodePlayers._children[i], true);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    _getJSPlayer(nodePlayer){\r\n        return nodePlayer.getComponent(nodePlayer.name);\r\n    },\r\n    _getJSPlayerById(idPlayer){\r\n        let nodePlayer = this._getNodePlayerById(idPlayer);\r\n        if(cc.isValid(nodePlayer))\r\n            return this._getJSPlayer(nodePlayer);\r\n        return null;\r\n    },\r\n    _getJSPlayerByName(username){\r\n        let deskId = this._getPlayerId(username);\r\n        let player = this._getJSPlayerById(deskId);\r\n        return player;\r\n    },\r\n    _getPlayerId(username){\r\n        if(this.controller.m_tableInfo && this.controller.m_tableInfo.m_listDesk){\r\n            for(let i = 0; i < this.controller.m_tableInfo.m_listDesk.length;i++){\r\n                let desk = this.controller.m_tableInfo.m_listDesk[i];\r\n                if(desk.UserName == username){\r\n                    return desk.DeskId;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n    _isPlayer(username){\r\n        if(this.controller.m_tableInfo && this.controller.m_tableInfo.m_listDesk){\r\n            for(let i = 0; i < this.controller.m_tableInfo.m_listDesk.length;i++){\r\n                let desk = this.controller.m_tableInfo.m_listDesk[i];\r\n                if(desk.UserName == username){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n});\r\n"]}