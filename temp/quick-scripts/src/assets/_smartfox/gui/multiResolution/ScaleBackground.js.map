{"version":3,"sources":["assets\\_smartfox\\gui\\multiResolution\\ScaleBackground.js"],"names":["cc","_decorator","ccclass","property","ScaleBackground","onLoad","srcScaleForShowAll","Math","min","view","getCanvasSize","width","node","height","realWidth","realHeight","scale","max","Component"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;qBAwB8BA,EAAE,CAACC;IAAzBC,yBAAAA;IAASC,0BAAAA;AAEjB;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BqBC,kBADpBF;;;;;;;;;SAEGG,SAAA,kBAAS;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,QAAIC,kBAAkB,GAAGC,IAAI,CAACC,GAAL,CAASR,EAAE,CAACS,IAAH,CAAQC,aAAR,GAAwBC,KAAxB,GAAgC,KAAKC,IAAL,CAAUD,KAAnD,EAA0DX,EAAE,CAACS,IAAH,CAAQC,aAAR,GAAwBG,MAAxB,GAAiC,KAAKD,IAAL,CAAUC,MAArG,CAAzB;AACA,QAAIC,SAAS,GAAG,KAAKF,IAAL,CAAUD,KAAV,GAAkBL,kBAAlC;AACA,QAAIS,UAAU,GAAG,KAAKH,IAAL,CAAUC,MAAV,GAAmBP,kBAApC,CAhBK,CAkBL;;AACA,SAAKM,IAAL,CAAUI,KAAV,GAAkBT,IAAI,CAACU,GAAL,CAASjB,EAAE,CAACS,IAAH,CAAQC,aAAR,GAAwBC,KAAxB,GAAgCG,SAAzC,EAAoDd,EAAE,CAACS,IAAH,CAAQC,aAAR,GAAwBG,MAAxB,GAAiCE,UAArF,CAAlB,CAnBK,CAqBL;AACA;AACA;AACA;AACA;AACH;;;EA3BwCf,EAAE,CAACkB","sourceRoot":"/","sourcesContent":["/**\r\n *\r\n *\r\n *                                                    __----~~~~~~~~~~~------___\r\n *                                   .  .   ~~//====......          __--~ ~~\r\n *                   -.            \\_|//     |||\\\\  ~~~~~~::::... /~\r\n *                ___-==_       _-~o~  \\/    |||  \\\\            _/~~-\r\n *        __---~~~.==~||\\=_    -_--~/_-~|-   |\\\\   \\\\        _/~\r\n *    _-~~     .=~    |  \\\\-_    '-~7  /-   /  ||    \\      /\r\n *  .~       .~       |   \\\\ -_    /  /-   /   ||      \\   /\r\n * /  ____  /         |     \\\\ ~-_/  /|- _/   .||       \\ /\r\n * |~~    ~~|--~~~~--_ \\     ~==-/   | \\~--===~~        .\\\r\n *          '         ~-|      /|    |-~\\~~       __--~~\r\n *                      |-~~-_/ |    |   ~\\_   _-~            /\\\r\n *                           /  \\     \\__   \\/~                \\__\r\n *                       _--~ _/ | .-~~____--~-/                  ~~==.\r\n *                      ((->/~   '.|||' -_|    ~~-/ ,              . _||\r\n *                                 -_     ~\\      ~~---l__i__i__i--~~_/\r\n *                                 _-~-__   ~)  \\--______________--~~\r\n *                               //.-~~~-~_--~- |-------~~~~~~~~\r\n *                                      //.-~~~--\\\r\n *                               神兽保佑\r\n *                              代码无BUG!\r\n */\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * @classdesc 背景自适应所有分辨率的脚本\r\n * @author caizhitao\r\n * @version 0.1.0\r\n * @since 2018-11-30\r\n * @description\r\n *\r\n * 用法：\r\n *\r\n *      1. 将本组件挂载在节点上即可\r\n *\r\n * 注意：\r\n *\r\n *      1. 挂载这个脚本的节点不能加入Widget组件，不然这个适配是没有效果的\r\n *      2. 目前只支持 SHOW_ALL 模式下的背景缩放适配，不支持其他模式的背景缩放\r\n *\r\n * @example\r\n ```\r\n // e.g.\r\n // 代码中设置 SHOW_ALL 模式的参考代码\r\n cc.view.setDesignResolutionSize(720, 1280, cc.ResolutionPolicy.SHOW_ALL);\r\n\r\n // 或者 Canvas 组件中，同时勾选 Fit Width 和 Fit Height\r\n ```\r\n */\r\n\r\n@ccclass\r\nexport default class ScaleBackground extends cc.Component {\r\n    onLoad() {\r\n        // if (CC_DEBUG) {\r\n        //     cc.log(\"调整前\");\r\n        //     cc.log(`屏幕分辨率: ${cc.view.getCanvasSize().width} x ${cc.view.getCanvasSize().height}`);\r\n        //     cc.log(`视图窗口可见区域分辨率: ${cc.view.getVisibleSize().width} x ${cc.view.getVisibleSize().height}`);\r\n        //     cc.log(`视图中边框尺寸: ${cc.view.getFrameSize().width} x ${cc.view.getFrameSize().height}`);\r\n        //     cc.log(`设备或浏览器像素比例: ${cc.view.getDevicePixelRatio()}`);\r\n        //     cc.log(`画布X:设计X=${cc.view.getScaleX()} ，画布Y:设计Y=${cc.view.getScaleY()}`);\r\n        //     cc.log(`节点宽高: ${this.node.width} x ${this.node.height}`);\r\n        //     cc.log(`节点缩放: ${this.node.scaleX} x ${this.node.scaleY}`);\r\n        // }\r\n\r\n        // this.node.scale = Math.max(cc.view.getCanvasSize().width / this.node.width, cc.view.getCanvasSize().height / this.node.height);\r\n        // 1. 先找到 SHOW_ALL 模式适配之后，本节点的实际宽高以及初始缩放值\r\n        let srcScaleForShowAll = Math.min(cc.view.getCanvasSize().width / this.node.width, cc.view.getCanvasSize().height / this.node.height);\r\n        let realWidth = this.node.width * srcScaleForShowAll;\r\n        let realHeight = this.node.height * srcScaleForShowAll;\r\n\r\n        // 2. 基于第一步的数据，再做缩放适配\r\n        this.node.scale = Math.max(cc.view.getCanvasSize().width / realWidth, cc.view.getCanvasSize().height / realHeight);\r\n\r\n        // if (CC_DEBUG) {\r\n        //     cc.log(`节点在SHOW_ALL模式下展示的宽高: ${realWidth} x ${realHeight}`);\r\n        //     cc.log(`节点在SHOW_ALL模式下展示的缩放: ${srcScaleForShowAll}`);\r\n        //     cc.log(`节点在SHOW_ALL模式下还需要进行的缩放: ${this.node.scale} 才能达到全屏`);\r\n        // }\r\n    }\r\n}\r\n"]}