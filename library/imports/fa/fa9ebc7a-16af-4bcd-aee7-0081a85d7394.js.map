{"version":3,"sources":["assets/scripts/abase/BaseItemCustom.js"],"names":["SelectedType","cc","Enum","NONE","TOGGLE","SWITCH","BaseItemCustom","Class","editor","disallowMultiple","menu","executionOrder","VozBaseComponent","properties","selectedMode","type","tooltip","CC_DEV","selectedFlag","Node","visible","bool","selectedSpriteFrame","SpriteFrame","adaptiveSize","_selected","selected","get","set","val","active","spriteFrame","_unselectedSpriteFrame","_btnCom","btnCom","node","getComponent","Button","onDestroy","off","EventType","SIZE_CHANGED","_onSizeChange","_registerEvent","eventReg","_list","clickEvents","unshift","createEvt","on","_onItemAdaptive","component","handlerName","isValid","comName","name","match","pop","replace","evt","Component","EventHandler","target","handler","showAni","aniType","callFunc","del","acts","scaleTo","moveBy","height","width","push","CallFunc","_delSingleItem","n","displayData","length","listId","_listId","splice","runAction","Sequence","onClickThis","selectedId"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAGC,EAAE,CAACC,IAAH,CAAQ;AACzBC,EAAAA,IAAI,EAAE,CADmB;AAEzBC,EAAAA,MAAM,EAAE,CAFiB;AAEd;AACXC,EAAAA,MAAM,EAAE,CAHiB,CAGd;;AAHc,CAAR,CAArB;AAMAJ,EAAE,CAACK,cAAH,GAAqBL,EAAE,CAACM,KAAH,CAAS;AAC1BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,gBAAgB,EAAE,KADd;AAEJC,IAAAA,IAAI,EAAE,8BAFF;AAGJC,IAAAA,cAAc,EAAE,CAAC,IAHb,CAG2B;;AAH3B,GADkB;AAM1B,aAASV,EAAE,CAACW,gBANc;AAQ1BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,YAAY,EAAE;AACV,iBAASd,YAAY,CAACG,IADZ;AAEVY,MAAAA,IAAI,EAAEf,YAFI;AAGVgB,MAAAA,OAAO,EAAEC,MAAM,IAAI,aAHT,CAIV;AACA;AACA;AACA;AACA;AACA;AACA;;AAVU,KADN;AAaRC,IAAAA,YAAY,EAAE;AACV,iBAAS,IADC;AAEVH,MAAAA,IAAI,EAAEd,EAAE,CAACkB,IAFC;AAGVC,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIC,IAAI,GAAG,KAAKP,YAAL,GAAoB,CAA/B;AACA,YAAI,CAACO,IAAL,EACI,KAAKH,YAAL,GAAoB,IAApB;AACJ,eAAOG,IAAP;AACH;AARS,KAbN;AAuBRC,IAAAA,mBAAmB,EAAE;AACjB,iBAAS,IADQ;AAEjBP,MAAAA,IAAI,EAAEd,EAAE,CAACsB,WAFQ;AAGjBH,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIC,IAAI,GAAG,KAAKP,YAAL,IAAqBd,YAAY,CAACK,MAA7C;AACA,YAAI,CAACgB,IAAL,EACI,KAAKC,mBAAL,GAA2B,IAA3B;AACJ,eAAOD,IAAP;AACH;AARgB,KAvBb;AAiCRG,IAAAA,YAAY,EAAE;AACV,iBAAS,KADC;AAEVR,MAAAA,OAAO,EAAEC,MAAM,IAAI;AAFT,KAjCN;AAqCRQ,IAAAA,SAAS,EAAE,KArCH;AAsCRC,IAAAA,QAAQ,EAAE;AACNN,MAAAA,OAAO,EAAE,KADH;AAENO,MAAAA,GAFM,iBAEA;AACF,eAAO,KAAKF,SAAZ;AACH,OAJK;AAKNG,MAAAA,GALM,eAKFC,GALE,EAKG;AACL,aAAKJ,SAAL,GAAiBI,GAAjB;AACA,YAAI,CAAC,KAAKX,YAAV,EACI;;AACJ,gBAAQ,KAAKJ,YAAb;AACI,eAAKd,YAAY,CAACI,MAAlB;AACI,iBAAKc,YAAL,CAAkBY,MAAlB,GAA2BD,GAA3B;AACA;;AACJ,eAAK7B,YAAY,CAACK,MAAlB;AACI;AACA,iBAAKa,YAAL,CAAkBa,WAAlB,GAAgCF,GAAG,GAAG,KAAKP,mBAAR,GAA8B,KAAKU,sBAAtE;AACA;AAPR;AASH;AAlBK,KAtCF;AA0DRC,IAAAA,OAAO,EAAE,IA1DD;AA2DRC,IAAAA,MAAM,EAAE;AACJd,MAAAA,OAAO,EAAE,KADL;AAEJO,MAAAA,GAAG,EAAE,eAAY;AACb,YAAI,CAAC,KAAKM,OAAV,EACI,KAAKA,OAAL,GAAe,KAAKE,IAAL,CAAUC,YAAV,CAAuBnC,EAAE,CAACoC,MAA1B,CAAf;AACJ,eAAO,KAAKJ,OAAZ;AACH;AANG;AA3DA,GARc;AA6E1BK,EAAAA,SA7E0B,uBA6Ed;AACR,SAAKH,IAAL,CAAUI,GAAV,CAActC,EAAE,CAACkB,IAAH,CAAQqB,SAAR,CAAkBC,YAAhC,EAA8C,KAAKC,aAAnD,EAAkE,IAAlE;AACH,GA/EyB;AAiF1BC,EAAAA,cAjF0B,4BAiFT;AACb,QAAI,CAAC,KAAKC,QAAV,EAAoB;AAChB,UAAI,KAAKV,MAAL,IAAe,KAAKW,KAAL,CAAW/B,YAAX,GAA0B,CAA7C,EAAgD;AAC5C,aAAKoB,MAAL,CAAYY,WAAZ,CAAwBC,OAAxB,CAAgC,KAAKC,SAAL,CAAe,IAAf,EAAqB,aAArB,CAAhC;AACH;;AACD,UAAI,KAAKxB,YAAT,EAAuB;AACnB,aAAKW,IAAL,CAAUc,EAAV,CAAahD,EAAE,CAACkB,IAAH,CAAQqB,SAAR,CAAkBC,YAA/B,EAA6C,KAAKC,aAAlD,EAAiE,IAAjE;AACH;;AACD,WAAKE,QAAL,GAAgB,IAAhB;AACH;AACJ,GA3FyB;AA6F1BF,EAAAA,aA7F0B,2BA6FV;AACZ,SAAKG,KAAL,CAAWK,eAAX,CAA2B,KAAKf,IAAhC;AACH,GA/FyB;;AAgG1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACIa,EAAAA,SAvG0B,qBAuGhBG,SAvGgB,EAuGLC,WAvGK,EAuGQjB,IAvGR,EAuGc;AACpC,QAAI,CAACgB,SAAS,CAACE,OAAf,EACI,OAFgC,CAEzB;;AACXF,IAAAA,SAAS,CAACG,OAAV,GAAoBH,SAAS,CAACG,OAAV,IAAqBH,SAAS,CAACI,IAAV,CAAeC,KAAf,CAAqB,YAArB,EAAmCC,GAAnC,GAAyCC,OAAzC,CAAiD,OAAjD,EAA0D,EAA1D,CAAzC;AACA,QAAIC,GAAG,GAAG,IAAI1D,EAAE,CAAC2D,SAAH,CAAaC,YAAjB,EAAV;AACAF,IAAAA,GAAG,CAACG,MAAJ,GAAa3B,IAAI,IAAIgB,SAAS,CAAChB,IAA/B;AACAwB,IAAAA,GAAG,CAACR,SAAJ,GAAgBA,SAAS,CAACG,OAA1B;AACAK,IAAAA,GAAG,CAACI,OAAJ,GAAcX,WAAd;AACA,WAAOO,GAAP;AACH,GAhHyB;AAkH1BK,EAAAA,OAlH0B,mBAkHlBC,OAlHkB,EAkHTC,QAlHS,EAkHCC,GAlHD,EAkHM;AAAA;;AAC5B,QAAIC,IAAJ;;AACA,YAAQH,OAAR;AACI,WAAK,CAAL;AAAQ;AACJG,QAAAA,IAAI,GAAG,CACH,IAAInE,EAAE,CAACoE,OAAP,CAAe,EAAf,EAAmB,EAAnB,CADG,EAEH,IAAIpE,EAAE,CAACqE,MAAP,CAAc,EAAd,EAAkB,CAAlB,EAAqB,KAAKnC,IAAL,CAAUoC,MAAV,GAAmB,CAAxC,CAFG,CAAP;AAIA;;AACJ,WAAK,CAAL;AAAQ;AACJH,QAAAA,IAAI,GAAG,CACH,IAAInE,EAAE,CAACoE,OAAP,CAAe,EAAf,EAAmB,EAAnB,CADG,EAEH,IAAIpE,EAAE,CAACqE,MAAP,CAAc,EAAd,EAAkB,KAAKnC,IAAL,CAAUqC,KAAV,GAAkB,CAApC,EAAuC,CAAvC,CAFG,CAAP;AAIA;;AACJ,WAAK,CAAL;AAAQ;AACJJ,QAAAA,IAAI,GAAG,CACH,IAAInE,EAAE,CAACoE,OAAP,CAAe,EAAf,EAAmB,EAAnB,CADG,EAEH,IAAIpE,EAAE,CAACqE,MAAP,CAAc,EAAd,EAAkB,CAAlB,EAAqB,KAAKnC,IAAL,CAAUoC,MAAV,GAAmB,CAAC,CAAzC,CAFG,CAAP;AAIA;;AACJ,WAAK,CAAL;AAAQ;AACJH,QAAAA,IAAI,GAAG,CACH,IAAInE,EAAE,CAACoE,OAAP,CAAe,EAAf,EAAmB,EAAnB,CADG,EAEH,IAAIpE,EAAE,CAACqE,MAAP,CAAc,EAAd,EAAkB,KAAKnC,IAAL,CAAUqC,KAAV,GAAkB,CAAC,CAArC,EAAwC,CAAxC,CAFG,CAAP;AAIA;;AACJ;AAAS;AACLJ,QAAAA,IAAI,GAAG,CACH,IAAInE,EAAE,CAACoE,OAAP,CAAe,EAAf,EAAmB,EAAnB,CADG,CAAP;AAGA;AA7BR;;AA+BA,QAAIH,QAAQ,IAAIC,GAAhB,EAAqB;AACjBC,MAAAA,IAAI,CAACK,IAAL,CAAU,IAAIxE,EAAE,CAACyE,QAAP,CAAgB,YAAM;AAC5B,YAAIP,GAAJ,EAAS;AACL,UAAA,KAAI,CAACtB,KAAL,CAAW8B,cAAX,CAA0B,KAAI,CAACxC,IAA/B;;AACA,eAAK,IAAIyC,CAAC,GAAG,KAAI,CAAC/B,KAAL,CAAWgC,WAAX,CAAuBC,MAAvB,GAAgC,CAA7C,EAAgDF,CAAC,IAAI,CAArD,EAAwDA,CAAC,EAAzD,EAA6D;AACzD,gBAAI,KAAI,CAAC/B,KAAL,CAAWgC,WAAX,CAAuBD,CAAvB,EAA0BG,MAA1B,IAAoC,KAAI,CAAC5C,IAAL,CAAU6C,OAAlD,EAA2D;AACvD,cAAA,KAAI,CAACnC,KAAL,CAAWgC,WAAX,CAAuBI,MAAvB,CAA8BL,CAA9B,EAAiC,CAAjC;;AACA;AACH;AACJ;AACJ;;AACDV,QAAAA,QAAQ;AACX,OAXS,CAAV;AAYH;;AACD,SAAK/B,IAAL,CAAU+C,SAAV,CAAoB,IAAIjF,EAAE,CAACkF,QAAP,CAAgBf,IAAhB,CAApB;AACH,GAlKyB;AAoK1BgB,EAAAA,WApK0B,yBAoKZ;AACV;AACA,SAAKvC,KAAL,CAAWwC,UAAX,GAAwB,KAAKlD,IAAL,CAAU6C,OAAlC;AACH;AAvKyB,CAAT,CAArB","sourceRoot":"/","sourcesContent":["/******************************************\n * @author kL <klk0@qq.com>\n * @date 2019/5/15\n * @doc List Item component..\n * 说明：\n *      1. This component must be used in conjunction with the List component. (Supporting ..)\n * @end\n ******************************************/\nconst SelectedType = cc.Enum({\n    NONE: 0,\n    TOGGLE: 1, // Single (Single node show / hide)\n    SWITCH: 2, // Switch (single Sprite switch SpriteFrame)\n});\n\ncc.BaseItemCustom  = cc.Class({\n    editor: {\n        disallowMultiple: false,\n        menu: 'Custom component / List Item',\n        executionOrder: -5001,         // Before List\n    },\n    extends: cc.VozBaseComponent,\n\n    properties: {\n        selectedMode: {\n            default: SelectedType.NONE,\n            type: SelectedType,\n            tooltip: CC_DEV && 'Select mode',\n            // get: function () {\n            //     return this._slideType;\n            // },\n            // set: function (val) {\n            //     if (val != null)\n            //         this._slideType = val;\n            // }\n        },\n        selectedFlag: {\n            default: null,\n            type: cc.Node,\n            visible: function () {\n                let bool = this.selectedMode > 0;\n                if (!bool)\n                    this.selectedFlag = null;\n                return bool;\n            },\n        },\n        selectedSpriteFrame: {\n            default: null,\n            type: cc.SpriteFrame,\n            visible: function () {\n                let bool = this.selectedMode == SelectedType.SWITCH;\n                if (!bool)\n                    this.selectedSpriteFrame = null;\n                return bool;\n            },\n        },\n        adaptiveSize: {\n            default: false,\n            tooltip: CC_DEV && 'Adaptive size (width or height)',\n        },\n        _selected: false,\n        selected: {\n            visible: false,\n            get() {\n                return this._selected;\n            },\n            set(val) {\n                this._selected = val;\n                if (!this.selectedFlag)\n                    return;\n                switch (this.selectedMode) {\n                    case SelectedType.TOGGLE:\n                        this.selectedFlag.active = val;\n                        break;\n                    case SelectedType.SWITCH:\n                        // this.selectedFlag.node.active = true;\n                        this.selectedFlag.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\n                        break;\n                }\n            }\n        },\n        _btnCom: null,\n        btnCom: {\n            visible: false,\n            get: function () {\n                if (!this._btnCom)\n                    this._btnCom = this.node.getComponent(cc.Button);\n                return this._btnCom;\n            }\n        },\n    },\n\n    onDestroy() {\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\n    },\n\n    _registerEvent() {\n        if (!this.eventReg) {\n            if (this.btnCom && this._list.selectedMode > 0) {\n                this.btnCom.clickEvents.unshift(this.createEvt(this, 'onClickThis'));\n            }\n            if (this.adaptiveSize) {\n                this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\n            }\n            this.eventReg = true;\n        }\n    },\n\n    _onSizeChange() {\n        this._list._onItemAdaptive(this.node);\n    },\n    /**\n     * Create event\n     * @param {cc.Component} component Component script\n     * @param {string} handlerName Trigger function name\n     * @param {cc.Node} node Where the components are node（Take it without transmitting component.node）\n     * @returns cc.Component.EventHandler\n     */\n    createEvt(component, handlerName, node) {\n        if (!component.isValid)\n            return;//Some are loaded asynchronously, and nodes are destroyed as well.\n        component.comName = component.comName || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\n        let evt = new cc.Component.EventHandler();\n        evt.target = node || component.node;\n        evt.component = component.comName;\n        evt.handler = handlerName;\n        return evt;\n    },\n\n    showAni(aniType, callFunc, del) {\n        let acts;\n        switch (aniType) {\n            case 0: //Disappearance\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, 0, this.node.height * 2),\n                ];\n                break;\n            case 1: //Disappear right\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, this.node.width * 2, 0),\n                ];\n                break;\n            case 2: //Disappear down\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, 0, this.node.height * -2),\n                ];\n                break;\n            case 3: //Disappear left\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, this.node.width * -2, 0),\n                ];\n                break;\n            default: // Default: zoom out\n                acts = [\n                    new cc.scaleTo(.3, .1),\n                ];\n                break;\n        }\n        if (callFunc || del) {\n            acts.push(new cc.CallFunc(() => {\n                if (del) {\n                    this._list._delSingleItem(this.node);\n                    for (let n = this._list.displayData.length - 1; n >= 0; n--) {\n                        if (this._list.displayData[n].listId == this.node._listId) {\n                            this._list.displayData.splice(n, 1);\n                            break;\n                        }\n                    }\n                }\n                callFunc();\n            }));\n        }\n        this.node.runAction(new cc.Sequence(acts));\n    },\n\n    onClickThis() {\n        // if (this._list.selectedMode == 1)\n        this._list.selectedId = this.node._listId;\n    },\n});\n"]}