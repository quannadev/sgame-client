{"version":3,"sources":["assets\\scripts\\poker\\PlayerPoker.js"],"names":["PokerCard","require","cc","Class","Player","properties","cards","type","Node","Hands","BigBlind","SmallBlind","BetChip","_actionController","m_total_bet","TypeOfHand","Label","onEnable","_super","zoneName","active","node","hideWinEffect","onDisable","reset","Status","hideHoldem","resetBet","setActionController","actionController","addCardHand","cardIds","i","length","card","getComponent","init","reveal","Card","scaleHoldEm","isItMe","scale","onStartEvent","startEvent","opacity","m_listCard","m_smallBlind","_desk","UserName","m_betChipGame","showBetChip","UserChip","setMoney","m_bigBlind","m_currentUser","time","m_userTime","setTotalProgress","setCurrentProgress","setTimeWarning","turnOnTimer","isValid","showCallRaise","updatePosHand","newPos","undefined","number_desk","x","onTurnEvent","userTurnRes","m_time","betChip","m_betchip","showCheck","hideAllActions","onFoldEvent","userFoldRes","Utils","loadRes","Sprite","turnOffTimer","onCheckEvent","userCheckRes","onCallEvent","userCallRes","callChip","m_chip","onRaiseEvent","userRaiseRes","raiseChip","onAllInEvent","userAllInRes","onShowDownEvent","onGameFinishEvent","winCards","typeofHand","chipWin","getDesk","_card","indexOf","id","showOver","winningHands","HIGHCARD","PAIR","TWOPAIR","THREEOFAKIND","STRAIGHT","FLUSH","FULLHOUSE","FOUROFAKIND","STRAIGHTFLUSH","ROYALFLUSH","string","onWinnerEvent","showWinEffect","money","lb_betChip","getChildByName","formatCurrency","toFixed","showBetting"],"mappings":"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","sourceRoot":"/","sourcesContent":["let PokerCard = require('PokerCard');\r\ncc.Class({\r\n    extends: cc.Player,\r\n\r\n    properties: {\r\n        cards :{\r\n            type: cc.Node,\r\n            default: []\r\n        },\r\n        Hands: cc.Node,\r\n        BigBlind: cc.Node,\r\n        SmallBlind: cc.Node,\r\n        BetChip : cc.Node,\r\n        _actionController: null,\r\n        m_total_bet: 0,\r\n        TypeOfHand: cc.Label\r\n    },\r\n    onEnable(){\r\n        this._super();\r\n        this.zoneName = \"poker\";\r\n        this.Hands.active = false;\r\n        this.BigBlind.active = false;\r\n        this.SmallBlind.active = false;\r\n        this.BetChip.active = false;\r\n        this.TypeOfHand.node.active =  false;\r\n        this.hideWinEffect();\r\n    },\r\n    onDisable(){\r\n        this.reset();\r\n    },\r\n    reset(){\r\n        this.Hands.active = false;\r\n        this.BigBlind.active = false;\r\n        this.SmallBlind.active = false;\r\n        this.Status.active = false;\r\n        this.BetChip.active = false;\r\n        this.TypeOfHand.node.active =  false;\r\n        this.Status.active = false;\r\n        this.hideWinEffect();\r\n        this.hideHoldem();\r\n        this.resetBet();\r\n    },\r\n    setActionController(actionController){\r\n        this._actionController = actionController;\r\n    },\r\n    addCardHand(cardIds){\r\n        this.Hands.active = true;\r\n        for(let i = 0; i < this.cards.length;i++){\r\n            let card = this.cards[i].getComponent(\"Card\");\r\n            if(cardIds[i] < 0){\r\n                card.init(null);\r\n            }else{\r\n                card.reveal(new PokerCard.Card(cardIds[i]));\r\n            }\r\n        }\r\n        this.scaleHoldEm();\r\n    },\r\n    scaleHoldEm(){\r\n        if(!this.isItMe()){\r\n            this.Hands.scale = 0.75;\r\n        }else{\r\n            this.Hands.scale = 1;\r\n        }\r\n    },\r\n    hideHoldem(){\r\n        this.Hands.active = false;\r\n    },\r\n    onStartEvent(startEvent){\r\n        this.BigBlind.active = false;\r\n        this.SmallBlind.active = false;\r\n        this.Status.active = false;\r\n        this.Hands.active = true;\r\n        for(let i = 0; i < this.cards.length;i++){\r\n            let card = this.cards[i].getComponent(\"Card\");\r\n            this.cards[i].opacity = 255;\r\n            if(this.isItMe()){\r\n                card.reveal(new PokerCard.Card(startEvent.m_listCard[i]));\r\n            }else{\r\n                card.init(null);\r\n            }\r\n        }\r\n        this.scaleHoldEm();\r\n\r\n        if(startEvent.m_smallBlind == this._desk.UserName){\r\n            this.SmallBlind.active = true;\r\n            this.m_total_bet = startEvent.m_betChipGame;\r\n            this.showBetChip(this.m_total_bet);\r\n            // sub money in Desk\r\n            this._desk.UserChip -= startEvent.m_betChipGame;\r\n            this.setMoney(this._desk.UserChip);\r\n        }else if(startEvent.m_bigBlind == this._desk.UserName){\r\n            this.BigBlind.active = true;\r\n            this.m_total_bet = 2*startEvent.m_betChipGame;\r\n            this.showBetChip(this.m_total_bet);\r\n\r\n            // sub money in Desk\r\n            this._desk.UserChip -= 2*startEvent.m_betChipGame;\r\n            this.setMoney(this._desk.UserChip);\r\n        }\r\n        if(startEvent.m_currentUser == this._desk.UserName){\r\n            let time = startEvent.m_userTime / 1000;\r\n            this.setTotalProgress(time);\r\n            this.setCurrentProgress(time);\r\n            this.setTimeWarning(5);\r\n            this.turnOnTimer();\r\n            if(cc.isValid(this._actionController)){\r\n                this._actionController.showCallRaise(startEvent.m_betChipGame, this._desk.UserChip, this.m_total_bet);\r\n            }\r\n        }\r\n    },\r\n    updatePosHand(){\r\n        if(this.newPos != undefined){\r\n            if(this.number_desk == 6){\r\n                if(this.newPos == 5 || this.newPos == 4 || this.newPos == 3){\r\n                    this.Hands.x = -110;\r\n                }else{\r\n                    this.Hands.x = 115;\r\n                }\r\n            }else{\r\n                if(this.newPos == 5 || this.newPos == 6 || this.newPos == 7){\r\n                    this.Hands.x = -110;\r\n                }else{\r\n                    this.Hands.x = 115;\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n    onTurnEvent(userTurnRes){\r\n        this.Status.active = false;\r\n        let time = userTurnRes.m_time / 1000;\r\n        this.setTotalProgress(time);\r\n        this.setCurrentProgress(time);\r\n        this.setTimeWarning(5);\r\n        this.turnOnTimer();\r\n        let betChip = userTurnRes.m_betchip;\r\n        // check action of myself\r\n        if(this.isItMe()){\r\n            // call or raise\r\n            if(betChip > 0){\r\n                if(cc.isValid(this._actionController)){\r\n                    if(betChip > this._desk.UserChip)\r\n                        betChip = this._desk.UserChip;\r\n                    this._actionController.showCallRaise(betChip, this._desk.UserChip, this.m_total_bet);\r\n                }\r\n            }else{\r\n                // check\r\n                if(cc.isValid(this._actionController)){\r\n                    this._actionController.showCheck(betChip, this._desk.UserChip, this.m_total_bet);\r\n                }\r\n            }\r\n        }else{\r\n            if(cc.isValid(this._actionController)){\r\n                this._actionController.hideAllActions();\r\n            }\r\n        }\r\n    },\r\n    onFoldEvent(userFoldRes){\r\n        Utils.loadRes(this.Status.getComponent(cc.Sprite), \"images/poker/PlayerStatus/fold-tag\");\r\n        this.turnOffTimer();\r\n        if(cc.isValid(this._actionController)){\r\n            this._actionController.hideAllActions();\r\n        }\r\n        this.Hands.active = false;\r\n    },\r\n    onCheckEvent(userCheckRes){\r\n        this.BetChip.active = false;\r\n        Utils.loadRes(this.Status.getComponent(cc.Sprite), \"images/poker/PlayerStatus/check-tag\");\r\n        if(cc.isValid(this._actionController)){\r\n            this._actionController.hideAllActions();\r\n        }\r\n    },\r\n    onCallEvent(userCallRes){\r\n        Utils.loadRes(this.Status.getComponent(cc.Sprite), \"images/poker/PlayerStatus/call-tag\");\r\n        let callChip = userCallRes.m_chip;\r\n        this.m_total_bet += callChip;\r\n        this.showBetChip(this.m_total_bet);\r\n\r\n        // sub money in Desk\r\n        this._desk.UserChip -= callChip;\r\n        this.setMoney(this._desk.UserChip);\r\n\r\n        if(cc.isValid(this._actionController)){\r\n            this._actionController.hideAllActions();\r\n        }\r\n    },\r\n    onRaiseEvent(userRaiseRes){\r\n        Utils.loadRes(this.Status.getComponent(cc.Sprite), \"images/poker/PlayerStatus/rasie-tag\");\r\n        let raiseChip = userRaiseRes.m_chip;\r\n        this.m_total_bet += raiseChip;\r\n        this.showBetChip(this.m_total_bet);\r\n\r\n        // sub money in Desk\r\n        this._desk.UserChip -= raiseChip;\r\n        this.setMoney(this._desk.UserChip);\r\n\r\n        if(cc.isValid(this._actionController)){\r\n            this._actionController.hideAllActions();\r\n        }\r\n    },\r\n    onAllInEvent(userAllInRes){\r\n        Utils.loadRes(this.Status.getComponent(cc.Sprite), \"images/poker/PlayerStatus/all-in-tag\");\r\n        let raiseChip = userAllInRes.m_chip;\r\n        this.m_total_bet += raiseChip;\r\n        this.showBetChip(this.m_total_bet);\r\n\r\n        // sub money in Desk\r\n        this._desk.UserChip -= raiseChip;\r\n        this.setMoney(this._desk.UserChip);\r\n\r\n        if(cc.isValid(this._actionController)){\r\n            this._actionController.hideAllActions();\r\n        }\r\n    },\r\n    onShowDownEvent(cardIds){\r\n        this.turnOffTimer();\r\n        this.Hands.active = true;\r\n        this.BetChip.active = false;\r\n        for(let i = 0; i < this.cards.length;i++){\r\n            let card = this.cards[i].getComponent(\"Card\");\r\n            if(this.isItMe()){\r\n                card.init(new PokerCard.Card(cardIds[i]));\r\n            }else{\r\n                card.reveal(new PokerCard.Card(cardIds[i]));\r\n            }\r\n\r\n        }\r\n    },\r\n    onGameFinishEvent(winCards, typeofHand, chipWin){\r\n        this.turnOffTimer();\r\n        if(chipWin > 0){\r\n            // chip refund\r\n            this._desk.UserChip += chipWin;\r\n            this.setMoney(this.getDesk().UserChip);\r\n        }\r\n        for(let i = 0; i < this.cards.length;i++){\r\n            let card = this.cards[i].getComponent(\"Card\");\r\n            if(card._card && winCards.indexOf(card._card.id) < 0){\r\n                card.showOver();\r\n            }\r\n        }\r\n        let winningHands = {\r\n            HIGHCARD : \"Mậu Thầu\",\r\n            PAIR: \"Một Đôi\",\r\n            TWOPAIR: \"Hai Đôi\",\r\n            THREEOFAKIND: \"Xám\",\r\n            STRAIGHT: \"Sảnh\",\r\n            FLUSH: \"Thùng\",\r\n            FULLHOUSE: \"Củ Lũ\",\r\n            FOUROFAKIND: \"Tứ Quý\",\r\n            STRAIGHTFLUSH: \"Sảnh Thùng\",\r\n            ROYALFLUSH: \"Thùng Phá Sảnh\"\r\n        }\r\n        if(winningHands[typeofHand]){\r\n            this.TypeOfHand.node.active = true;\r\n            this.TypeOfHand.string = winningHands[typeofHand];\r\n        }\r\n        this.m_total_bet = 0;\r\n    },\r\n    onWinnerEvent(){\r\n        this.showWinEffect();\r\n        this.turnOffTimer();\r\n    },\r\n    showBetChip(money){\r\n        if(money <= 0)\r\n            return;\r\n        this.BetChip.active = true;\r\n        let lb_betChip = this.BetChip.getChildByName(\"money\").getComponent(cc.Label);\r\n        lb_betChip.string = Utils.formatCurrency(money.toFixed(0));\r\n    },\r\n    turnOffTimer(){\r\n        this._super();\r\n        if(cc.isValid(this._actionController)){\r\n            this._actionController.hideAllActions();\r\n        }\r\n    },\r\n    showBetting(){\r\n        this.turnOnTimer();\r\n        if(cc.isValid(this._actionController)){\r\n            this._actionController.showCheck(this.m_total_bet, this._desk.UserChip, this.m_total_bet);\r\n        }\r\n    },\r\n    resetBet(){\r\n        this.m_total_bet = 0;\r\n        this.BetChip.active = false;\r\n    }\r\n});\r\n"]}