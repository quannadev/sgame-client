{"version":3,"sources":["assets/scripts/minipoker/MiniPokerTransactionItem.js"],"names":["PokerCard","require","cc","Class","BaseItemCustom","properties","lbSession","Label","lbTime","lbMucDat","listBoBai","Node","lbWin","_dataRank","init","dataRank","string","session","Utils","reFormatDisplayTime","time","win","self","newResult","_convertPosCard","resultMap","loader","loadRes","SpriteAtlas","err","atlas","console","log","ListCard","Promise","all","children","map","cardNode","index","getComponent","bind","eventDetail","mm","audio","playButton","result","i","length","card","Card","push","nameFile"],"mappings":";;;;;;AAAA,IAAIA,SAAS,GAAKC,OAAO,CAAC,WAAD,CAAzB;;AACAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,cADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAAKJ,EAAE,CAACK,KADT;AAERC,IAAAA,MAAM,EAAQN,EAAE,CAACK,KAFT;AAGRE,IAAAA,QAAQ,EAAMP,EAAE,CAACK,KAHT;AAIRG,IAAAA,SAAS,EAAKR,EAAE,CAACS,IAJT;AAKRC,IAAAA,KAAK,EAASV,EAAE,CAACK,KALT;AAMRM,IAAAA,SAAS,EAAM;AANP,GAHP;AAWLC,EAAAA,IAXK,gBAWAC,QAXA,EAWU;AACX,SAAKF,SAAL,GAAiBE,QAAjB;AACA,SAAKT,SAAL,CAAeU,MAAf,GAA0B,MAAID,QAAQ,CAACE,OAAvC;AACA,SAAKT,MAAL,CAAYQ,MAAZ,GAA0BE,KAAK,CAACC,mBAAN,CAA0BJ,QAAQ,CAACK,IAAnC,CAA1B;AACA,SAAKR,KAAL,CAAWI,MAAX,GAA0BD,QAAQ,CAACM,GAAnC;AACA,QAAIC,IAAI,GAAG,IAAX;;AACA,QAAIC,SAAS,GAAG,KAAKC,eAAL,CAAqBT,QAAQ,CAACU,SAA9B,CAAhB;;AACAvB,IAAAA,EAAE,CAACwB,MAAH,CAAUC,OAAV,CAAkB,kCAAlB,EAAsDzB,EAAE,CAAC0B,WAAzD,EAAsE,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACxF,UAAGD,GAAH,EAAO;AACHE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA;AACH;;AACDP,MAAAA,IAAI,CAACW,QAAL,GAAgBH,KAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACZ,SAAL,CAAe0B,QAAf,CAAwBC,GAAxB,CAA4B,UAASC,QAAT,EAAmBC,KAAnB,EAAyB;AAC7DD,QAAAA,QAAQ,CAACE,YAAT,CAAsB,eAAtB,EAAuC1B,IAAvC,CAA4CQ,IAA5C,EAAkDC,SAAS,CAACgB,KAAD,CAA3D;AACH,OAFW,CAAZ;AAGH,KATqE,CASpEE,IAToE,CAS/D,IAT+D,CAAtE;AAUH,GA5BI;AA6BLC,EAAAA,WA7BK,yBA6BS;AACVC,IAAAA,EAAE,CAACC,KAAH,CAASC,UAAT;AACH,GA/BI;AAgCLrB,EAAAA,eAhCK,2BAgCWsB,MAhCX,EAgCmB;AACpB,QAAIvB,SAAS,GAAE,EAAf;;AACA,SAAK,IAAIwB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAED,MAAM,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,UAAIE,IAAI,GAAG,IAAIjD,SAAS,CAACkD,IAAd,CAAmBJ,MAAM,CAACC,CAAD,CAAzB,CAAX;AACAxB,MAAAA,SAAS,CAAC4B,IAAV,CAAeF,IAAI,CAACG,QAApB;AACH;;AACD,WAAO7B,SAAP;AACH;AAvCI,CAAT","sourceRoot":"/","sourcesContent":["let PokerCard   = require(\"PokerCard\");\ncc.Class({\n    extends: cc.BaseItemCustom,\n\n    properties: {\n        lbSession   : cc.Label,\n        lbTime      : cc.Label,\n        lbMucDat    : cc.Label,\n        listBoBai   : cc.Node,\n        lbWin       : cc.Label,\n        _dataRank   :  null,\n    },\n    init(dataRank) {\n        this._dataRank = dataRank;\n        this.lbSession.string   = \"#\"+dataRank.session;\n        this.lbTime.string      = Utils.reFormatDisplayTime(dataRank.time);\n        this.lbWin.string       = dataRank.win;\n        let self = this;\n        let newResult = this._convertPosCard(dataRank.resultMap);\n        cc.loader.loadRes(\"images/minigame/minipoker/card2d\", cc.SpriteAtlas, function (err, atlas) {\n            if(err){\n                console.log(err);\n                return;\n            }\n            self.ListCard = atlas;\n            Promise.all(self.listBoBai.children.map(function(cardNode, index){\n                cardNode.getComponent('MiniPokerItem').init(self, newResult[index]);\n            }))\n        }.bind(this));\n    },\n    eventDetail() {\n        mm.audio.playButton();\n    },\n    _convertPosCard(result) {\n        let newResult =[];\n        for (let i=0; i< result.length; i++){\n            let card = new PokerCard.Card(result[i]);\n            newResult.push(card.nameFile);\n        }\n        return newResult;\n    },\n\n});\n"]}