{"version":3,"sources":["assets/scripts/poker/CommunityCards.js"],"names":["PokerCard","require","cc","Class","Component","properties","cards","type","Node","onLoad","posCards","i","length","push","position","reset","dealFlop","cardIds","console","error","card","getComponent","init","active","self","runAction","sequence","moveTo","callFunc","reveal","Card","dealTurn","dealRiver","showDown","showCommunityCard","showCommunityCardWin","_card","indexOf","id","showOver","hideOver"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\nlet PokerCard = require('PokerCard');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cards: {\n            type: cc.Node,\n            default: []\n        }\n    },\n    onLoad(){\n        this.posCards  = [];\n        for(let i = 0; i < this.cards.length;i++){\n            this.posCards.push(this.cards[i].position);\n        }\n        this.reset();\n    },\n    dealFlop(cardIds){\n        if(cardIds.length != 3){\n            console.error(\"Size cards Flop != 3\");\n        }else{\n            // actions\n            for(let i = 0; i < 3;i++){\n                let card = this.cards[i].getComponent(\"Card\");\n                card.init(null);\n                this.cards[i].position = this.posCards[0];\n                this.cards[i].active = true;\n            }\n            let self = this;\n\n            this.cards[0].runAction(cc.sequence(cc.moveTo(0.2,this.posCards[0]), cc.callFunc(function () {\n                let card = self.cards[0].getComponent(\"Card\");\n                card.reveal(new PokerCard.Card(cardIds[0]));\n            })));\n            this.cards[1].runAction(cc.sequence(cc.moveTo(0.2,this.posCards[1]), cc.callFunc(function () {\n                let card = self.cards[1].getComponent(\"Card\");\n                card.reveal(new PokerCard.Card(cardIds[1]));\n            })));\n\n            this.cards[2].runAction(cc.sequence(cc.moveTo(0.2,this.posCards[2]), cc.callFunc(function () {\n                let card = self.cards[2].getComponent(\"Card\");\n                card.reveal(new PokerCard.Card(cardIds[2]));\n            })));\n        }\n    },\n    dealTurn(cardIds){\n        if(cardIds.length != 1){\n            console.error(\"Size cards Turn != 1\");\n        }else{\n            let card = this.cards[3].getComponent(\"Card\");\n            card.reveal(new PokerCard.Card(cardIds[0]));\n        }\n    },\n    dealRiver(cardIds){\n        if(cardIds.length != 1){\n            console.error(\"Size cards River != 1\");\n        }else{\n            let card = this.cards[4].getComponent(\"Card\");\n            card.reveal(new PokerCard.Card(cardIds[0]));\n        }\n    },\n    showDown(cardIds){\n        for(let i = 0; i < cardIds.length ;i++){\n            let card = this.cards[i].getComponent(\"Card\");\n            if(this.cards[i].active){\n                card.init(new PokerCard.Card(cardIds[i]));\n            }else{\n                card.reveal(new PokerCard.Card(cardIds[i]));\n            }\n\n        }\n    },\n    showCommunityCard(cards){\n        if(cards.length == 0)\n            return;\n        // case if win before the turn river\n        for(let i = 0; i < this.cards.length;i++){\n            if(cards[i]){\n                let card = this.cards[i].getComponent(\"Card\");\n                if(this.cards[i].active){\n                    card.init(new PokerCard.Card(cards[i]));\n                }else{\n                    card.reveal(new PokerCard.Card(cards[i]));\n                }\n            }\n        }\n\n    },\n    showCommunityCardWin(cards){\n        for(let i = 0; i < this.cards.length;i++){\n            let card = this.cards[i].getComponent(\"Card\");\n            if(card._card != null && cards.indexOf(card._card.id) < 0){\n                card.showOver();\n            }\n        }\n    },\n    reset(){\n        for(let i = 0; i < this.cards.length;i++){\n            let card = this.cards[i].getComponent(\"Card\");\n            card.hideOver();\n            this.cards[i].active = false;\n        }\n    }\n});\n"]}