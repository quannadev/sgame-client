{"version":3,"sources":["assets\\scripts\\abase\\Listview.js"],"names":["TemplateType","cc","Enum","SlideType","SelectedType","Class","Component","editor","disallowMultiple","menu","requireComponent","ScrollView","executionOrder","properties","templateType","NODE","type","tmpNode","Node","tooltip","CC_DEV","visible","bool","tmpPrefab","Prefab","PREFAB","_slideMode","slideMode","get","set","val","pageDistance","Float","range","slide","PAGE","pageChangeEvent","EventHandler","_virtual","virtual","_numItems","_onScrolling","cyclic","NORMAL","lackCenter","lackSlide","_updateRate","updateRate","Integer","frameByFrameRenderNum","renderEvent","selectedMode","NONE","repeatEventSingle","SINGLE","selectedEvent","_selectedId","selectedId","t","item","getItemByListId","_lastSelectedId","listItem","selected","lastItem","emitEvents","_actualNumItems","MULT","sub","multSelected","indexOf","push","splice","serializable","numItems","checkInited","error","_forceUpdate","_resizeContent","_cyclicNum","curPageNum","nearestListId","layout","content","getComponent","Layout","enabled","_delRedundantItem","firstListId","len","n","_createOrUpdateItem2","_updateCounter","_updateDone","displayItemNum","onLoad","_init","onDestroy","_itemTmp","isValid","destroy","_pool","size","node","onEnable","_registerEvent","onDisable","_unregisterEvent","on","EventType","TOUCH_START","_onTouchStart","_onTouchUp","TOUCH_CANCEL","_onTouchCancelled","_onScrollBegan","_onScrollEnded","SIZE_CHANGED","_onSizeChanged","off","_inited","_scrollView","name","_layout","_align","_resizeMode","resizeMode","_startAxis","startAxis","_topGap","paddingTop","_rightGap","paddingRight","_bottomGap","paddingBottom","_leftGap","paddingLeft","_columnGap","spacingX","_lineGap","spacingY","_colLineNum","_verticalDir","verticalDirection","_horizontalDir","horizontalDirection","setTemplateItem","instantiate","ADHERING","inertia","_onMouseWheel","_lastDisplayData","displayData","NodePool","_processAutoScrolling","bind","_startBounceBackIfNeeded","Type","HORIZONTAL","HorizontalDirection","LEFT_TO_RIGHT","_alignCalcType","RIGHT_TO_LEFT","VERTICAL","VerticalDirection","TOP_TO_BOTTOM","BOTTOM_TO_TOP","GRID","AxisDirection","removeAllChildren","dt","brakingFactor","_autoScrollAccumulatedTime","percentage","Math","min","_autoScrollTotalTime","_autoScrollAttenuate","time","newPosition","_autoScrollStartPosition","add","_autoScrollTargetDelta","mul","EPSILON","getScrollEndedEventTiming","reachedEnd","abs","fireEvent","_isScrollEndedWithThresholdEventFired","_dispatchEvent","_autoScrolling","deltaMove","getContentPosition","_moveContent","_clampDelta","_isBouncing","_scrolling","ResizeMode","CHILDREN","_itemSize","cellSize","width","height","com","remove","Widget","_needUpdateWidget","_sizeType","trimW","floor","trimH","printLog","result","_customSize","fixed","_getFixedSize","count","lineNum","ceil","colNum","_allItemSize","_allItemSizeNoEdge","totalSize","_cyclicPos1","spacing","_cyclicPos2","_cyclicAllItemSize","_cycilcAllItemSizeNoEdge","_lack","slideOffset","targetWH","ev","frameCount","_aniDelRuning","scrollPos","getPosition","y","x","addVal","v2","isAutoScrolling","_calcViewPos","vTop","vRight","vBottom","vLeft","viewTop","viewBottom","viewRight","viewLeft","itemPos","curId","endId","breakFor","_calcItemPos","right","left","length","bottom","top","ww","hh","id","haveDataChange","sort","a","b","_doneAfterUpdate","c","_createOrUpdateItem","_calcNearestItem","elasticLeft","elasticRight","elasticTop","elasticBottom","getItemHeight","itemX","itemY","cs","offset","anchorX","anchorY","colLine","_calcExistItemPos","data","getItemPos","listId","parseInt","_beganPos","scrollToListId","runAction","sequence","scaleTo","adhering","adhere","_pageAdhere","captureListeners","_hasNestedViewGroup","isMe","eventPhase","Event","AT_TARGET","target","itemNode","_listId","parent","_scrollItem","_scrollPos","_adheringBarrier","simulate","_onItemAdaptive","updateAll","_scrollToListId","unschedule","_scrollToSo","scrollTo","max","_scrollToEndTime","Date","getTime","curPos","dis","canSkip","timeInSecond","prePage","nextPage","update","canGet","setContentSize","setPosition","_resetItemSize","addChild","widget","updateAlignment","setSiblingIndex","childrenCount","_list","_updateListItem","children","ListItem","_updateItemPos","listIdOrItem","isNaN","pos","setMultSelected","args","Array","isArray","updateItem","_getOutsideItem","find","d","arr","put","m","_delSingleItem","removeFromParent","aniDelItem","callFunc","aniType","warn","curLastId","resetSelectedId","showAni","newId","newData","newCustomSize","sec","acts","haveCB","posData","moveTo","CallFunc","Sequence","overStress","updateLayout","targetX","targetY","viewPos","comparePos","runScroll","scrollToOffset","scheduleOnce","center","skipPage","pageNum","calcCustomSize","temp","Object","keys"],"mappings":";;;;;;AAAA;;;;;;AAMA,IAAMA,YAAY,GAAGC,EAAE,CAACC,IAAH,CAAQ;AACzB,UAAQ,CADiB;AAEzB,YAAU;AAFe,CAAR,CAArB;AAIA,IAAMC,SAAS,GAAGF,EAAE,CAACC,IAAH,CAAQ;AACtB,YAAU,CADY;AACN;AAChB,cAAY,CAFU;AAEN;AAChB,UAAQ,CAHc,CAGN;;AAHM,CAAR,CAAlB;AAKA,IAAME,YAAY,GAAGH,EAAE,CAACC,IAAH,CAAQ;AACzB,UAAU,CADe;AAEzB,YAAU,CAFe;AAEZ;AACb,UAAU,CAHe,CAGZ;;AAHY,CAAR,CAArB;AAMAD,EAAE,CAACI,KAAH,CAAS;AACL,aAASJ,EAAE,CAACK,SADP;AAGLC,EAAAA,MAAM,EAAE;AACJC,IAAAA,gBAAgB,EAAE,KADd;AAEJC,IAAAA,IAAI,EAAE,yBAFF;AAGJC,IAAAA,gBAAgB,EAAET,EAAE,CAACU,UAHjB;AAIJ;AACAC,IAAAA,cAAc,EAAE,CAAC;AALb,GAHH;AAWLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,YAAY,EAAE;AACV,iBAASd,YAAY,CAACe,IADZ;AAEVC,MAAAA,IAAI,EAAEhB;AAFI,KADN;AAKRiB,IAAAA,OAAO,EAAE;AACL,iBAAS,IADJ;AAELD,MAAAA,IAAI,EAAEf,EAAE,CAACiB,IAFJ;AAGLC,MAAAA,OAAO,EAAEC,MAAM,IAAI,8BAHd;AAILC,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIC,IAAI,GAAG,KAAKR,YAAL,IAAqBd,YAAY,CAACe,IAA7C;AACA,YAAI,CAACO,IAAL,EACI,KAAKL,OAAL,GAAe,IAAf;AACJ,eAAOK,IAAP;AACH;AATI,KALD;AAgBRC,IAAAA,SAAS,EAAE;AACP,iBAAS,IADF;AAEPP,MAAAA,IAAI,EAAEf,EAAE,CAACuB,MAFF;AAGPL,MAAAA,OAAO,EAAEC,MAAM,IAAI,gCAHZ;AAIPC,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIC,IAAI,GAAG,KAAKR,YAAL,IAAqBd,YAAY,CAACyB,MAA7C;AACA,YAAI,CAACH,IAAL,EACI,KAAKC,SAAL,GAAiB,IAAjB;AACJ,eAAOD,IAAP;AACH;AATM,KAhBH;AA2BRI,IAAAA,UAAU,EAAE,CA3BJ;AA4BRC,IAAAA,SAAS,EAAE;AACPX,MAAAA,IAAI,EAAEb,SADC;AAEPgB,MAAAA,OAAO,EAAEC,MAAM,IAAI,cAFZ;AAGPQ,MAAAA,GAAG,EAAE,eAAY;AACb,eAAO,KAAKF,UAAZ;AACH,OALM;AAMPG,MAAAA,GAAG,EAAE,aAAUC,GAAV,EAAe;AAChB,YAAIA,GAAG,IAAI,IAAX,EACI,KAAKJ,UAAL,GAAkBI,GAAlB;AACP;AATM,KA5BH;AAuCRC,IAAAA,YAAY,EAAE;AACV,iBAAS,EADC;AAEVf,MAAAA,IAAI,EAAEf,EAAE,CAAC+B,KAFC;AAGVC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAHG;AAIVd,MAAAA,OAAO,EAAEC,MAAM,IAAI,uBAJT;AAKVc,MAAAA,KAAK,EAAE,IALG;AAMVb,MAAAA,OAAO,EAAE,mBAAY;AACjB,eAAO,KAAKK,UAAL,IAAmBvB,SAAS,CAACgC,IAApC;AACH;AARS,KAvCN;AAiDRC,IAAAA,eAAe,EAAE;AACb,iBAAS,IADI;AAEbpB,MAAAA,IAAI,EAAEf,EAAE,CAACK,SAAH,CAAa+B,YAFN;AAGblB,MAAAA,OAAO,EAAEC,MAAM,IAAI,mBAHN;AAIbC,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIC,IAAI,GAAG,KAAKI,UAAL,IAAmBvB,SAAS,CAACgC,IAAxC;AACA,YAAI,CAACb,IAAL,EACI,KAAKc,eAAL,GAAuB,IAAvB;AACJ,eAAOd,IAAP;AACH;AATY,KAjDT;AA4DRgB,IAAAA,QAAQ,EAAE,IA5DF;AA6DRC,IAAAA,OAAO,EAAE;AACLpB,MAAAA,OAAO,EAAEC,MAAM,IAAI,6CADd;AAELQ,MAAAA,GAFK,iBAEC;AACF,eAAO,KAAKU,QAAZ;AACH,OAJI;AAKLT,MAAAA,GALK,eAKDC,GALC,EAKI;AACL,YAAIA,GAAG,IAAI,IAAX,EACI,KAAKQ,QAAL,GAAgBR,GAAhB;;AACJ,YAAI,CAACV,MAAD,IAAW,KAAKoB,SAAL,IAAkB,CAAjC,EAAoC;AAChC,eAAKC,YAAL;AACH;AACJ;AAXI,KA7DD;AA0ERC,IAAAA,MAAM,EAAE;AACJ,iBAAS,KADL;AAEJvB,MAAAA,OAAO,EAAEC,MAAM,IAAI,+BAFf;AAGJC,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIS,GAAG,GAAG,KAAKS,OAAL,IAAgB,KAAKZ,SAAL,IAAkBxB,SAAS,CAACwC,MAAtD;AACA,YAAI,CAACb,GAAL,EACI,KAAKY,MAAL,GAAc,KAAd;AACJ,eAAOZ,GAAP;AACH;AARG,KA1EA;AAoFRc,IAAAA,UAAU,EAAE;AACR,iBAAS,KADD;AAERzB,MAAAA,OAAO,EAAEC,MAAM,IAAI,uIAFX;AAGRC,MAAAA,OAAO,EAAE,mBAAY;AACjB,eAAO,KAAKkB,OAAZ;AACH;AALO,KApFJ;AA2FRM,IAAAA,SAAS,EAAE;AACP,iBAAS,KADF;AAEP1B,MAAAA,OAAO,EAAEC,MAAM,IAAI,+DAFZ;AAGPC,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIS,GAAG,GAAG,KAAKS,OAAL,IAAgB,CAAC,KAAKK,UAAhC;AACA,YAAI,CAACd,GAAL,EACI,KAAKe,SAAL,GAAiB,KAAjB;AACJ,eAAOf,GAAP;AACH;AARM,KA3FH;AAqGRgB,IAAAA,WAAW,EAAE,CArGL;AAsGRC,IAAAA,UAAU,EAAE;AACR/B,MAAAA,IAAI,EAAEf,EAAE,CAAC+C,OADD;AAERf,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFC;AAGRd,MAAAA,OAAO,EAAEC,MAAM,IAAI,0GAHX;AAIRc,MAAAA,KAAK,EAAE,IAJC;AAKRN,MAAAA,GALQ,iBAKF;AACF,eAAO,KAAKkB,WAAZ;AACH,OAPO;AAQRjB,MAAAA,GARQ,eAQJC,GARI,EAQC;AACL,YAAIA,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI,CAAvB,EAA0B;AACtB,eAAKgB,WAAL,GAAmBhB,GAAnB;AACH;AACJ;AAZO,KAtGJ;AAoHRmB,IAAAA,qBAAqB,EAAE;AACnB,iBAAS,CADU;AAEnBjC,MAAAA,IAAI,EAAEf,EAAE,CAAC+C,OAFU;AAGnBf,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,CAHY;AAInBd,MAAAA,OAAO,EAAEC,MAAM,IAAI,iHAJA;AAKnBc,MAAAA,KAAK,EAAE;AALY,KApHf;AA2HRgB,IAAAA,WAAW,EAAE;AACT,iBAAS,IADA;AAETlC,MAAAA,IAAI,EAAEf,EAAE,CAACK,SAAH,CAAa+B,YAFV;AAGTlB,MAAAA,OAAO,EAAEC,MAAM,IAAI;AAHV,KA3HL;AAgIR+B,IAAAA,YAAY,EAAE;AACV,iBAAS/C,YAAY,CAACgD,IADZ;AAEVpC,MAAAA,IAAI,EAAEZ,YAFI;AAGVe,MAAAA,OAAO,EAAEC,MAAM,IAAI;AAHT,KAhIN;AAqIRiC,IAAAA,iBAAiB,EAAE;AACf,iBAAS,KADM;AAEflC,MAAAA,OAAO,EAAEC,MAAM,IAAI,+CAFJ;AAGfC,MAAAA,OAAO,EAAE,mBAAY;AACjB,eAAO,KAAK8B,YAAL,IAAqB/C,YAAY,CAACkD,MAAzC;AACH;AALc,KArIX;AA4IRC,IAAAA,aAAa,EAAE;AACX,iBAAS,IADE;AAEXvC,MAAAA,IAAI,EAAEf,EAAE,CAACK,SAAH,CAAa+B,YAFR;AAGXlB,MAAAA,OAAO,EAAEC,MAAM,IAAI,yBAHR;AAIXC,MAAAA,OAAO,EAAE,mBAAY;AACjB,YAAIC,IAAI,GAAG,KAAK6B,YAAL,GAAoB,CAA/B;AACA,YAAI,CAAC7B,IAAL,EACI,KAAKiC,aAAL,GAAqB,IAArB;AACJ,eAAOjC,IAAP;AACH;AATU,KA5IP;AAuJRkC,IAAAA,WAAW,EAAE,CAAC,CAvJN;AAwJRC,IAAAA,UAAU,EAAE;AACRpC,MAAAA,OAAO,EAAE,KADD;AAERO,MAAAA,GAAG,EAAE,eAAY;AACb,eAAO,KAAK4B,WAAZ;AACH,OAJO;AAKR3B,MAAAA,GAAG,EAAE,aAAUC,GAAV,EAAe;AAChB,YAAI4B,CAAC,GAAG,IAAR;AACA,YAAIC,IAAJ;;AACA,gBAAQD,CAAC,CAACP,YAAV;AACI,eAAK/C,YAAY,CAACkD,MAAlB;AAA0B;AACtB,kBAAI,CAACI,CAAC,CAACL,iBAAH,IAAwBvB,GAAG,IAAI4B,CAAC,CAACF,WAArC,EACI;AACJG,cAAAA,IAAI,GAAGD,CAAC,CAACE,eAAF,CAAkB9B,GAAlB,CAAP,CAHsB,CAItB;AACA;;AACA,kBAAI4B,CAAC,CAACF,WAAF,IAAiB,CAArB,EACIE,CAAC,CAACG,eAAF,GAAoBH,CAAC,CAACF,WAAtB,CADJ,KAEK;AACDE,gBAAAA,CAAC,CAACG,eAAF,GAAoB,IAApB;AACJH,cAAAA,CAAC,CAACF,WAAF,GAAgB1B,GAAhB;AACA,kBAAI6B,IAAJ,EACIA,IAAI,CAACG,QAAL,CAAcC,QAAd,GAAyB,IAAzB;;AACJ,kBAAIL,CAAC,CAACG,eAAF,IAAqB,CAArB,IAA0BH,CAAC,CAACG,eAAF,IAAqBH,CAAC,CAACF,WAArD,EAAkE;AAC9D,oBAAIQ,QAAQ,GAAGN,CAAC,CAACE,eAAF,CAAkBF,CAAC,CAACG,eAApB,CAAf;;AACA,oBAAIG,QAAJ,EAAc;AACVA,kBAAAA,QAAQ,CAACF,QAAT,CAAkBC,QAAlB,GAA6B,KAA7B;AACH;AACJ;;AACD,kBAAIL,CAAC,CAACH,aAAN,EAAqB;AACjBtD,gBAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAACP,CAAC,CAACH,aAAH,CAArC,EAAwDI,IAAxD,EAA8D7B,GAAG,GAAG,KAAKoC,eAAzE,EAA0FR,CAAC,CAACG,eAAF,IAAqB,IAArB,GAA4B,IAA5B,GAAoCH,CAAC,CAACG,eAAF,GAAoB,KAAKK,eAAvJ;AACH;;AACD;AACH;;AACD,eAAK9D,YAAY,CAAC+D,IAAlB;AAAwB;AACpBR,cAAAA,IAAI,GAAGD,CAAC,CAACE,eAAF,CAAkB9B,GAAlB,CAAP;AACA,kBAAI,CAAC6B,IAAL,EACI;AACJ,kBAAID,CAAC,CAACF,WAAF,IAAiB,CAArB,EACIE,CAAC,CAACG,eAAF,GAAoBH,CAAC,CAACF,WAAtB;AACJE,cAAAA,CAAC,CAACF,WAAF,GAAgB1B,GAAhB;AACA,kBAAIR,IAAI,GAAG,CAACqC,IAAI,CAACG,QAAL,CAAcC,QAA1B;AACAJ,cAAAA,IAAI,CAACG,QAAL,CAAcC,QAAd,GAAyBzC,IAAzB;AACA,kBAAI8C,GAAG,GAAGV,CAAC,CAACW,YAAF,CAAeC,OAAf,CAAuBxC,GAAvB,CAAV;;AACA,kBAAIR,IAAI,IAAI8C,GAAG,GAAG,CAAlB,EAAqB;AACjBV,gBAAAA,CAAC,CAACW,YAAF,CAAeE,IAAf,CAAoBzC,GAApB;AACH,eAFD,MAEO,IAAI,CAACR,IAAD,IAAS8C,GAAG,IAAI,CAApB,EAAuB;AAC1BV,gBAAAA,CAAC,CAACW,YAAF,CAAeG,MAAf,CAAsBJ,GAAtB,EAA2B,CAA3B;AACH;;AACD,kBAAIV,CAAC,CAACH,aAAN,EAAqB;AACjBtD,gBAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAACP,CAAC,CAACH,aAAH,CAArC,EAAwDI,IAAxD,EAA8D7B,GAAG,GAAG,KAAKoC,eAAzE,EAA0FR,CAAC,CAACG,eAAF,IAAqB,IAArB,GAA4B,IAA5B,GAAoCH,CAAC,CAACG,eAAF,GAAoB,KAAKK,eAAvJ,EAAyK5C,IAAzK;AACH;;AACD;AACH;AA5CL;AA8CH;AAtDO,KAxJJ;AAgNRkB,IAAAA,SAAS,EAAE;AACP,iBAAS,CADF;AAEPiC,MAAAA,YAAY,EAAE;AAFP,KAhNH;AAoNRC,IAAAA,QAAQ,EAAE;AACNrD,MAAAA,OAAO,EAAE,KADH;AAENO,MAAAA,GAFM,iBAEA;AACF,eAAO,KAAKsC,eAAZ;AACH,OAJK;AAKNrC,MAAAA,GALM,eAKFC,GALE,EAKG;AACL,YAAI4B,CAAC,GAAG,IAAR;AACA,YAAI,CAACA,CAAC,CAACiB,WAAF,EAAL,EACI;;AACJ,YAAI7C,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAG,CAAzB,EAA4B;AACxB7B,UAAAA,EAAE,CAAC2E,KAAH,CAAS,0BAAT,EAAqC9C,GAArC;AACA;AACH;;AACD4B,QAAAA,CAAC,CAACQ,eAAF,GAAoBR,CAAC,CAAClB,SAAF,GAAcV,GAAlC;AACA4B,QAAAA,CAAC,CAACmB,YAAF,GAAiB,IAAjB;;AAEA,YAAInB,CAAC,CAACpB,QAAN,EAAgB;AACZoB,UAAAA,CAAC,CAACoB,cAAF;;AACA,cAAIpB,CAAC,CAAChB,MAAN,EAAc;AACVgB,YAAAA,CAAC,CAAClB,SAAF,GAAckB,CAAC,CAACqB,UAAF,GAAerB,CAAC,CAAClB,SAA/B;AACH;;AACDkB,UAAAA,CAAC,CAACjB,YAAF;;AACA,cAAI,CAACiB,CAAC,CAACT,qBAAH,IAA4BS,CAAC,CAAC/B,SAAF,IAAexB,SAAS,CAACgC,IAAzD,EACIuB,CAAC,CAACsB,UAAF,GAAetB,CAAC,CAACuB,aAAjB;AACP,SARD,MAQO;AACH,cAAIC,MAAM,GAAGxB,CAAC,CAACyB,OAAF,CAAUC,YAAV,CAAuBnF,EAAE,CAACoF,MAA1B,CAAb;;AACA,cAAIH,MAAJ,EAAY;AACRA,YAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACH;;AACD5B,UAAAA,CAAC,CAAC6B,iBAAF;;AAEA7B,UAAAA,CAAC,CAAC8B,WAAF,GAAgB,CAAhB;;AACA,cAAI9B,CAAC,CAACT,qBAAF,GAA0B,CAA9B,EAAiC;AAC7B;AACA,gBAAIwC,GAAG,GAAG/B,CAAC,CAACT,qBAAF,GAA0BS,CAAC,CAAClB,SAA5B,GAAwCkB,CAAC,CAAClB,SAA1C,GAAsDkB,CAAC,CAACT,qBAAlE;;AACA,iBAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC1BhC,cAAAA,CAAC,CAACiC,oBAAF,CAAuBD,CAAvB;AACH;;AACD,gBAAIhC,CAAC,CAACT,qBAAF,GAA0BS,CAAC,CAAClB,SAAhC,EAA2C;AACvCkB,cAAAA,CAAC,CAACkC,cAAF,GAAmBlC,CAAC,CAACT,qBAArB;AACAS,cAAAA,CAAC,CAACmC,WAAF,GAAgB,KAAhB;AACH;AACJ,WAVD,MAUO;AACH,iBAAK,IAAIH,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG5D,GAApB,EAAyB4D,EAAC,EAA1B,EAA8B;AAC1BhC,cAAAA,CAAC,CAACiC,oBAAF,CAAuBD,EAAvB;AACH;;AACDhC,YAAAA,CAAC,CAACoC,cAAF,GAAmBhE,GAAnB;AACH;AACJ;AACJ;AAjDK;AApNF,GAXP;AAoRLiE,EAAAA,MApRK,oBAoRI;AACL,SAAKC,KAAL;AACH,GAtRI;AAwRLC,EAAAA,SAxRK,uBAwRO;AACR,QAAIvC,CAAC,GAAG,IAAR;AACA,QAAIA,CAAC,CAACwC,QAAF,IAAcxC,CAAC,CAACwC,QAAF,CAAWC,OAA7B,EACIzC,CAAC,CAACwC,QAAF,CAAWE,OAAX;AACJ,QAAI1C,CAAC,CAACzC,OAAF,IAAayC,CAAC,CAACzC,OAAF,CAAUkF,OAA3B,EACIzC,CAAC,CAACzC,OAAF,CAAUmF,OAAV,GALI,CAMR;;AACA,WAAO1C,CAAC,CAAC2C,KAAF,CAAQC,IAAR,EAAP,EAAuB;AACnB,UAAIC,IAAI,GAAG7C,CAAC,CAAC2C,KAAF,CAAQzE,GAAR,EAAX;;AACA2E,MAAAA,IAAI,CAACH,OAAL;AACH,KAVO,CAWR;AACA;;AACH,GArSI;AAuSLI,EAAAA,QAvSK,sBAuSM;AACP;AACA,SAAKC,cAAL;;AACA,SAAKT,KAAL;AACH,GA3SI;AA6SLU,EAAAA,SA7SK,uBA6SO;AACR;AACA,SAAKC,gBAAL;AACH,GAhTI;AAiTL;AACAF,EAAAA,cAlTK,4BAkTY;AACb,QAAI/C,CAAC,GAAG,IAAR;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOK,EAAP,CAAU3G,EAAE,CAACiB,IAAH,CAAQ2F,SAAR,CAAkBC,WAA5B,EAAyCpD,CAAC,CAACqD,aAA3C,EAA0DrD,CAA1D,EAA6D,IAA7D;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOK,EAAP,CAAU,UAAV,EAAsBlD,CAAC,CAACsD,UAAxB,EAAoCtD,CAApC,EAAuC,IAAvC;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOK,EAAP,CAAU3G,EAAE,CAACiB,IAAH,CAAQ2F,SAAR,CAAkBI,YAA5B,EAA0CvD,CAAC,CAACwD,iBAA5C,EAA+DxD,CAA/D,EAAkE,IAAlE;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOK,EAAP,CAAU,cAAV,EAA0BlD,CAAC,CAACyD,cAA5B,EAA4CzD,CAA5C,EAA+C,IAA/C;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOK,EAAP,CAAU,cAAV,EAA0BlD,CAAC,CAAC0D,cAA5B,EAA4C1D,CAA5C,EAA+C,IAA/C;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOK,EAAP,CAAU,WAAV,EAAuBlD,CAAC,CAACjB,YAAzB,EAAuCiB,CAAvC,EAA0C,IAA1C;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOK,EAAP,CAAU3G,EAAE,CAACiB,IAAH,CAAQ2F,SAAR,CAAkBQ,YAA5B,EAA0C3D,CAAC,CAAC4D,cAA5C,EAA4D5D,CAA5D;AACH,GA3TI;AA4TL;AACAiD,EAAAA,gBA7TK,8BA6Tc;AACf,QAAIjD,CAAC,GAAG,IAAR;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOgB,GAAP,CAAWtH,EAAE,CAACiB,IAAH,CAAQ2F,SAAR,CAAkBC,WAA7B,EAA0CpD,CAAC,CAACqD,aAA5C,EAA2DrD,CAA3D,EAA8D,IAA9D;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOgB,GAAP,CAAW,UAAX,EAAuB7D,CAAC,CAACsD,UAAzB,EAAqCtD,CAArC,EAAwC,IAAxC;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOgB,GAAP,CAAWtH,EAAE,CAACiB,IAAH,CAAQ2F,SAAR,CAAkBI,YAA7B,EAA2CvD,CAAC,CAACwD,iBAA7C,EAAgExD,CAAhE,EAAmE,IAAnE;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOgB,GAAP,CAAW,cAAX,EAA2B7D,CAAC,CAACyD,cAA7B,EAA6CzD,CAA7C,EAAgD,IAAhD;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOgB,GAAP,CAAW,cAAX,EAA2B7D,CAAC,CAAC0D,cAA7B,EAA6C1D,CAA7C,EAAgD,IAAhD;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOgB,GAAP,CAAW,WAAX,EAAwB7D,CAAC,CAACjB,YAA1B,EAAwCiB,CAAxC,EAA2C,IAA3C;AACAA,IAAAA,CAAC,CAAC6C,IAAF,CAAOgB,GAAP,CAAWtH,EAAE,CAACiB,IAAH,CAAQ2F,SAAR,CAAkBQ,YAA7B,EAA2C3D,CAAC,CAAC4D,cAA7C,EAA6D5D,CAA7D;AACH,GAtUI;AAuUL;AACAsC,EAAAA,KAxUK,mBAwUG;AACJ,QAAItC,CAAC,GAAG,IAAR;AACA,QAAIA,CAAC,CAAC8D,OAAN,EACI;AAEJ9D,IAAAA,CAAC,CAAC+D,WAAF,GAAgB/D,CAAC,CAAC6C,IAAF,CAAOnB,YAAP,CAAoBnF,EAAE,CAACU,UAAvB,CAAhB;AAEA+C,IAAAA,CAAC,CAACyB,OAAF,GAAYzB,CAAC,CAAC+D,WAAF,CAActC,OAA1B;;AACA,QAAI,CAACzB,CAAC,CAACyB,OAAP,EAAgB;AACZlF,MAAAA,EAAE,CAAC2E,KAAH,CAASlB,CAAC,CAAC6C,IAAF,CAAOmB,IAAP,GAAc,iCAAvB;AACA;AACH;;AAEDhE,IAAAA,CAAC,CAACiE,OAAF,GAAkBjE,CAAC,CAACyB,OAAF,CAAUC,YAAV,CAAuBnF,EAAE,CAACoF,MAA1B,CAAlB;AAEA3B,IAAAA,CAAC,CAACkE,MAAF,GAAkBlE,CAAC,CAACiE,OAAF,CAAU3G,IAA5B,CAfI,CAe8B;;AAClC0C,IAAAA,CAAC,CAACmE,WAAF,GAAkBnE,CAAC,CAACiE,OAAF,CAAUG,UAA5B,CAhBI,CAgBoC;;AACxCpE,IAAAA,CAAC,CAACqE,UAAF,GAAkBrE,CAAC,CAACiE,OAAF,CAAUK,SAA5B;AAEAtE,IAAAA,CAAC,CAACuE,OAAF,GAAkBvE,CAAC,CAACiE,OAAF,CAAUO,UAA5B,CAnBI,CAmB0C;;AAC9CxE,IAAAA,CAAC,CAACyE,SAAF,GAAkBzE,CAAC,CAACiE,OAAF,CAAUS,YAA5B,CApBI,CAoBwC;;AAC5C1E,IAAAA,CAAC,CAAC2E,UAAF,GAAkB3E,CAAC,CAACiE,OAAF,CAAUW,aAA5B,CArBI,CAqBuC;;AAC3C5E,IAAAA,CAAC,CAAC6E,QAAF,GAAkB7E,CAAC,CAACiE,OAAF,CAAUa,WAA5B,CAtBI,CAsByC;;AAE7C9E,IAAAA,CAAC,CAAC+E,UAAF,GAAkB/E,CAAC,CAACiE,OAAF,CAAUe,QAA5B,CAxBI,CAwBuC;;AAC3ChF,IAAAA,CAAC,CAACiF,QAAF,GAAkBjF,CAAC,CAACiE,OAAF,CAAUiB,QAA5B,CAzBI,CAyByC;;AAE7ClF,IAAAA,CAAC,CAACmF,WAAF,CA3BI,CA2BW;;AAEfnF,IAAAA,CAAC,CAACoF,YAAF,GAAmBpF,CAAC,CAACiE,OAAF,CAAUoB,iBAA7B,CA7BI,CA6B4C;;AAChDrF,IAAAA,CAAC,CAACsF,cAAF,GAAmBtF,CAAC,CAACiE,OAAF,CAAUsB,mBAA7B,CA9BI,CA8B8C;;AAElDvF,IAAAA,CAAC,CAACwF,eAAF,CAAkBjJ,EAAE,CAACkJ,WAAH,CAAezF,CAAC,CAAC5C,YAAF,IAAkBd,YAAY,CAACyB,MAA/B,GAAwCiC,CAAC,CAACnC,SAA1C,GAAsDmC,CAAC,CAACzC,OAAvE,CAAlB,EAhCI,CAkCJ;;AACA,QAAIyC,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACiJ,QAA1B,IAAsC1F,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACgC,IAApE,EAA0E;AACtEuB,MAAAA,CAAC,CAAC+D,WAAF,CAAc4B,OAAd,GAAwB,KAAxB;;AACA3F,MAAAA,CAAC,CAAC+D,WAAF,CAAc6B,aAAd,GAA8B,YAAY;AACtC;AACH,OAFD;AAGH;;AACD,QAAI,CAAC5F,CAAC,CAACnB,OAAP,EAAwB;AACpBmB,MAAAA,CAAC,CAACd,UAAF,GAAkB,KAAlB;AAEJc,IAAAA,CAAC,CAAC6F,gBAAF,GAAsB,EAAtB,CA5CI,CA4CqB;;AACzB7F,IAAAA,CAAC,CAAC8F,WAAF,GAAsB,EAAtB,CA7CI,CA6C0B;;AAC9B9F,IAAAA,CAAC,CAAC2C,KAAF,GAAsB,IAAIpG,EAAE,CAACwJ,QAAP,EAAtB,CA9CI,CA8CwC;;AAC5C/F,IAAAA,CAAC,CAACmB,YAAF,GAAsB,KAAtB,CA/CI,CA+CyB;;AAC7BnB,IAAAA,CAAC,CAACkC,cAAF,GAAsB,CAAtB,CAhDI,CAgDuB;;AAC3BlC,IAAAA,CAAC,CAACmC,WAAF,GAAsB,IAAtB,CAjDI,CAiD0B;;AAC9BnC,IAAAA,CAAC,CAACsB,UAAF,GAAsB,CAAtB,CAlDI,CAkDuB;;AAE3B,QAAItB,CAAC,CAAChB,MAAN,EAAc;AAAE;AACZgB,MAAAA,CAAC,CAAC+D,WAAF,CAAciC,qBAAd,GAAsC,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgCjG,CAAhC,CAAtC;;AACAA,MAAAA,CAAC,CAAC+D,WAAF,CAAcmC,wBAAd,GAAyC,YAAY;AACjD,eAAO,KAAP;AACH,OAFD;AAGH;;AAED,YAAQlG,CAAC,CAACkE,MAAV;AACI,WAAK3H,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeC,UAApB;AAAgC;AAC5B,kBAAQpG,CAAC,CAACsF,cAAV;AACI,iBAAK/I,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BC,aAAnC;AACItG,cAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;;AACJ,iBAAKhK,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BG,aAAnC;AACIxG,cAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;AANR;;AAQA;AACH;;AACD,WAAKhK,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeM,QAApB;AAA8B;AAC1B,kBAAQzG,CAAC,CAACoF,YAAV;AACI,iBAAK7I,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BC,aAAjC;AACI3G,cAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;;AACJ,iBAAKhK,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BE,aAAjC;AACI5G,cAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;AANR;;AAQA;AACH;;AACD,WAAKhK,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeU,IAApB;AAA0B;AACtB,kBAAQ7G,CAAC,CAACqE,UAAV;AACI,iBAAK9H,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBV,UAA7B;AACI,sBAAQpG,CAAC,CAACoF,YAAV;AACI,qBAAK7I,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BC,aAAjC;AACI3G,kBAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;;AACJ,qBAAKhK,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BE,aAAjC;AACI5G,kBAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;AANR;;AAQA;;AACJ,iBAAKhK,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBL,QAA7B;AACI,sBAAQzG,CAAC,CAACsF,cAAV;AACI,qBAAK/I,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BC,aAAnC;AACItG,kBAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;;AACJ,qBAAKhK,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BG,aAAnC;AACIxG,kBAAAA,CAAC,CAACuG,cAAF,GAAmB,CAAnB;AACA;AANR;;AAQA;AApBR;;AAsBA;AACH;AA/CL,KA3DI,CA4GJ;AACA;AACA;AACA;AACA;AACA;;;AACAvG,IAAAA,CAAC,CAACyB,OAAF,CAAUsF,iBAAV;AACA/G,IAAAA,CAAC,CAAC8D,OAAF,GAAY,IAAZ;AACH,GA5bI;;AA6bL;;;;AAIAkC,EAAAA,qBAjcK,iCAiciBgB,EAjcjB,EAicqB;AACtB;AACA,QAAIC,aAAa,GAAG,CAApB;AACA,SAAKlD,WAAL,CAAiBmD,0BAAjB,IAA+CF,EAAE,IAAI,IAAIC,aAAR,CAAjD;AAEA,QAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKtD,WAAL,CAAiBmD,0BAAjB,GAA8C,KAAKnD,WAAL,CAAiBuD,oBAA3E,CAAjB;;AACA,QAAI,KAAKvD,WAAL,CAAiBwD,oBAArB,EAA2C;AACvC,UAAIC,IAAI,GAAGL,UAAU,GAAG,CAAxB;AACAA,MAAAA,UAAU,GAAGK,IAAI,GAAGA,IAAP,GAAcA,IAAd,GAAqBA,IAArB,GAA4BA,IAA5B,GAAmC,CAAhD;AACH;;AAED,QAAIC,WAAW,GAAG,KAAK1D,WAAL,CAAiB2D,wBAAjB,CAA0CC,GAA1C,CAA8C,KAAK5D,WAAL,CAAiB6D,sBAAjB,CAAwCC,GAAxC,CAA4CV,UAA5C,CAA9C,CAAlB;;AACA,QAAIW,OAAO,GAAG,KAAK/D,WAAL,CAAiBgE,yBAAjB,EAAd;;AACA,QAAIC,UAAU,GAAGZ,IAAI,CAACa,GAAL,CAASd,UAAU,GAAG,CAAtB,KAA4BW,OAA7C,CAbsB,CActB;;AAEA,QAAII,SAAS,GAAGd,IAAI,CAACa,GAAL,CAASd,UAAU,GAAG,CAAtB,KAA4B,KAAKpD,WAAL,CAAiBgE,yBAAjB,EAA5C;;AACA,QAAIG,SAAS,IAAI,CAAC,KAAKnE,WAAL,CAAiBoE,qCAAnC,EAA0E;AACtE,WAAKpE,WAAL,CAAiBqE,cAAjB,CAAgC,6BAAhC;;AACA,WAAKrE,WAAL,CAAiBoE,qCAAjB,GAAyD,IAAzD;AACH,KApBqB,CAsBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAIH,UAAJ,EAAgB;AACZ,WAAKjE,WAAL,CAAiBsE,cAAjB,GAAkC,KAAlC;AACH;;AAED,QAAIC,SAAS,GAAGb,WAAW,CAAC/G,GAAZ,CAAgB,KAAKqD,WAAL,CAAiBwE,kBAAjB,EAAhB,CAAhB,CAzCsB,CA0CtB;;AACA,SAAKxE,WAAL,CAAiByE,YAAjB,CAA8B,KAAKzE,WAAL,CAAiB0E,WAAjB,CAA6BH,SAA7B,CAA9B,EAAuEN,UAAvE;;AACA,SAAKjE,WAAL,CAAiBqE,cAAjB,CAAgC,WAAhC,EA5CsB,CA8CtB;;;AACA,QAAI,CAAC,KAAKrE,WAAL,CAAiBsE,cAAtB,EAAsC;AAClC,WAAKtE,WAAL,CAAiB2E,WAAjB,GAA+B,KAA/B;AACA,WAAK3E,WAAL,CAAiB4E,UAAjB,GAA8B,KAA9B;;AACA,WAAK5E,WAAL,CAAiBqE,cAAjB,CAAgC,cAAhC;AACH;AACJ,GArfI;AAsfL;AACA5C,EAAAA,eAvfK,2BAufWvF,IAvfX,EAufiB;AAClB,QAAI,CAACA,IAAL,EACI;AACJ,QAAID,CAAC,GAAG,IAAR;AACAA,IAAAA,CAAC,CAACwC,QAAF,GAAavC,IAAb;AAEA,QAAID,CAAC,CAACmE,WAAF,IAAiB5H,EAAE,CAACoF,MAAH,CAAUiH,UAAV,CAAqBC,QAA1C,EACI7I,CAAC,CAAC8I,SAAF,GAAc9I,CAAC,CAACiE,OAAF,CAAU8E,QAAxB,CADJ,KAGI/I,CAAC,CAAC8I,SAAF,GAAc,IAAIvM,EAAE,CAACqG,IAAP,CAAY3C,IAAI,CAAC+I,KAAjB,EAAwB/I,IAAI,CAACgJ,MAA7B,CAAd,CATc,CAWlB;;AACA,QAAIC,GAAG,GAAGjJ,IAAI,CAACyB,YAAL,CAAkBzB,IAAI,CAAC+D,IAAvB,CAAV;AACA,QAAImF,MAAM,GAAG,KAAb;AACA,QAAI,CAACD,GAAL,EACIC,MAAM,GAAG,IAAT,CAfc,CAgBlB;AACA;AACA;AACA;AACA;;AACA,QAAIA,MAAJ,EAAY;AACRnJ,MAAAA,CAAC,CAACP,YAAF,GAAiB/C,YAAY,CAACgD,IAA9B;AACH;;AACDwJ,IAAAA,GAAG,GAAGjJ,IAAI,CAACyB,YAAL,CAAkBnF,EAAE,CAAC6M,MAArB,CAAN;;AACA,QAAIF,GAAG,IAAIA,GAAG,CAACtH,OAAf,EAAwB;AACpB5B,MAAAA,CAAC,CAACqJ,iBAAF,GAAsB,IAAtB;AACH;;AACD,QAAIrJ,CAAC,CAACP,YAAF,IAAkB/C,YAAY,CAAC+D,IAAnC,EACIT,CAAC,CAACW,YAAF,GAAiB,EAAjB;;AAEJ,YAAQX,CAAC,CAACkE,MAAV;AACI,WAAK3H,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeC,UAApB;AACIpG,QAAAA,CAAC,CAACmF,WAAF,GAAgB,CAAhB;AACAnF,QAAAA,CAAC,CAACsJ,SAAF,GAAc,KAAd;AACA;;AACJ,WAAK/M,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeM,QAApB;AACIzG,QAAAA,CAAC,CAACmF,WAAF,GAAgB,CAAhB;AACAnF,QAAAA,CAAC,CAACsJ,SAAF,GAAc,IAAd;AACA;;AACJ,WAAK/M,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeU,IAApB;AACI,gBAAQ7G,CAAC,CAACqE,UAAV;AACI,eAAK9H,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBV,UAA7B;AACI;AACA,gBAAImD,KAAK,GAAGvJ,CAAC,CAACyB,OAAF,CAAUuH,KAAV,GAAkBhJ,CAAC,CAAC6E,QAApB,GAA+B7E,CAAC,CAACyE,SAA7C;AACAzE,YAAAA,CAAC,CAACmF,WAAF,GAAgBiC,IAAI,CAACoC,KAAL,CAAW,CAACD,KAAK,GAAGvJ,CAAC,CAAC+E,UAAX,KAA0B/E,CAAC,CAAC8I,SAAF,CAAYE,KAAZ,GAAoBhJ,CAAC,CAAC+E,UAAhD,CAAX,CAAhB;AACA/E,YAAAA,CAAC,CAACsJ,SAAF,GAAc,IAAd;AACA;;AACJ,eAAK/M,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBL,QAA7B;AACI;AACA,gBAAIgD,KAAK,GAAGzJ,CAAC,CAACyB,OAAF,CAAUwH,MAAV,GAAmBjJ,CAAC,CAACuE,OAArB,GAA+BvE,CAAC,CAAC2E,UAA7C;AACA3E,YAAAA,CAAC,CAACmF,WAAF,GAAgBiC,IAAI,CAACoC,KAAL,CAAW,CAACC,KAAK,GAAGzJ,CAAC,CAACiF,QAAX,KAAwBjF,CAAC,CAAC8I,SAAF,CAAYG,MAAZ,GAAqBjJ,CAAC,CAACiF,QAA/C,CAAX,CAAhB;AACAjF,YAAAA,CAAC,CAACsJ,SAAF,GAAc,KAAd;AACA;AAZR;;AAcA;AAxBR;AA0BH,GAhjBI;;AAijBL;;;;;AAKArI,EAAAA,WAtjBK,uBAsjBOyI,QAtjBP,EAsjBiB;AAClBA,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,IAAZ,GAAmB,IAAnB,GAA0BA,QAArC;;AACA,QAAI,CAAC,KAAK5F,OAAV,EAAmB;AACf,UAAI4F,QAAJ,EAAc;AACVnN,QAAAA,EAAE,CAAC2E,KAAH,CAAS,oCAAT;AACH;;AACD,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GA/jBI;AAgkBL;AACAE,EAAAA,cAjkBK,4BAikBY;AACb,QAAIpB,CAAC,GAAG,IAAR;AACA,QAAI2J,MAAJ;;AACA,YAAQ3J,CAAC,CAACkE,MAAV;AACI,WAAK3H,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeC,UAApB;AAAgC;AAC5B,cAAIpG,CAAC,CAAC4J,WAAN,EAAmB;AACf,gBAAIC,KAAK,GAAG7J,CAAC,CAAC8J,aAAF,EAAZ;;AACAH,YAAAA,MAAM,GAAG3J,CAAC,CAAC6E,QAAF,GAAagF,KAAK,CAACzL,GAAnB,GAA0B4B,CAAC,CAAC8I,SAAF,CAAYE,KAAZ,IAAqBhJ,CAAC,CAAClB,SAAF,GAAc+K,KAAK,CAACE,KAAzC,CAA1B,GAA8E/J,CAAC,CAAC+E,UAAF,IAAgB/E,CAAC,CAAClB,SAAF,GAAc,CAA9B,CAA9E,GAAkHkB,CAAC,CAACyE,SAA7H;AACH,WAHD,MAGO;AACHkF,YAAAA,MAAM,GAAG3J,CAAC,CAAC6E,QAAF,GAAc7E,CAAC,CAAC8I,SAAF,CAAYE,KAAZ,GAAoBhJ,CAAC,CAAClB,SAApC,GAAkDkB,CAAC,CAAC+E,UAAF,IAAgB/E,CAAC,CAAClB,SAAF,GAAc,CAA9B,CAAlD,GAAsFkB,CAAC,CAACyE,SAAjG;AACH;;AACD;AACH;;AACD,WAAKlI,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeM,QAApB;AAA8B;AAC1B,cAAIzG,CAAC,CAAC4J,WAAN,EAAmB;AACf,gBAAIC,MAAK,GAAG7J,CAAC,CAAC8J,aAAF,EAAZ;;AACAH,YAAAA,MAAM,GAAG3J,CAAC,CAACuE,OAAF,GAAYsF,MAAK,CAACzL,GAAlB,GAAyB4B,CAAC,CAAC8I,SAAF,CAAYG,MAAZ,IAAsBjJ,CAAC,CAAClB,SAAF,GAAc+K,MAAK,CAACE,KAA1C,CAAzB,GAA8E/J,CAAC,CAACiF,QAAF,IAAcjF,CAAC,CAAClB,SAAF,GAAc,CAA5B,CAA9E,GAAgHkB,CAAC,CAAC2E,UAA3H;AACH,WAHD,MAGO;AACHgF,YAAAA,MAAM,GAAG3J,CAAC,CAACuE,OAAF,GAAavE,CAAC,CAAC8I,SAAF,CAAYG,MAAZ,GAAqBjJ,CAAC,CAAClB,SAApC,GAAkDkB,CAAC,CAACiF,QAAF,IAAcjF,CAAC,CAAClB,SAAF,GAAc,CAA5B,CAAlD,GAAoFkB,CAAC,CAAC2E,UAA/F;AACH;;AACD;AACH;;AACD,WAAKpI,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeU,IAApB;AAA0B;AACtB;AACA,cAAI7G,CAAC,CAACd,UAAN,EACIc,CAAC,CAACd,UAAF,GAAe,KAAf;;AACJ,kBAAQc,CAAC,CAACqE,UAAV;AACI,iBAAK9H,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBV,UAA7B;AACI,kBAAI4D,OAAO,GAAG5C,IAAI,CAAC6C,IAAL,CAAUjK,CAAC,CAAClB,SAAF,GAAckB,CAAC,CAACmF,WAA1B,CAAd;AACAwE,cAAAA,MAAM,GAAG3J,CAAC,CAACuE,OAAF,GAAavE,CAAC,CAAC8I,SAAF,CAAYG,MAAZ,GAAqBe,OAAlC,GAA8ChK,CAAC,CAACiF,QAAF,IAAc+E,OAAO,GAAG,CAAxB,CAA9C,GAA4EhK,CAAC,CAAC2E,UAAvF;AACA;;AACJ,iBAAKpI,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBL,QAA7B;AACI,kBAAIyD,MAAM,GAAG9C,IAAI,CAAC6C,IAAL,CAAUjK,CAAC,CAAClB,SAAF,GAAckB,CAAC,CAACmF,WAA1B,CAAb;AACAwE,cAAAA,MAAM,GAAG3J,CAAC,CAAC6E,QAAF,GAAc7E,CAAC,CAAC8I,SAAF,CAAYE,KAAZ,GAAoBkB,MAAlC,GAA6ClK,CAAC,CAAC+E,UAAF,IAAgBmF,MAAM,GAAG,CAAzB,CAA7C,GAA4ElK,CAAC,CAACyE,SAAvF;AACA;AARR;;AAUA;AACH;AAlCL;;AAqCA,QAAIjD,MAAM,GAAGxB,CAAC,CAACyB,OAAF,CAAUC,YAAV,CAAuBnF,EAAE,CAACoF,MAA1B,CAAb;AACA,QAAIH,MAAJ,EACIA,MAAM,CAACI,OAAP,GAAiB,KAAjB;AAEJ5B,IAAAA,CAAC,CAACmK,YAAF,GAAiBR,MAAjB;AACA3J,IAAAA,CAAC,CAACoK,kBAAF,GAAuBpK,CAAC,CAACmK,YAAF,IAAkBnK,CAAC,CAACsJ,SAAF,GAAetJ,CAAC,CAACuE,OAAF,GAAYvE,CAAC,CAAC2E,UAA7B,GAA4C3E,CAAC,CAAC6E,QAAF,GAAa7E,CAAC,CAACyE,SAA7E,CAAvB;;AAEA,QAAIzE,CAAC,CAAChB,MAAN,EAAc;AACV,UAAIqL,SAAS,GAAIrK,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAAC6C,IAAF,CAAOoG,MAArB,GAA8BjJ,CAAC,CAAC6C,IAAF,CAAOmG,KAAtD;AAEAhJ,MAAAA,CAAC,CAACsK,WAAF,GAAgB,CAAhB;AACAD,MAAAA,SAAS,IAAIrK,CAAC,CAACsK,WAAf;AACAtK,MAAAA,CAAC,CAACqB,UAAF,GAAe+F,IAAI,CAAC6C,IAAL,CAAUI,SAAS,GAAGrK,CAAC,CAACoK,kBAAxB,IAA8C,CAA7D;AACA,UAAIG,OAAO,GAAGvK,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAACiF,QAAhB,GAA2BjF,CAAC,CAAC+E,UAA3C;AACA/E,MAAAA,CAAC,CAACwK,WAAF,GAAgBxK,CAAC,CAACsK,WAAF,GAAgBtK,CAAC,CAACoK,kBAAlB,GAAuCG,OAAvD;AACAvK,MAAAA,CAAC,CAACyK,kBAAF,GAAuBzK,CAAC,CAACmK,YAAF,GAAkBnK,CAAC,CAACoK,kBAAF,IAAwBpK,CAAC,CAACqB,UAAF,GAAe,CAAvC,CAAlB,GAAgEkJ,OAAO,IAAIvK,CAAC,CAACqB,UAAF,GAAe,CAAnB,CAA9F;AACArB,MAAAA,CAAC,CAAC0K,wBAAF,GAA6B1K,CAAC,CAACoK,kBAAF,GAAuBpK,CAAC,CAACqB,UAAtD;AACArB,MAAAA,CAAC,CAAC0K,wBAAF,IAA8BH,OAAO,IAAIvK,CAAC,CAACqB,UAAF,GAAe,CAAnB,CAArC,CAVU,CAWV;AACH;;AAEDrB,IAAAA,CAAC,CAAC2K,KAAF,GAAU,CAAC3K,CAAC,CAAChB,MAAH,IAAagB,CAAC,CAACmK,YAAF,IAAkBnK,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAAC6C,IAAF,CAAOoG,MAArB,GAA8BjJ,CAAC,CAAC6C,IAAF,CAAOmG,KAAvD,CAAvB;AACA,QAAI4B,WAAW,GAAI,CAAC,CAAC5K,CAAC,CAAC2K,KAAH,IAAY,CAAC3K,CAAC,CAACd,UAAhB,KAA+Bc,CAAC,CAACb,SAAlC,GAA+C,CAA/C,GAAmD,EAArE;AAEA,QAAI0L,QAAQ,GAAG7K,CAAC,CAAC2K,KAAF,GAAW,CAAC3K,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAAC6C,IAAF,CAAOoG,MAArB,GAA8BjJ,CAAC,CAAC6C,IAAF,CAAOmG,KAAtC,IAA+C4B,WAA1D,GAA0E5K,CAAC,CAAChB,MAAF,GAAWgB,CAAC,CAACyK,kBAAb,GAAkCzK,CAAC,CAACmK,YAA7H;AACA,QAAIU,QAAQ,GAAG,CAAf,EACIA,QAAQ,GAAG,CAAX;;AAEJ,QAAI7K,CAAC,CAACsJ,SAAN,EAAiB;AACbtJ,MAAAA,CAAC,CAACyB,OAAF,CAAUwH,MAAV,GAAmB4B,QAAnB;AACH,KAFD,MAEO;AACH7K,MAAAA,CAAC,CAACyB,OAAF,CAAUuH,KAAV,GAAkB6B,QAAlB;AACH,KAxEY,CAyEb;;AACH,GA3oBI;AA4oBL;AACA9L,EAAAA,YA7oBK,wBA6oBQ+L,EA7oBR,EA6oBY;AACb,QAAI,KAAKC,UAAL,IAAmB,IAAvB,EACI,KAAKA,UAAL,GAAkB,KAAK3L,WAAvB;;AACJ,QAAI,CAAC,KAAK+B,YAAN,IAAuB2J,EAAE,IAAIA,EAAE,CAACxN,IAAH,IAAW,cAAxC,IAA2D,KAAKyN,UAAL,GAAkB,CAAjF,EAAoF;AAChF,WAAKA,UAAL;AACA;AACH,KAHD,MAII,KAAKA,UAAL,GAAkB,KAAK3L,WAAvB;;AAEJ,QAAI,KAAK4L,aAAT,EACI,OAVS,CAYb;;AACA,QAAI,KAAKhM,MAAT,EAAiB;AACb,UAAIiM,SAAS,GAAG,KAAKxJ,OAAL,CAAayJ,WAAb,EAAhB;AACAD,MAAAA,SAAS,GAAG,KAAK3B,SAAL,GAAiB2B,SAAS,CAACE,CAA3B,GAA+BF,SAAS,CAACG,CAArD;AAEA,UAAIC,MAAM,GAAG,KAAKjB,kBAAL,IAA2B,KAAKd,SAAL,GAAiB,KAAKrE,QAAtB,GAAiC,KAAKF,UAAjE,CAAb;AACA,UAAI4C,GAAG,GAAG,KAAK2B,SAAL,GAAiB/M,EAAE,CAAC+O,EAAH,CAAM,CAAN,EAASD,MAAT,CAAjB,GAAoC9O,EAAE,CAAC+O,EAAH,CAAMD,MAAN,EAAc,CAAd,CAA9C;;AAEA,cAAQ,KAAK9E,cAAb;AACI,aAAK,CAAL;AAAO;AACH,cAAI0E,SAAS,GAAG,CAAC,KAAKX,WAAtB,EAAmC;AAC/B,iBAAK7I,OAAL,CAAa2J,CAAb,GAAiB,CAAC,KAAKZ,WAAvB;;AACA,gBAAI,KAAKzG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0ChH,GAA1C,CAA8CiH,GAA9C,CAA5C;AACH,aAJ8B,CAK/B;AACA;AACA;;AACH,WARD,MAQO,IAAIsD,SAAS,GAAG,CAAC,KAAKT,WAAtB,EAAmC;AACtC,iBAAK/I,OAAL,CAAa2J,CAAb,GAAiB,CAAC,KAAKd,WAAvB;;AACA,gBAAI,KAAKvG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0CC,GAA1C,CAA8CA,GAA9C,CAA5C;AACH,aAJqC,CAKtC;AACA;AACA;;AACH;;AACD;;AACJ,aAAK,CAAL;AAAO;AACH,cAAIsD,SAAS,GAAG,KAAKX,WAArB,EAAkC;AAC9B,iBAAK7I,OAAL,CAAa2J,CAAb,GAAiB,KAAKZ,WAAtB;;AACA,gBAAI,KAAKzG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0CC,GAA1C,CAA8CA,GAA9C,CAA5C;AACH;AACJ,WALD,MAKO,IAAIsD,SAAS,GAAG,KAAKT,WAArB,EAAkC;AACrC,iBAAK/I,OAAL,CAAa2J,CAAb,GAAiB,KAAKd,WAAtB;;AACA,gBAAI,KAAKvG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0ChH,GAA1C,CAA8CiH,GAA9C,CAA5C;AACH;AACJ;;AACD;;AACJ,aAAK,CAAL;AAAO;AACH,cAAIsD,SAAS,GAAG,KAAKX,WAArB,EAAkC;AAC9B,iBAAK7I,OAAL,CAAa0J,CAAb,GAAiB,KAAKX,WAAtB;;AACA,gBAAI,KAAKzG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0CC,GAA1C,CAA8CA,GAA9C,CAA5C;AACH;AACJ,WALD,MAKO,IAAIsD,SAAS,GAAG,KAAKT,WAArB,EAAkC;AACrC,iBAAK/I,OAAL,CAAa0J,CAAb,GAAiB,KAAKb,WAAtB;;AACA,gBAAI,KAAKvG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0ChH,GAA1C,CAA8CiH,GAA9C,CAA5C;AACH;AACJ;;AACD;;AACJ,aAAK,CAAL;AAAO;AACH,cAAIsD,SAAS,GAAG,CAAC,KAAKX,WAAtB,EAAmC;AAC/B,iBAAK7I,OAAL,CAAa0J,CAAb,GAAiB,CAAC,KAAKX,WAAvB;;AACA,gBAAI,KAAKzG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0ChH,GAA1C,CAA8CiH,GAA9C,CAA5C;AACH;AACJ,WALD,MAKO,IAAIsD,SAAS,GAAG,CAAC,KAAKT,WAAtB,EAAmC;AACtC,iBAAK/I,OAAL,CAAa0J,CAAb,GAAiB,CAAC,KAAKb,WAAvB;;AACA,gBAAI,KAAKvG,WAAL,CAAiBwH,eAAjB,EAAJ,EAAwC;AACpC,mBAAKxH,WAAL,CAAiB2D,wBAAjB,GAA4C,KAAK3D,WAAL,CAAiB2D,wBAAjB,CAA0CC,GAA1C,CAA8CA,GAA9C,CAA5C;AACH;AACJ;;AACD;AA1DR;AA4DH;;AAED,SAAK6D,YAAL;;AAEA,QAAIC,IAAJ,EAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,KAA3B;;AACA,QAAI,KAAKtC,SAAT,EAAoB;AAChBmC,MAAAA,IAAI,GAAG,KAAKI,OAAZ;AACAF,MAAAA,OAAO,GAAG,KAAKG,UAAf;AACH,KAHD,MAGO;AACHJ,MAAAA,MAAM,GAAG,KAAKK,SAAd;AACAH,MAAAA,KAAK,GAAG,KAAKI,QAAb;AACH;;AAED,QAAI,KAAKpN,QAAT,EAAmB;AACf,WAAKkH,WAAL,GAAmB,EAAnB;AACA,UAAImG,OAAJ;AAEA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAK,GAAG,KAAKrN,SAAL,GAAiB,CAA7B;;AAEA,UAAI,KAAK8K,WAAT,EAAsB;AAClB,YAAIwC,QAAQ,GAAG,KAAf,CADkB,CAElB;;AACA,eAAOF,KAAK,IAAIC,KAAT,IAAkB,CAACC,QAA1B,EAAoCF,KAAK,EAAzC,EAA6C;AACzCD,UAAAA,OAAO,GAAG,KAAKI,YAAL,CAAkBH,KAAlB,CAAV;;AACA,kBAAQ,KAAKhI,MAAb;AACI,iBAAK3H,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeC,UAApB;AACI,kBAAI6F,OAAO,CAACK,KAAR,IAAiBV,KAAjB,IAA0BK,OAAO,CAACM,IAAR,IAAgBb,MAA9C,EAAsD;AAClD,qBAAK5F,WAAL,CAAiBjF,IAAjB,CAAsBoL,OAAtB;AACH,eAFD,MAEO,IAAIC,KAAK,IAAI,CAAT,IAAc,KAAKpG,WAAL,CAAiB0G,MAAjB,GAA0B,CAA5C,EAA+C;AAClDJ,gBAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,iBAAK7P,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeM,QAApB;AACI,kBAAIwF,OAAO,CAACQ,MAAR,IAAkBhB,IAAlB,IAA0BQ,OAAO,CAACS,GAAR,IAAef,OAA7C,EAAsD;AAClD,qBAAK7F,WAAL,CAAiBjF,IAAjB,CAAsBoL,OAAtB;AACH,eAFD,MAEO,IAAIC,KAAK,IAAI,CAAT,IAAc,KAAKpG,WAAL,CAAiB0G,MAAjB,GAA0B,CAA5C,EAA+C;AAClDJ,gBAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,iBAAK7P,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeU,IAApB;AACI,sBAAQ,KAAKxC,UAAb;AACI,qBAAK9H,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBV,UAA7B;AACI,sBAAI6F,OAAO,CAACQ,MAAR,IAAkBhB,IAAlB,IAA0BQ,OAAO,CAACS,GAAR,IAAef,OAA7C,EAAsD;AAClD,yBAAK7F,WAAL,CAAiBjF,IAAjB,CAAsBoL,OAAtB;AACH,mBAFD,MAEO,IAAIC,KAAK,IAAI,CAAT,IAAc,KAAKpG,WAAL,CAAiB0G,MAAjB,GAA0B,CAA5C,EAA+C;AAClDJ,oBAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,qBAAK7P,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBL,QAA7B;AACI,sBAAIwF,OAAO,CAACK,KAAR,IAAiBV,KAAjB,IAA0BK,OAAO,CAACM,IAAR,IAAgBb,MAA9C,EAAsD;AAClD,yBAAK5F,WAAL,CAAiBjF,IAAjB,CAAsBoL,OAAtB;AACH,mBAFD,MAEO,IAAIC,KAAK,IAAI,CAAT,IAAc,KAAKpG,WAAL,CAAiB0G,MAAjB,GAA0B,CAA5C,EAA+C;AAClDJ,oBAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;AAdR;;AAgBA;AAhCR;AAkCH;AACJ,OAxCD,MAwCO;AACH,YAAIO,EAAE,GAAG,KAAK7D,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAArC;AACA,YAAI6H,EAAE,GAAG,KAAK9D,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAAtC;;AACA,gBAAQ,KAAKsB,cAAb;AACI,eAAK,CAAL;AAAO;AACH2F,YAAAA,KAAK,GAAG,CAACN,KAAK,GAAG,KAAK/G,QAAd,IAA0B8H,EAAlC;AACAR,YAAAA,KAAK,GAAG,CAACT,MAAM,GAAG,KAAKjH,SAAf,IAA4BkI,EAApC;AACA;;AACJ,eAAK,CAAL;AAAO;AACHT,YAAAA,KAAK,GAAG,CAAC,CAACR,MAAD,GAAU,KAAKjH,SAAhB,IAA6BkI,EAArC;AACAR,YAAAA,KAAK,GAAG,CAAC,CAACP,KAAD,GAAS,KAAK/G,QAAf,IAA2B8H,EAAnC;AACA;;AACJ,eAAK,CAAL;AAAO;AACHT,YAAAA,KAAK,GAAG,CAAC,CAACT,IAAD,GAAQ,KAAKlH,OAAd,IAAyBqI,EAAjC;AACAT,YAAAA,KAAK,GAAG,CAAC,CAACR,OAAD,GAAW,KAAKhH,UAAjB,IAA+BiI,EAAvC;AACA;;AACJ,eAAK,CAAL;AAAO;AACHV,YAAAA,KAAK,GAAG,CAACP,OAAO,GAAG,KAAKhH,UAAhB,IAA8BiI,EAAtC;AACAT,YAAAA,KAAK,GAAG,CAACV,IAAI,GAAG,KAAKlH,OAAb,IAAwBqI,EAAhC;AACA;AAhBR;;AAkBAV,QAAAA,KAAK,GAAG9E,IAAI,CAACoC,KAAL,CAAW0C,KAAX,IAAoB,KAAK/G,WAAjC;AACAgH,QAAAA,KAAK,GAAG/E,IAAI,CAAC6C,IAAL,CAAUkC,KAAV,IAAmB,KAAKhH,WAAhC;AACAgH,QAAAA,KAAK;AACL,YAAID,KAAK,GAAG,CAAZ,EACIA,KAAK,GAAG,CAAR;AACJ,YAAIC,KAAK,IAAI,KAAKrN,SAAlB,EACIqN,KAAK,GAAG,KAAKrN,SAAL,GAAiB,CAAzB,CA3BD,CA4BH;;AACA,eAAOoN,KAAK,IAAIC,KAAhB,EAAuBD,KAAK,EAA5B,EAAgC;AAC5B,eAAKpG,WAAL,CAAiBjF,IAAjB,CAAsB,KAAKwL,YAAL,CAAkBH,KAAlB,CAAtB;AACH;AACJ;;AACD,WAAKrK,iBAAL;;AACA,UAAI,KAAKiE,WAAL,CAAiB0G,MAAjB,IAA2B,CAA3B,IAAgC,CAAC,KAAK1N,SAA1C,EAAqD;AAAE;AACnD,aAAK+G,gBAAL,GAAwB,EAAxB;AACA;AACH;;AACD,WAAK/D,WAAL,GAAmB,KAAKgE,WAAL,CAAiB,CAAjB,EAAoB+G,EAAvC;AACA,WAAKzK,cAAL,GAAsB,KAAK0D,WAAL,CAAiB0G,MAAvC;AAEA,UAAIzK,GAAG,GAAG,KAAK8D,gBAAL,CAAsB2G,MAAhC;AACA,UAAIM,cAAc,GAAG,KAAK1K,cAAL,IAAuBL,GAA5C;;AACA,UAAI+K,cAAJ,EAAoB;AAChB;AACA,YAAI,KAAKvN,qBAAL,GAA6B,CAAjC,EAAoC;AAChC,eAAKsG,gBAAL,CAAsBkH,IAAtB,CAA2B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAAE,mBAAOD,CAAC,GAAGC,CAAX;AAAc,WAArD;AACH,SAJe,CAKhB;;;AACAH,QAAAA,cAAc,GAAG,KAAKhL,WAAL,IAAoB,KAAK+D,gBAAL,CAAsB,CAAtB,CAApB,IAAgD,KAAKC,WAAL,CAAiB,KAAK1D,cAAL,GAAsB,CAAvC,EAA0CyK,EAA1C,IAAgD,KAAKhH,gBAAL,CAAsB9D,GAAG,GAAG,CAA5B,CAAjH;AACH;;AAED,UAAI,KAAKZ,YAAL,IAAqB2L,cAAzB,EAAyC;AAAK;AAC1C,YAAI,KAAKvN,qBAAL,GAA6B,CAAjC,EAAoC;AAChC;AACA;AACA;AACA,cAAI,KAAKT,SAAL,GAAiB,CAArB,EAAwB;AACpB,gBAAI,CAAC,KAAKqD,WAAV,EAAuB;AACnB,mBAAK+K,gBAAL,GAAwB,IAAxB;AACH,aAFD,MAEO;AACH,mBAAKhL,cAAL,GAAsB,CAAtB;AACH;;AACD,iBAAKC,WAAL,GAAmB,KAAnB;AACH,WAPD,MAOO;AACH,iBAAKD,cAAL,GAAsB,CAAtB;AACA,iBAAKC,WAAL,GAAmB,IAAnB;AACH,WAd+B,CAehC;;AACH,SAhBD,MAgBO;AACH;AACA,eAAK0D,gBAAL,GAAwB,EAAxB,CAFG,CAGH;;AACA,eAAK,IAAIsH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK/K,cAAzB,EAAyC+K,CAAC,EAA1C,EAA8C;AAC1C,iBAAKC,mBAAL,CAAyB,KAAKtH,WAAL,CAAiBqH,CAAjB,CAAzB;AACH;;AACD,eAAKhM,YAAL,GAAoB,KAApB;AACH;AACJ;;AACD,WAAKkM,gBAAL;AACH;AACJ,GA12BI;AA22BL;AACA7B,EAAAA,YA52BK,0BA42BU;AACX,QAAIP,SAAS,GAAG,KAAKxJ,OAAL,CAAayJ,WAAb,EAAhB;;AACA,YAAQ,KAAK3E,cAAb;AACI,WAAK,CAAL;AAAO;AACH,aAAK+G,WAAL,GAAmBrC,SAAS,CAACG,CAAV,GAAc,CAAd,GAAkBH,SAAS,CAACG,CAA5B,GAAgC,CAAnD;AACA,aAAKY,QAAL,GAAgB,CAACf,SAAS,CAACG,CAAV,GAAc,CAAd,GAAkB,CAACH,SAAS,CAACG,CAA7B,GAAiC,CAAlC,IAAuC,KAAKkC,WAA5D;AACA,aAAKvB,SAAL,GAAiB,KAAKC,QAAL,GAAgB,KAAKnJ,IAAL,CAAUmG,KAA3C;AACA,aAAKuE,YAAL,GAAoB,KAAKxB,SAAL,GAAiB,KAAKtK,OAAL,CAAauH,KAA9B,GAAsC5B,IAAI,CAACa,GAAL,CAAS,KAAK8D,SAAL,GAAiB,KAAKtK,OAAL,CAAauH,KAAvC,CAAtC,GAAsF,CAA1G;AACA,aAAK+C,SAAL,IAAkB,KAAKwB,YAAvB,CALJ,CAMI;;AACA;;AACJ,WAAK,CAAL;AAAO;AACH,aAAKA,YAAL,GAAoBtC,SAAS,CAACG,CAAV,GAAc,CAAd,GAAkB,CAACH,SAAS,CAACG,CAA7B,GAAiC,CAArD;AACA,aAAKW,SAAL,GAAiB,CAACd,SAAS,CAACG,CAAV,GAAc,CAAd,GAAkB,CAACH,SAAS,CAACG,CAA7B,GAAiC,CAAlC,IAAuC,KAAKmC,YAA7D;AACA,aAAKvB,QAAL,GAAgB,KAAKD,SAAL,GAAiB,KAAKlJ,IAAL,CAAUmG,KAA3C;AACA,aAAKsE,WAAL,GAAmB,KAAKtB,QAAL,GAAgB,CAAC,KAAKvK,OAAL,CAAauH,KAA9B,GAAsC5B,IAAI,CAACa,GAAL,CAAS,KAAK+D,QAAL,GAAgB,KAAKvK,OAAL,CAAauH,KAAtC,CAAtC,GAAqF,CAAxG;AACA,aAAKgD,QAAL,IAAiB,KAAKsB,WAAtB,CALJ,CAMI;;AACA;;AACJ,WAAK,CAAL;AAAO;AACH,aAAKE,UAAL,GAAkBvC,SAAS,CAACE,CAAV,GAAc,CAAd,GAAkB/D,IAAI,CAACa,GAAL,CAASgD,SAAS,CAACE,CAAnB,CAAlB,GAA0C,CAA5D;AACA,aAAKU,OAAL,GAAe,CAACZ,SAAS,CAACE,CAAV,GAAc,CAAd,GAAkB,CAACF,SAAS,CAACE,CAA7B,GAAiC,CAAlC,IAAuC,KAAKqC,UAA3D;AACA,aAAK1B,UAAL,GAAkB,KAAKD,OAAL,GAAe,KAAKhJ,IAAL,CAAUoG,MAA3C;AACA,aAAKwE,aAAL,GAAqB,KAAK3B,UAAL,GAAkB,CAAC,KAAKrK,OAAL,CAAawH,MAAhC,GAAyC7B,IAAI,CAACa,GAAL,CAAS,KAAK6D,UAAL,GAAkB,KAAKrK,OAAL,CAAawH,MAAxC,CAAzC,GAA2F,CAAhH;AACA,aAAK6C,UAAL,IAAmB,KAAK2B,aAAxB,CALJ,CAMI;;AACA;;AACJ,WAAK,CAAL;AAAO;AACH,aAAKA,aAAL,GAAqBxC,SAAS,CAACE,CAAV,GAAc,CAAd,GAAkB/D,IAAI,CAACa,GAAL,CAASgD,SAAS,CAACE,CAAnB,CAAlB,GAA0C,CAA/D;AACA,aAAKW,UAAL,GAAkB,CAACb,SAAS,CAACE,CAAV,GAAc,CAAd,GAAkB,CAACF,SAAS,CAACE,CAA7B,GAAiC,CAAlC,IAAuC,KAAKsC,aAA9D;AACA,aAAK5B,OAAL,GAAe,KAAKC,UAAL,GAAkB,KAAKjJ,IAAL,CAAUoG,MAA3C;AACA,aAAKuE,UAAL,GAAkB,KAAK3B,OAAL,GAAe,KAAKpK,OAAL,CAAawH,MAA5B,GAAqC7B,IAAI,CAACa,GAAL,CAAS,KAAK4D,OAAL,GAAe,KAAKpK,OAAL,CAAawH,MAArC,CAArC,GAAoF,CAAtG;AACA,aAAK4C,OAAL,IAAgB,KAAK2B,UAArB,CALJ,CAMI;;AACA;AAhCR;AAkCH,GAh5BI;AAi5BLE,EAAAA,aAj5BK,yBAi5BSb,EAj5BT,EAi5Ba,CAEjB,CAn5BI;AAo5BL;AACAR,EAAAA,YAr5BK,wBAq5BQQ,EAr5BR,EAq5BY;AACb,QAAI7D,KAAJ,EAAWC,MAAX,EAAmByD,GAAnB,EAAwBD,MAAxB,EAAgCF,IAAhC,EAAsCD,KAAtC,EAA6CqB,KAA7C,EAAoDC,KAApD;;AACA,YAAQ,KAAK1J,MAAb;AACI,WAAK3H,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeC,UAApB;AACI,gBAAQ,KAAKd,cAAb;AACI,eAAK/I,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BC,aAAnC;AAAkD;AAC9C,kBAAI,KAAKsD,WAAT,EAAsB;AAClB,oBAAIC,KAAK,GAAG,KAAKC,aAAL,CAAmB+C,EAAnB,CAAZ;;AACAN,gBAAAA,IAAI,GAAG,KAAK1H,QAAL,GAAiB,CAAC,KAAKiE,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAA7B,KAA4C8H,EAAE,GAAGhD,KAAK,CAACE,KAAvD,CAAjB,IAAmFF,KAAK,CAACzL,GAAN,GAAa,KAAK2G,UAAL,GAAkB8E,KAAK,CAACE,KAAxH,CAAP;AACA,oBAAI8D,EAAE,GAAG,KAAKjE,WAAL,CAAiBiD,EAAjB,CAAT;AACA7D,gBAAAA,KAAK,GAAI6E,EAAE,GAAG,CAAL,GAASA,EAAT,GAAc,KAAK/E,SAAL,CAAeE,KAAtC;AACH,eALD,MAKO;AACHuD,gBAAAA,IAAI,GAAG,KAAK1H,QAAL,GAAiB,CAAC,KAAKiE,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAA7B,IAA2C8H,EAAnE;AACA7D,gBAAAA,KAAK,GAAG,KAAKF,SAAL,CAAeE,KAAvB;AACH;;AACDsD,cAAAA,KAAK,GAAGC,IAAI,GAAGvD,KAAf;;AACA,kBAAI,KAAK9J,UAAT,EAAqB;AACjB,oBAAI4O,MAAM,GAAI,KAAKrM,OAAL,CAAauH,KAAb,GAAqB,CAAtB,GAA4B,KAAKoB,kBAAL,GAA0B,CAAnE;AACAmC,gBAAAA,IAAI,IAAIuB,MAAR;AACAxB,gBAAAA,KAAK,IAAIwB,MAAT;AACH;;AACD,qBAAO;AACHjB,gBAAAA,EAAE,EAAEA,EADD;AAEHN,gBAAAA,IAAI,EAAEA,IAFH;AAGHD,gBAAAA,KAAK,EAAEA,KAHJ;AAIHlB,gBAAAA,CAAC,EAAEmB,IAAI,GAAI,KAAK/J,QAAL,CAAcuL,OAAd,GAAwB/E,KAJhC;AAKHmC,gBAAAA,CAAC,EAAE,KAAK3I,QAAL,CAAc2I;AALd,eAAP;AAOH;;AACD,eAAK5O,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BG,aAAnC;AAAkD;AAC9C,kBAAI,KAAKoD,WAAT,EAAsB;AAClB,oBAAIC,OAAK,GAAG,KAAKC,aAAL,CAAmB+C,EAAnB,CAAZ;;AACAP,gBAAAA,KAAK,GAAG,CAAC,KAAK7H,SAAN,GAAmB,CAAC,KAAKqE,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAA7B,KAA4C8H,EAAE,GAAGhD,OAAK,CAACE,KAAvD,CAAnB,IAAqFF,OAAK,CAACzL,GAAN,GAAa,KAAK2G,UAAL,GAAkB8E,OAAK,CAACE,KAA1H,CAAR;AACA,oBAAI8D,GAAE,GAAG,KAAKjE,WAAL,CAAiBiD,EAAjB,CAAT;AACA7D,gBAAAA,KAAK,GAAI6E,GAAE,GAAG,CAAL,GAASA,GAAT,GAAc,KAAK/E,SAAL,CAAeE,KAAtC;AACH,eALD,MAKO;AACHsD,gBAAAA,KAAK,GAAG,CAAC,KAAK7H,SAAN,GAAmB,CAAC,KAAKqE,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAA7B,IAA2C8H,EAAtE;AACA7D,gBAAAA,KAAK,GAAG,KAAKF,SAAL,CAAeE,KAAvB;AACH;;AACDuD,cAAAA,IAAI,GAAGD,KAAK,GAAGtD,KAAf;;AACA,kBAAI,KAAK9J,UAAT,EAAqB;AACjB,oBAAI4O,OAAM,GAAI,KAAKrM,OAAL,CAAauH,KAAb,GAAqB,CAAtB,GAA4B,KAAKoB,kBAAL,GAA0B,CAAnE;;AACAmC,gBAAAA,IAAI,IAAIuB,OAAR;AACAxB,gBAAAA,KAAK,IAAIwB,OAAT;AACH;;AACD,qBAAO;AACHjB,gBAAAA,EAAE,EAAEA,EADD;AAEHP,gBAAAA,KAAK,EAAEA,KAFJ;AAGHC,gBAAAA,IAAI,EAAEA,IAHH;AAIHnB,gBAAAA,CAAC,EAAEmB,IAAI,GAAI,KAAK/J,QAAL,CAAcuL,OAAd,GAAwB/E,KAJhC;AAKHmC,gBAAAA,CAAC,EAAE,KAAK3I,QAAL,CAAc2I;AALd,eAAP;AAOH;AAhDL;;AAkDA;;AACJ,WAAK5O,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeM,QAApB;AAA8B;AAC1B,kBAAQ,KAAKrB,YAAb;AACI,iBAAK7I,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BC,aAAjC;AAAgD;AAC5C,oBAAI,KAAKiD,WAAT,EAAsB;AAClB,sBAAIC,OAAK,GAAG,KAAKC,aAAL,CAAmB+C,EAAnB,CAAZ;;AACAH,kBAAAA,GAAG,GAAG,CAAC,KAAKnI,OAAN,GAAiB,CAAC,KAAKuE,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAA9B,KAA2C4H,EAAE,GAAGhD,OAAK,CAACE,KAAtD,CAAjB,IAAkFF,OAAK,CAACzL,GAAN,GAAa,KAAK6G,QAAL,GAAgB4E,OAAK,CAACE,KAArH,CAAN;AACA,sBAAI8D,IAAE,GAAG,KAAKjE,WAAL,CAAiBiD,EAAjB,CAAT;AACA5D,kBAAAA,MAAM,GAAI4E,IAAE,GAAG,CAAL,GAASA,IAAT,GAAc,KAAK/E,SAAL,CAAeG,MAAvC;AACAwD,kBAAAA,MAAM,GAAGC,GAAG,GAAGzD,MAAf;AACH,iBAND,MAMO;AACHyD,kBAAAA,GAAG,GAAG,CAAC,KAAKnI,OAAN,GAAiB,CAAC,KAAKuE,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAA9B,IAA0C4H,EAAjE;AACA5D,kBAAAA,MAAM,GAAG,KAAKH,SAAL,CAAeG,MAAxB;AACH;;AACDwD,gBAAAA,MAAM,GAAGC,GAAG,GAAGzD,MAAf;;AACA,oBAAI,KAAK/J,UAAT,EAAqB;AACjB,sBAAI4O,QAAM,GAAI,KAAKrM,OAAL,CAAawH,MAAb,GAAsB,CAAvB,GAA6B,KAAKmB,kBAAL,GAA0B,CAApE;;AACAsC,kBAAAA,GAAG,IAAIoB,QAAP;AACArB,kBAAAA,MAAM,IAAIqB,QAAV;AACH;;AACD,uBAAO;AACHjB,kBAAAA,EAAE,EAAEA,EADD;AAEHH,kBAAAA,GAAG,EAAEA,GAFF;AAGHD,kBAAAA,MAAM,EAAEA,MAHL;AAIHrB,kBAAAA,CAAC,EAAE,KAAK5I,QAAL,CAAc4I,CAJd;AAKHD,kBAAAA,CAAC,EAAEsB,MAAM,GAAI,KAAKjK,QAAL,CAAcwL,OAAd,GAAwB/E;AALlC,iBAAP;AAOH;;AACD,iBAAK1M,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BE,aAAjC;AAAgD;AAC5C,oBAAI,KAAKgD,WAAT,EAAsB;AAClB,sBAAIC,OAAK,GAAG,KAAKC,aAAL,CAAmB+C,EAAnB,CAAZ;;AACAJ,kBAAAA,MAAM,GAAG,KAAK9H,UAAL,GAAmB,CAAC,KAAKmE,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAA9B,KAA2C4H,EAAE,GAAGhD,OAAK,CAACE,KAAtD,CAAnB,IAAoFF,OAAK,CAACzL,GAAN,GAAa,KAAK6G,QAAL,GAAgB4E,OAAK,CAACE,KAAvH,CAAT;AACA,sBAAI8D,IAAE,GAAG,KAAKjE,WAAL,CAAiBiD,EAAjB,CAAT;AACA5D,kBAAAA,MAAM,GAAI4E,IAAE,GAAG,CAAL,GAASA,IAAT,GAAc,KAAK/E,SAAL,CAAeG,MAAvC;AACH,iBALD,MAKO;AACHwD,kBAAAA,MAAM,GAAG,KAAK9H,UAAL,GAAmB,CAAC,KAAKmE,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAA9B,IAA0C4H,EAAtE;AACA5D,kBAAAA,MAAM,GAAG,KAAKH,SAAL,CAAeG,MAAxB;AACH;;AACDyD,gBAAAA,GAAG,GAAGD,MAAM,GAAGxD,MAAf;;AACA,oBAAI,KAAK/J,UAAT,EAAqB;AACjB,sBAAI4O,QAAM,GAAI,KAAKrM,OAAL,CAAawH,MAAb,GAAsB,CAAvB,GAA6B,KAAKmB,kBAAL,GAA0B,CAApE;;AACAsC,kBAAAA,GAAG,IAAIoB,QAAP;AACArB,kBAAAA,MAAM,IAAIqB,QAAV;AACH;;AACD,uBAAO;AACHjB,kBAAAA,EAAE,EAAEA,EADD;AAEHH,kBAAAA,GAAG,EAAEA,GAFF;AAGHD,kBAAAA,MAAM,EAAEA,MAHL;AAIHrB,kBAAAA,CAAC,EAAE,KAAK5I,QAAL,CAAc4I,CAJd;AAKHD,kBAAAA,CAAC,EAAEsB,MAAM,GAAI,KAAKjK,QAAL,CAAcwL,OAAd,GAAwB/E;AALlC,iBAAP;AAOA;AACH;AAlDL;AAoDH;;AACD,WAAK1M,EAAE,CAACoF,MAAH,CAAUwE,IAAV,CAAeU,IAApB;AAA0B;AACtB,cAAIoH,OAAO,GAAG7G,IAAI,CAACoC,KAAL,CAAWqD,EAAE,GAAG,KAAK1H,WAArB,CAAd;;AACA,kBAAQ,KAAKd,UAAb;AACI,iBAAK9H,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBV,UAA7B;AAAyC;AACrC,wBAAQ,KAAKhB,YAAb;AACI,uBAAK7I,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BC,aAAjC;AAAgD;AAC5C+F,sBAAAA,GAAG,GAAG,CAAC,KAAKnI,OAAN,GAAiB,CAAC,KAAKuE,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAA9B,IAA0CgJ,OAAjE;AACAxB,sBAAAA,MAAM,GAAGC,GAAG,GAAG,KAAK5D,SAAL,CAAeG,MAA9B;AACA2E,sBAAAA,KAAK,GAAGnB,MAAM,GAAI,KAAKjK,QAAL,CAAcwL,OAAd,GAAwB,KAAKlF,SAAL,CAAeG,MAAzD;AACA;AACH;;AACD,uBAAK1M,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BE,aAAjC;AAAgD;AAC5C6F,sBAAAA,MAAM,GAAG,KAAK9H,UAAL,GAAmB,CAAC,KAAKmE,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAA9B,IAA0CgJ,OAAtE;AACAvB,sBAAAA,GAAG,GAAGD,MAAM,GAAG,KAAK3D,SAAL,CAAeG,MAA9B;AACA2E,sBAAAA,KAAK,GAAGnB,MAAM,GAAI,KAAKjK,QAAL,CAAcwL,OAAd,GAAwB,KAAKlF,SAAL,CAAeG,MAAzD;AACA;AACH;AAZL;;AAcA0E,gBAAAA,KAAK,GAAG,KAAK9I,QAAL,GAAkBgI,EAAE,GAAG,KAAK1H,WAAX,IAA2B,KAAK2D,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAAvD,CAAzB;;AACA,wBAAQ,KAAKO,cAAb;AACI,uBAAK/I,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BC,aAAnC;AAAkD;AAC9CqH,sBAAAA,KAAK,IAAK,KAAKnL,QAAL,CAAcuL,OAAd,GAAwB,KAAKjF,SAAL,CAAeE,KAAjD;AACA2E,sBAAAA,KAAK,IAAK,KAAKlM,OAAL,CAAasM,OAAb,GAAuB,KAAKtM,OAAL,CAAauH,KAA9C;AACA;AACH;;AACD,uBAAKzM,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BG,aAAnC;AAAkD;AAC9CmH,sBAAAA,KAAK,IAAK,CAAC,IAAI,KAAKnL,QAAL,CAAcuL,OAAnB,IAA8B,KAAKjF,SAAL,CAAeE,KAAvD;AACA2E,sBAAAA,KAAK,IAAK,CAAC,IAAI,KAAKlM,OAAL,CAAasM,OAAlB,IAA6B,KAAKtM,OAAL,CAAauH,KAApD;AACA2E,sBAAAA,KAAK,IAAI,CAAC,CAAV;AACA;AACH;AAXL;;AAaA,uBAAO;AACHd,kBAAAA,EAAE,EAAEA,EADD;AAEHH,kBAAAA,GAAG,EAAEA,GAFF;AAGHD,kBAAAA,MAAM,EAAEA,MAHL;AAIHrB,kBAAAA,CAAC,EAAEuC,KAJA;AAKHxC,kBAAAA,CAAC,EAAEyC;AALA,iBAAP;AAOH;;AACD,iBAAKrR,EAAE,CAACoF,MAAH,CAAUmF,aAAV,CAAwBL,QAA7B;AAAuC;AACnC,wBAAQ,KAAKnB,cAAb;AACI,uBAAK/I,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BC,aAAnC;AAAkD;AAC9CiG,sBAAAA,IAAI,GAAG,KAAK1H,QAAL,GAAiB,CAAC,KAAKiE,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAA7B,IAA2CkJ,OAAnE;AACA3B,sBAAAA,KAAK,GAAGC,IAAI,GAAG,KAAKzD,SAAL,CAAeE,KAA9B;AACA2E,sBAAAA,KAAK,GAAGpB,IAAI,GAAI,KAAK/J,QAAL,CAAcuL,OAAd,GAAwB,KAAKjF,SAAL,CAAeE,KAAvD;AACA2E,sBAAAA,KAAK,IAAK,KAAKlM,OAAL,CAAasM,OAAb,GAAuB,KAAKtM,OAAL,CAAauH,KAA9C;AACA;AACH;;AACD,uBAAKzM,EAAE,CAACoF,MAAH,CAAU0E,mBAAV,CAA8BG,aAAnC;AAAkD;AAC9C8F,sBAAAA,KAAK,GAAG,CAAC,KAAK7H,SAAN,GAAmB,CAAC,KAAKqE,SAAL,CAAeE,KAAf,GAAuB,KAAKjE,UAA7B,IAA2CkJ,OAAtE;AACA1B,sBAAAA,IAAI,GAAGD,KAAK,GAAG,KAAKxD,SAAL,CAAeE,KAA9B;AACA2E,sBAAAA,KAAK,GAAGpB,IAAI,GAAI,KAAK/J,QAAL,CAAcuL,OAAd,GAAwB,KAAKjF,SAAL,CAAeE,KAAvD;AACA2E,sBAAAA,KAAK,IAAK,CAAC,IAAI,KAAKlM,OAAL,CAAasM,OAAlB,IAA6B,KAAKtM,OAAL,CAAauH,KAApD;AACA;AACH;AAdL;;AAgBA4E,gBAAAA,KAAK,GAAG,CAAC,KAAKrJ,OAAN,GAAkBsI,EAAE,GAAG,KAAK1H,WAAX,IAA2B,KAAK2D,SAAL,CAAeG,MAAf,GAAwB,KAAKhE,QAAxD,CAAzB;;AACA,wBAAQ,KAAKG,YAAb;AACI,uBAAK7I,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BC,aAAjC;AAAgD;AAC5CiH,sBAAAA,KAAK,IAAK,CAAC,IAAI,KAAKpL,QAAL,CAAcwL,OAAnB,IAA8B,KAAKlF,SAAL,CAAeG,MAAvD;AACA2E,sBAAAA,KAAK,IAAK,CAAC,IAAI,KAAKnM,OAAL,CAAauM,OAAlB,IAA6B,KAAKvM,OAAL,CAAawH,MAApD;AACA;AACH;;AACD,uBAAK1M,EAAE,CAACoF,MAAH,CAAU+E,iBAAV,CAA4BE,aAAjC;AAAgD;AAC5CgH,sBAAAA,KAAK,IAAM,KAAKpL,QAAL,CAAcwL,OAAf,GAA0B,KAAKlF,SAAL,CAAeG,MAAnD;AACA2E,sBAAAA,KAAK,IAAK,KAAKnM,OAAL,CAAauM,OAAb,GAAuB,KAAKvM,OAAL,CAAawH,MAA9C;AACA2E,sBAAAA,KAAK,IAAI,CAAC,CAAV;AACA;AACH;AAXL;;AAaA,uBAAO;AACHf,kBAAAA,EAAE,EAAEA,EADD;AAEHN,kBAAAA,IAAI,EAAEA,IAFH;AAGHD,kBAAAA,KAAK,EAAEA,KAHJ;AAIHlB,kBAAAA,CAAC,EAAEuC,KAJA;AAKHxC,kBAAAA,CAAC,EAAEyC;AALA,iBAAP;AAOH;AA5EL;;AA8EA;AACH;AA5LL;AA8LH,GArlCI;AAslCL;AACAM,EAAAA,iBAvlCK,6BAulCarB,EAvlCb,EAulCiB;AAClB,QAAI5M,IAAI,GAAG,KAAKC,eAAL,CAAqB2M,EAArB,CAAX;AACA,QAAI,CAAC5M,IAAL,EACI,OAAO,IAAP;AACJ,QAAIkO,IAAI,GAAG;AACPtB,MAAAA,EAAE,EAAEA,EADG;AAEPzB,MAAAA,CAAC,EAAEnL,IAAI,CAACmL,CAFD;AAGPD,MAAAA,CAAC,EAAElL,IAAI,CAACkL;AAHD,KAAX;;AAKA,QAAI,KAAK7B,SAAT,EAAoB;AAChB6E,MAAAA,IAAI,CAACzB,GAAL,GAAWzM,IAAI,CAACkL,CAAL,GAAUlL,IAAI,CAACgJ,MAAL,IAAe,IAAIhJ,IAAI,CAAC+N,OAAxB,CAArB;AACAG,MAAAA,IAAI,CAAC1B,MAAL,GAAcxM,IAAI,CAACkL,CAAL,GAAUlL,IAAI,CAACgJ,MAAL,GAAchJ,IAAI,CAAC+N,OAA3C;AACH,KAHD,MAGO;AACHG,MAAAA,IAAI,CAAC5B,IAAL,GAAYtM,IAAI,CAACmL,CAAL,GAAUnL,IAAI,CAAC+I,KAAL,GAAa/I,IAAI,CAAC8N,OAAxC;AACAI,MAAAA,IAAI,CAAC7B,KAAL,GAAarM,IAAI,CAACmL,CAAL,GAAUnL,IAAI,CAAC+I,KAAL,IAAc,IAAI/I,IAAI,CAAC8N,OAAvB,CAAvB;AACH;;AACD,WAAOI,IAAP;AACH,GAxmCI;AAymCL;AACAC,EAAAA,UA1mCK,sBA0mCMvB,EA1mCN,EA0mCU;AACX,QAAI,KAAKjO,QAAT,EACI,OAAO,KAAKyN,YAAL,CAAkBQ,EAAlB,CAAP,CADJ,KAEK;AACD,UAAI,KAAKtN,qBAAT,EACI,OAAO,KAAK8M,YAAL,CAAkBQ,EAAlB,CAAP,CADJ,KAGI,OAAO,KAAKqB,iBAAL,CAAuBrB,EAAvB,CAAP;AACP;AACJ,GAnnCI;AAonCL;AACA/C,EAAAA,aArnCK,yBAqnCSuE,MArnCT,EAqnCiB;AAClB,QAAI,CAAC,KAAKzE,WAAV,EACI,OAAO,IAAP;AACJ,QAAIyE,MAAM,IAAI,IAAd,EACIA,MAAM,GAAG,KAAKvP,SAAd;AACJ,QAAI+K,KAAK,GAAG,CAAZ;AACA,QAAIE,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAI8C,EAAT,IAAe,KAAKjD,WAApB,EAAiC;AAC7B,UAAI0E,QAAQ,CAACzB,EAAD,CAAR,GAAewB,MAAnB,EAA2B;AACvBxE,QAAAA,KAAK,IAAI,KAAKD,WAAL,CAAiBiD,EAAjB,CAAT;AACA9C,QAAAA,KAAK;AACR;AACJ;;AACD,WAAO;AACH3L,MAAAA,GAAG,EAAEyL,KADF;AAEHE,MAAAA,KAAK,EAAEA;AAFJ,KAAP;AAIH,GAtoCI;AAuoCL;AACAtG,EAAAA,cAxoCK,4BAwoCY;AACb,SAAK8K,SAAL,GAAiB,KAAKjF,SAAL,GAAiB,KAAKuC,OAAtB,GAAgC,KAAKG,QAAtD;AACH,GA1oCI;AA2oCL;AACAtI,EAAAA,cA5oCK,4BA4oCY;AACb,QAAI1D,CAAC,GAAG,IAAR;;AACA,QAAIA,CAAC,CAACwO,cAAF,IAAoB,IAAxB,EAA8B;AAC1B,UAAIvO,IAAI,GAAGD,CAAC,CAACE,eAAF,CAAkBF,CAAC,CAACwO,cAApB,CAAX;AACAxO,MAAAA,CAAC,CAACwO,cAAF,GAAmB,IAAnB;;AACA,UAAIvO,IAAJ,EAAU;AACNA,QAAAA,IAAI,CAACwO,SAAL,CAAe,IAAIlS,EAAE,CAACmS,QAAP,CACX,IAAInS,EAAE,CAACoS,OAAP,CAAe,EAAf,EAAmB,IAAnB,CADW,EAEX,IAAIpS,EAAE,CAACoS,OAAP,CAAe,EAAf,EAAmB,CAAnB,CAFW,CAAf;AAOH;AACJ;;AACD3O,IAAAA,CAAC,CAACjB,YAAF;;AAEA,QAAIiB,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACiJ,QAA1B,IAAsC,CAAC1F,CAAC,CAAC4O,QAA7C,EAAuD;AACnD;AACA5O,MAAAA,CAAC,CAAC6O,MAAF;AACH,KAHD,MAGO,IAAI7O,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACgC,IAA9B,EAAoC;AACvC,UAAIuB,CAAC,CAACuO,SAAF,IAAe,IAAnB,EAAyB;AACrB,aAAKO,WAAL;AACH,OAFD,MAEO;AACH9O,QAAAA,CAAC,CAAC6O,MAAF;AACH;AACJ;AACJ,GAvqCI;AAwqCL;AACAxL,EAAAA,aAzqCK,yBAyqCSyH,EAzqCT,EAyqCaiE,gBAzqCb,EAyqC+B;AAChC,QAAI,KAAKhL,WAAL,CAAiBiL,mBAAjB,CAAqClE,EAArC,EAAyCiE,gBAAzC,CAAJ,EACI;AACJ,QAAIE,IAAI,GAAGnE,EAAE,CAACoE,UAAH,KAAkB3S,EAAE,CAAC4S,KAAH,CAASC,SAA3B,IAAwCtE,EAAE,CAACuE,MAAH,KAAc,KAAKxM,IAAtE;;AACA,QAAI,CAACoM,IAAL,EAAW;AACP,UAAIK,QAAQ,GAAGxE,EAAE,CAACuE,MAAlB;;AACA,aAAOC,QAAQ,CAACC,OAAT,IAAoB,IAApB,IAA4BD,QAAQ,CAACE,MAA5C;AACIF,QAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAApB;AADJ;;AAEA,WAAKC,WAAL,GAAmBH,QAAQ,CAACC,OAAT,IAAoB,IAApB,GAA2BD,QAA3B,GAAsCxE,EAAE,CAACuE,MAA5D;AACH;AACJ,GAnrCI;AAorCL;AACA/L,EAAAA,UArrCK,wBAqrCQ;AACT,QAAItD,CAAC,GAAG,IAAR;AACAA,IAAAA,CAAC,CAAC0P,UAAF,GAAe,IAAf;;AACA,QAAI1P,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACiJ,QAA9B,EAAwC;AACpC,UAAI1F,CAAC,CAAC4O,QAAN,EACI5O,CAAC,CAAC2P,gBAAF,GAAqB,IAArB;AACJ3P,MAAAA,CAAC,CAAC6O,MAAF;AACH,KAJD,MAIO,IAAI7O,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACgC,IAA9B,EAAoC;AACvC,UAAIuB,CAAC,CAACuO,SAAF,IAAe,IAAnB,EAAyB;AACrBvO,QAAAA,CAAC,CAAC8O,WAAF;AACH,OAFD,MAEO;AACH9O,QAAAA,CAAC,CAAC6O,MAAF;AACH;AACJ;;AACD,SAAKY,WAAL,GAAmB,IAAnB;AACH,GApsCI;AAssCLjM,EAAAA,iBAtsCK,6BAssCasH,EAtsCb,EAssCiBiE,gBAtsCjB,EAssCmC;AACpC,QAAI/O,CAAC,GAAG,IAAR;AACA,QAAIA,CAAC,CAAC+D,WAAF,CAAciL,mBAAd,CAAkClE,EAAlC,EAAsCiE,gBAAtC,KAA2DjE,EAAE,CAAC8E,QAAlE,EACI;AAEJ5P,IAAAA,CAAC,CAAC0P,UAAF,GAAe,IAAf;;AACA,QAAI1P,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACiJ,QAA9B,EAAwC;AACpC,UAAI1F,CAAC,CAAC4O,QAAN,EACI5O,CAAC,CAAC2P,gBAAF,GAAqB,IAArB;AACJ3P,MAAAA,CAAC,CAAC6O,MAAF;AACH,KAJD,MAIO,IAAI7O,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACgC,IAA9B,EAAoC;AACvC,UAAIuB,CAAC,CAACuO,SAAF,IAAe,IAAnB,EAAyB;AACrBvO,QAAAA,CAAC,CAAC8O,WAAF;AACH,OAFD,MAEO;AACH9O,QAAAA,CAAC,CAAC6O,MAAF;AACH;AACJ;;AACD,SAAKY,WAAL,GAAmB,IAAnB;AACH,GAxtCI;AAytCL;AACA7L,EAAAA,cA1tCK,4BA0tCY;AACb,QAAI,KAAK3C,WAAL,CAAiB,KAAjB,CAAJ,EACI,KAAKlC,YAAL;AACP,GA7tCI;AA8tCL;AACA8Q,EAAAA,eA/tCK,2BA+tCW5P,IA/tCX,EA+tCiB;AAClB;AACA,QACK,CAAC,KAAKqJ,SAAN,IAAmBrJ,IAAI,CAAC+I,KAAL,IAAc,KAAKF,SAAL,CAAeE,KAAjD,IACI,KAAKM,SAAL,IAAkBrJ,IAAI,CAACgJ,MAAL,IAAe,KAAKH,SAAL,CAAeG,MAFxD,EAGE;AACE,UAAI,CAAC,KAAKW,WAAV,EACI,KAAKA,WAAL,GAAmB,EAAnB;AACJ,UAAIxL,GAAG,GAAG,KAAKkL,SAAL,GAAiBrJ,IAAI,CAACgJ,MAAtB,GAA+BhJ,IAAI,CAAC+I,KAA9C;;AACA,UAAI,KAAKY,WAAL,CAAiB3J,IAAI,CAACsP,OAAtB,KAAkCnR,GAAtC,EAA2C;AACvC,aAAKwL,WAAL,CAAiB3J,IAAI,CAACsP,OAAtB,IAAiCnR,GAAjC;;AACA,aAAKgD,cAAL,GAFuC,CAGvC;AACA;AACA;;;AACA,aAAK0O,SAAL,GANuC,CAOvC;;AACA,YAAI,KAAKC,eAAL,IAAwB,IAA5B,EAAkC;AAC9B,eAAKL,UAAL,GAAkB,IAAlB;AACA,eAAKM,UAAL,CAAgB,KAAKC,WAArB;AACA,eAAKC,QAAL,CAAc,KAAKH,eAAnB,EAAoC3I,IAAI,CAAC+I,GAAL,CAAS,CAAT,EAAY,KAAKC,gBAAL,GAA0B,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyB,IAA9D,CAApC;AACH;AACJ;AACJ,KAvBiB,CAwBlB;;AACH,GAxvCI;AAyvCL;AACAxB,EAAAA,WA1vCK,yBA0vCS;AACV,QAAI9O,CAAC,GAAG,IAAR;AACA,QAAI,CAACA,CAAC,CAAChB,MAAH,KAAcgB,CAAC,CAACwN,UAAF,GAAe,CAAf,IAAoBxN,CAAC,CAACuN,YAAF,GAAiB,CAArC,IAA0CvN,CAAC,CAACyN,aAAF,GAAkB,CAA5D,IAAiEzN,CAAC,CAACsN,WAAF,GAAgB,CAA/F,CAAJ,EACI;AACJ,QAAIiD,MAAM,GAAGvQ,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAAC6L,OAAhB,GAA0B7L,CAAC,CAACgM,QAAzC;AACA,QAAIwE,GAAG,GAAG,CAACxQ,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAAC6C,IAAF,CAAOoG,MAArB,GAA8BjJ,CAAC,CAAC6C,IAAF,CAAOmG,KAAtC,IAA+ChJ,CAAC,CAAC3B,YAA3D;AACA,QAAIoS,OAAO,GAAGrJ,IAAI,CAACa,GAAL,CAASjI,CAAC,CAACuO,SAAF,GAAcgC,MAAvB,IAAiCC,GAA/C;;AACA,QAAIC,OAAJ,EAAa;AACT,UAAIC,YAAY,GAAG,EAAnB;;AACA,cAAQ1Q,CAAC,CAACuG,cAAV;AACI,aAAK,CAAL,CADJ,CACW;;AACP,aAAK,CAAL;AAAO;AACH,cAAIvG,CAAC,CAACuO,SAAF,GAAcgC,MAAlB,EAA0B;AACtBvQ,YAAAA,CAAC,CAAC2Q,OAAF,CAAUD,YAAV,EADsB,CAEtB;AACH,WAHD,MAGO;AACH1Q,YAAAA,CAAC,CAAC4Q,QAAF,CAAWF,YAAX,EADG,CAEH;AACH;;AACD;;AACJ,aAAK,CAAL,CAXJ,CAWW;;AACP,aAAK,CAAL;AAAO;AACH,cAAI1Q,CAAC,CAACuO,SAAF,GAAcgC,MAAlB,EAA0B;AACtBvQ,YAAAA,CAAC,CAAC2Q,OAAF,CAAUD,YAAV;AACH,WAFD,MAEO;AACH1Q,YAAAA,CAAC,CAAC4Q,QAAF,CAAWF,YAAX;AACH;;AACD;AAlBR;AAoBH,KAtBD,MAsBO,IAAI1Q,CAAC,CAACwN,UAAF,IAAgB,CAAhB,IAAqBxN,CAAC,CAACuN,YAAF,IAAkB,CAAvC,IAA4CvN,CAAC,CAACyN,aAAF,IAAmB,CAA/D,IAAoEzN,CAAC,CAACsN,WAAF,IAAiB,CAAzF,EAA4F;AAC/FtN,MAAAA,CAAC,CAAC6O,MAAF;AACH;;AACD7O,IAAAA,CAAC,CAACuO,SAAF,GAAc,IAAd;AACH,GA3xCI;AA4xCL;AACAM,EAAAA,MA7xCK,oBA6xCI;AACL,QAAI7O,CAAC,GAAG,IAAR;AACA,QAAI,CAACA,CAAC,CAACiB,WAAF,EAAL,EACI;AACJ,QAAIjB,CAAC,CAACwN,UAAF,GAAe,CAAf,IAAoBxN,CAAC,CAACuN,YAAF,GAAiB,CAArC,IAA0CvN,CAAC,CAACyN,aAAF,GAAkB,CAA5D,IAAiEzN,CAAC,CAACsN,WAAF,GAAgB,CAArF,EACI;AACJtN,IAAAA,CAAC,CAAC4O,QAAF,GAAa,IAAb,CANK,CAOL;;AACA5O,IAAAA,CAAC,CAACqN,gBAAF;;AACA,QAAIS,MAAM,GAAG,CAAC9N,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAACuE,OAAhB,GAA0BvE,CAAC,CAAC6E,QAA7B,KAA0C7E,CAAC,CAACsJ,SAAF,GAActJ,CAAC,CAAC6C,IAAF,CAAOoG,MAArB,GAA8BjJ,CAAC,CAAC6C,IAAF,CAAOmG,KAA/E,CAAb;AACA,QAAI0H,YAAY,GAAG,EAAnB;AACA1Q,IAAAA,CAAC,CAACkQ,QAAF,CAAWlQ,CAAC,CAACuB,aAAb,EAA4BmP,YAA5B,EAA0C5C,MAA1C;AACH,GAzyCI;AA0yCL;AACA+C,EAAAA,MA3yCK,oBA2yCI;AACL,QAAI,KAAKtR,qBAAL,IAA8B,CAA9B,IAAmC,KAAK4C,WAA5C,EACI,OAFC,CAGL;;AACA,QAAI,KAAKvD,QAAT,EAAmB;AACf,UAAImD,GAAG,GAAI,KAAKG,cAAL,GAAsB,KAAK3C,qBAA5B,GAAqD,KAAK6C,cAA1D,GAA2E,KAAKA,cAAhF,GAAkG,KAAKF,cAAL,GAAsB,KAAK3C,qBAAvI;;AACA,WAAK,IAAIyC,CAAC,GAAG,KAAKE,cAAlB,EAAkCF,CAAC,GAAGD,GAAtC,EAA2CC,CAAC,EAA5C,EAAgD;AAC5C,YAAImM,IAAI,GAAG,KAAKrI,WAAL,CAAiB9D,CAAjB,CAAX;;AACA,YAAImM,IAAJ,EAAU;AACN;AACA,eAAKf,mBAAL,CAAyBe,IAAzB;AACH;AACJ;;AAED,UAAI,KAAKjM,cAAL,IAAuB,KAAKE,cAAL,GAAsB,CAAjD,EAAoD;AAAE;AAClD,YAAI,KAAK8K,gBAAT,EAA2B;AACvB,eAAKhL,cAAL,GAAsB,CAAtB;AACA,eAAKC,WAAL,GAAmB,KAAnB,CAFuB,CAGvB;;AACA,eAAK+K,gBAAL,GAAwB,KAAxB;AACH,SALD,MAKO;AACH,eAAK/K,WAAL,GAAmB,IAAnB;;AACA,eAAKN,iBAAL;;AACA,eAAKV,YAAL,GAAoB,KAApB;;AACA,eAAKkM,gBAAL;;AACA,cAAI,KAAKpP,SAAL,IAAkBxB,SAAS,CAACgC,IAAhC,EACI,KAAK6C,UAAL,GAAkB,KAAKC,aAAvB;AACP;AACJ,OAdD,MAcO;AACH,aAAKW,cAAL,IAAuB,KAAK3C,qBAA5B;AACH;AACJ,KA3BD,MA2BO;AACH,UAAI,KAAK2C,cAAL,GAAsB,KAAKpD,SAA/B,EAA0C;AACtC,YAAIiD,IAAG,GAAI,KAAKG,cAAL,GAAsB,KAAK3C,qBAA5B,GAAqD,KAAKT,SAA1D,GAAsE,KAAKA,SAA3E,GAAwF,KAAKoD,cAAL,GAAsB,KAAK3C,qBAA7H;;AACA,aAAK,IAAIyC,GAAC,GAAG,KAAKE,cAAlB,EAAkCF,GAAC,GAAGD,IAAtC,EAA2CC,GAAC,EAA5C,EAAgD;AAC5C,eAAKC,oBAAL,CAA0BD,GAA1B;AACH;;AACD,aAAKE,cAAL,IAAuB,KAAK3C,qBAA5B;AACH,OAND,MAMO;AACH,aAAK4C,WAAL,GAAmB,IAAnB;;AACA,aAAKkL,gBAAL;;AACA,YAAI,KAAKpP,SAAL,IAAkBxB,SAAS,CAACgC,IAAhC,EACI,KAAK6C,UAAL,GAAkB,KAAKC,aAAvB;AACP;AACJ;AACJ,GAx1CI;;AAy1CL;;;;AAIA6L,EAAAA,mBA71CK,+BA61Cee,IA71Cf,EA61CqB;AACtB,QAAIlO,IAAI,GAAG,KAAKC,eAAL,CAAqBiO,IAAI,CAACtB,EAA1B,CAAX;;AACA,QAAI,CAAC5M,IAAL,EAAW;AAAE;AACT,UAAI6Q,MAAM,GAAG,KAAKnO,KAAL,CAAWC,IAAX,KAAoB,CAAjC;;AACA,UAAIkO,MAAJ,EAAY;AACR7Q,QAAAA,IAAI,GAAG,KAAK0C,KAAL,CAAWzE,GAAX,EAAP,CADQ,CAER;AACH,OAHD,MAGO;AACH+B,QAAAA,IAAI,GAAG1D,EAAE,CAACkJ,WAAH,CAAe,KAAKjD,QAApB,CAAP,CADG,CAEH;AACH;;AACD,UAAIvC,IAAI,CAACsP,OAAL,IAAgBpB,IAAI,CAACtB,EAAzB,EAA6B;AACzB5M,QAAAA,IAAI,CAACsP,OAAL,GAAepB,IAAI,CAACtB,EAApB;AACA5M,QAAAA,IAAI,CAAC8Q,cAAL,CAAoB,KAAKjI,SAAzB;AACH;;AACD7I,MAAAA,IAAI,CAAC+Q,WAAL,CAAiB,IAAIzU,EAAE,CAAC+O,EAAP,CAAU6C,IAAI,CAAC/C,CAAf,EAAkB+C,IAAI,CAAChD,CAAvB,CAAjB;;AACA,WAAK8F,cAAL,CAAoBhR,IAApB;;AACA,WAAKwB,OAAL,CAAayP,QAAb,CAAsBjR,IAAtB;;AACA,UAAI6Q,MAAM,IAAI,KAAKzH,iBAAnB,EAAsC;AAClC,YAAI8H,MAAM,GAAGlR,IAAI,CAACyB,YAAL,CAAkBnF,EAAE,CAAC6M,MAArB,CAAb;AACA,YAAI+H,MAAJ,EACIA,MAAM,CAACC,eAAP;AACP;;AACDnR,MAAAA,IAAI,CAACoR,eAAL,CAAqB,KAAK5P,OAAL,CAAa6P,aAAb,GAA6B,CAAlD;AAEA,UAAIlR,QAAQ,GAAGH,IAAI,CAACyB,YAAL,CAAkBzB,IAAI,CAAC+D,IAAvB,CAAf;AACA/D,MAAAA,IAAI,CAACG,QAAL,GAAgBA,QAAhB;;AACA,UAAIA,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACmR,KAAT,GAAiB,IAAjB;;AACAnR,QAAAA,QAAQ,CAAC2C,cAAT;AACH;;AACD,UAAI,KAAKvD,WAAT,EAAsB;AAClBjD,QAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAAC,KAAKf,WAAN,CAArC,EAAyDS,IAAzD,EAA+DkO,IAAI,CAACtB,EAAL,GAAU,KAAKrM,eAA9E;AACH;AACJ,KAhCD,MAgCO,IAAI,KAAKW,YAAL,IAAqB,KAAK3B,WAA9B,EAA2C;AAAE;AAChDS,MAAAA,IAAI,CAAC+Q,WAAL,CAAiB,IAAIzU,EAAE,CAAC+O,EAAP,CAAU6C,IAAI,CAAC/C,CAAf,EAAkB+C,IAAI,CAAChD,CAAvB,CAAjB;;AACA,WAAK8F,cAAL,CAAoBhR,IAApB,EAF8C,CAG9C;;;AACA,UAAI,KAAKT,WAAT,EAAsB;AAClBjD,QAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAAC,KAAKf,WAAN,CAArC,EAAyDS,IAAzD,EAA+DkO,IAAI,CAACtB,EAAL,GAAU,KAAKrM,eAA9E;AACH;AACJ;;AACD,SAAKyQ,cAAL,CAAoBhR,IAApB;;AAEA,SAAKuR,eAAL,CAAqBvR,IAAI,CAACG,QAA1B;;AACA,QAAI,KAAKyF,gBAAL,CAAsBjF,OAAtB,CAA8BuN,IAAI,CAACtB,EAAnC,IAAyC,CAA7C,EAAgD;AAC5C,WAAKhH,gBAAL,CAAsBhF,IAAtB,CAA2BsN,IAAI,CAACtB,EAAhC;AACH;AACJ,GA74CI;AA84CL;AACA5K,EAAAA,oBA/4CK,gCA+4CgBoM,MA/4ChB,EA+4CwB;AACzB,QAAIpO,IAAI,GAAG,KAAKwB,OAAL,CAAagQ,QAAb,CAAsBpD,MAAtB,CAAX;;AACA,QAAI,CAACpO,IAAL,EAAW;AAAE;AACTA,MAAAA,IAAI,GAAG1D,EAAE,CAACkJ,WAAH,CAAe,KAAKjD,QAApB,CAAP;AACAvC,MAAAA,IAAI,CAACsP,OAAL,GAAelB,MAAf;AACA,WAAK5M,OAAL,CAAayP,QAAb,CAAsBjR,IAAtB;AACA,UAAIG,QAAQ,GAAGH,IAAI,CAACyB,YAAL,CAAkBgQ,QAAlB,CAAf;AACAzR,MAAAA,IAAI,CAACG,QAAL,GAAgBA,QAAhB;;AACA,UAAIA,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACmR,KAAT,GAAiB,IAAjB;;AACAnR,QAAAA,QAAQ,CAAC2C,cAAT;AACH;;AACD,UAAI,KAAKvD,WAAT,EAAsB;AAClBjD,QAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAAC,KAAKf,WAAN,CAArC,EAAyDS,IAAzD,EAA+DoO,MAA/D;AACH;AACJ,KAbD,MAaO,IAAI,KAAKlN,YAAL,IAAqB,KAAK3B,WAA9B,EAA2C;AAAE;AAChDS,MAAAA,IAAI,CAACsP,OAAL,GAAelB,MAAf;;AACA,UAAI,KAAK7O,WAAT,EAAsB;AAClBjD,QAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAAC,KAAKf,WAAN,CAArC,EAAyDS,IAAzD,EAA+DoO,MAA/D;AACH;AACJ;;AACD,SAAKmD,eAAL,CAAqBvR,IAAI,CAACG,QAA1B;;AACA,QAAI,KAAKyF,gBAAL,CAAsBjF,OAAtB,CAA8ByN,MAA9B,IAAwC,CAA5C,EAA+C;AAC3C,WAAKxI,gBAAL,CAAsBhF,IAAtB,CAA2BwN,MAA3B;AACH;AACJ,GAx6CI;AA06CLmD,EAAAA,eA16CK,2BA06CWpR,QA16CX,EA06CqB;AACtB,QAAI,CAACA,QAAL,EACI;;AACJ,QAAI,KAAKX,YAAL,GAAoB/C,YAAY,CAACgD,IAArC,EAA2C;AACvC,cAAQ,KAAKD,YAAb;AACI,aAAK/C,YAAY,CAACkD,MAAlB;AACIQ,UAAAA,QAAQ,CAACC,QAAT,GAAoB,KAAKN,UAAL,IAAmBK,QAAQ,CAACyC,IAAT,CAAc0M,OAArD;AACA;;AACJ,aAAK7S,YAAY,CAAC+D,IAAlB;AACIL,UAAAA,QAAQ,CAACC,QAAT,GAAoB,KAAKM,YAAL,CAAkBC,OAAlB,CAA0BR,QAAQ,CAACyC,IAAT,CAAc0M,OAAxC,KAAoD,CAAxE;AACA;AANR;AAQH;AACJ,GAv7CI;AAw7CL;AACA0B,EAAAA,cAz7CK,0BAy7CUhR,IAz7CV,EAy7CgB;AACjB;AACA,QAAI2C,IAAJ;;AACA,QAAI,KAAKgH,WAAL,IAAoB,KAAKA,WAAL,CAAiB3J,IAAI,CAACsP,OAAtB,CAAxB,EAAwD;AACpD3M,MAAAA,IAAI,GAAG,KAAKgH,WAAL,CAAiB3J,IAAI,CAACsP,OAAtB,CAAP;AACH,KAFD,MAEO;AACH,UAAI,KAAKpK,WAAL,GAAmB,CAAvB,EACIlF,IAAI,CAAC8Q,cAAL,CAAoB,KAAKjI,SAAzB,EADJ,KAGIlG,IAAI,GAAG,KAAK0G,SAAL,GAAiB,KAAKR,SAAL,CAAeG,MAAhC,GAAyC,KAAKH,SAAL,CAAeE,KAA/D;AACP;;AACD,QAAIpG,IAAJ,EAAU;AACN,UAAI,KAAK0G,SAAT,EACIrJ,IAAI,CAACgJ,MAAL,GAAcrG,IAAd,CADJ,KAGI3C,IAAI,CAAC+I,KAAL,GAAapG,IAAb;AACP;AACJ,GA18CI;;AA28CL;;;;AAIA+O,EAAAA,cA/8CK,0BA+8CUC,YA/8CV,EA+8CwB;AACzB,QAAI3R,IAAI,GAAG4R,KAAK,CAACD,YAAD,CAAL,GAAsBA,YAAtB,GAAqC,KAAK1R,eAAL,CAAqB0R,YAArB,CAAhD;AACA,QAAIE,GAAG,GAAG,KAAK1D,UAAL,CAAgBnO,IAAI,CAACsP,OAArB,CAAV;AACAtP,IAAAA,IAAI,CAAC+Q,WAAL,CAAiBc,GAAG,CAAC1G,CAArB,EAAwB0G,GAAG,CAAC3G,CAA5B;AACH,GAn9CI;;AAo9CL;;;;;AAKA4G,EAAAA,eAz9CK,2BAy9CWC,IAz9CX,EAy9CiBpU,IAz9CjB,EAy9CuB;AACxB,QAAIoC,CAAC,GAAG,IAAR;AACA,QAAI,CAACA,CAAC,CAACiB,WAAF,EAAL,EACI;;AACJ,QAAI,CAACgR,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACtBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACH;;AACD,QAAIpU,IAAI,IAAI,IAAZ,EAAkB;AACdoC,MAAAA,CAAC,CAACW,YAAF,GAAiBqR,IAAjB;AACH,KAFD,MAEO;AACH,UAAI3D,MAAJ,EAAY3N,GAAZ;;AACA,UAAI9C,IAAJ,EAAU;AACN,aAAK,IAAIoE,CAAC,GAAGgQ,IAAI,CAACxF,MAAL,GAAc,CAA3B,EAA8BxK,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvCqM,UAAAA,MAAM,GAAG2D,IAAI,CAAChQ,CAAD,CAAb;AACAtB,UAAAA,GAAG,GAAGV,CAAC,CAACW,YAAF,CAAeC,OAAf,CAAuByN,MAAvB,CAAN;;AACA,cAAI3N,GAAG,GAAG,CAAV,EAAa;AACTV,YAAAA,CAAC,CAACW,YAAF,CAAeE,IAAf,CAAoBwN,MAApB;AACH;AACJ;AACJ,OARD,MAQO;AACH,aAAK,IAAIrM,GAAC,GAAGgQ,IAAI,CAACxF,MAAL,GAAc,CAA3B,EAA8BxK,GAAC,IAAI,CAAnC,EAAsCA,GAAC,EAAvC,EAA2C;AACvCqM,UAAAA,MAAM,GAAG2D,IAAI,CAAChQ,GAAD,CAAb;AACAtB,UAAAA,GAAG,GAAGV,CAAC,CAACW,YAAF,CAAeC,OAAf,CAAuByN,MAAvB,CAAN;;AACA,cAAI3N,GAAG,IAAI,CAAX,EAAc;AACVV,YAAAA,CAAC,CAACW,YAAF,CAAeG,MAAf,CAAsBJ,GAAtB,EAA2B,CAA3B;AACH;AACJ;AACJ;AACJ;;AACDV,IAAAA,CAAC,CAACmB,YAAF,GAAiB,IAAjB;;AACAnB,IAAAA,CAAC,CAACjB,YAAF;AACH,GAx/CI;;AAy/CL;;;;;AAKAoT,EAAAA,UA9/CK,sBA8/CMH,IA9/CN,EA8/CY;AACb,QAAI,CAAC,KAAK/Q,WAAL,EAAL,EACI;;AACJ,QAAI,CAACgR,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACtBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACH;;AACD,SAAK,IAAIhQ,CAAC,GAAG,CAAR,EAAWD,GAAG,GAAGiQ,IAAI,CAACxF,MAA3B,EAAmCxK,CAAC,GAAGD,GAAvC,EAA4CC,CAAC,EAA7C,EAAiD;AAC7C,UAAIqM,MAAM,GAAG2D,IAAI,CAAChQ,CAAD,CAAjB;AACA,UAAI/B,IAAI,GAAG,KAAKC,eAAL,CAAqBmO,MAArB,CAAX;;AACA,UAAIpO,IAAJ,EAAU;AACN1D,QAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAAC,KAAKf,WAAN,CAArC,EAAyDS,IAAzD,EAA+DoO,MAAM,GAAG,KAAK7N,eAA7E;AACH;AACJ;AACJ,GA3gDI;;AA4gDL;;;AAGAsP,EAAAA,SA/gDK,uBA+gDO;AACR,QAAI,CAAC,KAAK7O,WAAL,EAAL,EACI;AACJ,SAAKD,QAAL,GAAgB,KAAKA,QAArB;AACH,GAnhDI;;AAohDL;;;;;AAKAd,EAAAA,eAzhDK,2BAyhDWmO,MAzhDX,EAyhDmB;AACpB,SAAK,IAAIrM,CAAC,GAAG,KAAKP,OAAL,CAAa6P,aAAb,GAA6B,CAA1C,EAA6CtP,CAAC,IAAI,CAAlD,EAAqDA,CAAC,EAAtD,EAA0D;AACtD,UAAI,KAAKP,OAAL,CAAagQ,QAAb,CAAsBzP,CAAtB,EAAyBuN,OAAzB,IAAoClB,MAAxC,EACI,OAAO,KAAK5M,OAAL,CAAagQ,QAAb,CAAsBzP,CAAtB,CAAP;AACP;AACJ,GA9hDI;;AA+hDL;;;;AAIAoQ,EAAAA,eAniDK,6BAmiDa;AACd,QAAInS,IAAJ;AACA,QAAI0J,MAAM,GAAG,EAAb;;AACA,SAAK,IAAI3H,CAAC,GAAG,KAAKP,OAAL,CAAa6P,aAAb,GAA6B,CAA1C,EAA6CtP,CAAC,IAAI,CAAlD,EAAqDA,CAAC,EAAtD,EAA0D;AACtD/B,MAAAA,IAAI,GAAG,KAAKwB,OAAL,CAAagQ,QAAb,CAAsBzP,CAAtB,CAAP;;AACA,UAAI,CAAC,KAAK8D,WAAL,CAAiBuM,IAAjB,CAAsB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACzF,EAAF,IAAQ5M,IAAI,CAACsP,OAAjB;AAAA,OAAvB,CAAL,EAAuD;AACnD5F,QAAAA,MAAM,CAAC9I,IAAP,CAAYZ,IAAZ;AACH;AACJ;;AACD,WAAO0J,MAAP;AACH,GA7iDI;AA8iDL;AACA9H,EAAAA,iBA/iDK,+BA+iDe;AAChB,QAAI,KAAKjD,QAAT,EAAmB;AACf,UAAI2T,GAAG,GAAG,KAAKH,eAAL,EAAV;;AACA,WAAK,IAAIpQ,CAAC,GAAGuQ,GAAG,CAAC/F,MAAJ,GAAa,CAA1B,EAA6BxK,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACtC,YAAI/B,IAAI,GAAGsS,GAAG,CAACvQ,CAAD,CAAd,CADsC,CAEtC;;AACA,YAAI,KAAKyN,WAAL,IAAoBxP,IAAI,CAACsP,OAAL,IAAgB,KAAKE,WAAL,CAAiBF,OAAzD,EACI;;AACJ,aAAK5M,KAAL,CAAW6P,GAAX,CAAevS,IAAf;;AACA,aAAK,IAAIwS,CAAC,GAAG,KAAK5M,gBAAL,CAAsB2G,MAAtB,GAA+B,CAA5C,EAA+CiG,CAAC,IAAI,CAApD,EAAuDA,CAAC,EAAxD,EAA4D;AACxD,cAAI,KAAK5M,gBAAL,CAAsB4M,CAAtB,KAA4BxS,IAAI,CAACsP,OAArC,EAA8C;AAC1C,iBAAK1J,gBAAL,CAAsB/E,MAAtB,CAA6B2R,CAA7B,EAAgC,CAAhC;;AACA;AACH;AACJ;AACJ,OAdc,CAef;;AACH,KAhBD,MAgBO;AACH,aAAO,KAAKhR,OAAL,CAAa6P,aAAb,GAA6B,KAAKxS,SAAzC,EAAoD;AAChD,aAAK4T,cAAL,CAAoB,KAAKjR,OAAL,CAAagQ,QAAb,CAAsB,KAAKhQ,OAAL,CAAa6P,aAAb,GAA6B,CAAnD,CAApB;AACH;AACJ;AACJ,GArkDI;AAskDL;AACAoB,EAAAA,cAvkDK,0BAukDUzS,IAvkDV,EAukDgB;AACjB;AACAA,IAAAA,IAAI,CAAC0S,gBAAL;AACA,QAAI1S,IAAI,CAACyC,OAAT,EACIzC,IAAI,CAACyC,OAAL;AACJzC,IAAAA,IAAI,GAAG,IAAP;AACH,GA7kDI;;AA8kDL;;;;AAIA2S,EAAAA,UAllDK,sBAklDMvE,MAllDN,EAklDcwE,QAllDd,EAklDwBC,OAllDxB,EAklDiC;AAClC,QAAI9S,CAAC,GAAG,IAAR;AAEA,QAAI,CAACA,CAAC,CAACiB,WAAF,EAAD,IAAoBjB,CAAC,CAAChB,MAAtB,IAAgC,CAACgB,CAAC,CAACpB,QAAvC,EACI,OAAOrC,EAAE,CAAC2E,KAAH,CAAS,4CAAT,CAAP;AAEJ,QAAIlB,CAAC,CAACgL,aAAN,EACI,OAAOzO,EAAE,CAACwW,IAAH,CAAQ,iDAAR,CAAP;AAEJ,QAAI9S,IAAI,GAAGD,CAAC,CAACE,eAAF,CAAkBmO,MAAlB,CAAX;;AACA,QAAI,CAACpO,IAAL,EAAW;AACP4S,MAAAA,QAAQ,CAACxE,MAAD,CAAR;AACA;AACH;;AACDrO,IAAAA,CAAC,CAACgL,aAAF,GAAkB,IAAlB;AACA,QAAIgI,SAAS,GAAGhT,CAAC,CAAC8F,WAAF,CAAc9F,CAAC,CAAC8F,WAAF,CAAc0G,MAAd,GAAuB,CAArC,EAAwCK,EAAxD;AACA,QAAIoG,eAAe,GAAGhT,IAAI,CAACG,QAAL,CAAcC,QAApC;AACAJ,IAAAA,IAAI,CAACG,QAAL,CAAc8S,OAAd,CAAsBJ,OAAtB,EAA+B,YAAM;AACjC;AACA,UAAIK,KAAJ;;AACA,UAAIH,SAAS,GAAGhT,CAAC,CAAClB,SAAF,GAAc,CAA9B,EAAiC;AAC7BqU,QAAAA,KAAK,GAAGH,SAAS,GAAG,CAApB;AACH;;AACD,UAAIG,KAAK,IAAI,IAAb,EAAmB;AACf,YAAIC,OAAO,GAAGpT,CAAC,CAACqM,YAAF,CAAe8G,KAAf,CAAd;;AACAnT,QAAAA,CAAC,CAAC8F,WAAF,CAAcjF,IAAd,CAAmBuS,OAAnB;AACA,YAAIpT,CAAC,CAACpB,QAAN,EACIoB,CAAC,CAACoN,mBAAF,CAAsBgG,OAAtB,EADJ,KAGIpT,CAAC,CAACiC,oBAAF,CAAuBkR,KAAvB;AACP,OAPD,MAQInT,CAAC,CAAClB,SAAF;;AACJ,UAAIkB,CAAC,CAACP,YAAF,IAAkB/C,YAAY,CAACkD,MAAnC,EAA2C;AACvC,YAAIqT,eAAJ,EAAqB;AACjBjT,UAAAA,CAAC,CAACF,WAAF,GAAgB,CAAC,CAAjB;AACH,SAFD,MAEO,IAAIE,CAAC,CAACF,WAAF,GAAgB,CAAhB,IAAqB,CAAzB,EAA4B;AAC/BE,UAAAA,CAAC,CAACF,WAAF;AACH;AACJ,OAND,MAMO,IAAIE,CAAC,CAACP,YAAF,IAAkB/C,YAAY,CAAC+D,IAA/B,IAAuCT,CAAC,CAACW,YAAF,CAAe6L,MAA1D,EAAkE;AACrE,YAAI9L,GAAG,GAAGV,CAAC,CAACW,YAAF,CAAeC,OAAf,CAAuByN,MAAvB,CAAV,CADqE,CAErE;;AACA,YAAI3N,GAAG,IAAI,CAAX,EAAc;AACVV,UAAAA,CAAC,CAACW,YAAF,CAAeG,MAAf,CAAsBJ,GAAtB,EAA2B,CAA3B;AACH,SALoE,CAMrE;;;AACA,aAAK,IAAIsB,CAAC,GAAGhC,CAAC,CAACW,YAAF,CAAe6L,MAAf,GAAwB,CAArC,EAAwCxK,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;AACjD,cAAI6K,EAAE,GAAG7M,CAAC,CAACW,YAAF,CAAeqB,CAAf,CAAT;AACA,cAAI6K,EAAE,IAAIwB,MAAV,EACIrO,CAAC,CAACW,YAAF,CAAeqB,CAAf;AACP;AACJ;;AACD,UAAIhC,CAAC,CAAC4J,WAAN,EAAmB;AACf,YAAI5J,CAAC,CAAC4J,WAAF,CAAcyE,MAAd,CAAJ,EACI,OAAOrO,CAAC,CAAC4J,WAAF,CAAcyE,MAAd,CAAP;AACJ,YAAIgF,aAAa,GAAG,EAApB;AACA,YAAIzQ,IAAJ;;AACA,aAAK,IAAIiK,GAAT,IAAe7M,CAAC,CAAC4J,WAAjB,EAA8B;AAC1BhH,UAAAA,IAAI,GAAG5C,CAAC,CAAC4J,WAAF,CAAciD,GAAd,CAAP;AACAA,UAAAA,GAAE,GAAGyB,QAAQ,CAACzB,GAAD,CAAb;AACAwG,UAAAA,aAAa,CAACxG,GAAE,IAAIA,GAAE,IAAIwB,MAAN,GAAe,CAAf,GAAmB,CAAvB,CAAH,CAAb,GAA6CzL,IAA7C;AACH;;AACD5C,QAAAA,CAAC,CAAC4J,WAAF,GAAgByJ,aAAhB;AACH,OA7CgC,CA8CjC;;;AACA,UAAIC,GAAG,GAAG,KAAV;AACA,UAAIC,IAAJ,EAAUC,MAAV;;AACA,WAAK,IAAIxR,GAAC,GAAGmR,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBH,SAArC,EAAgDhR,GAAC,IAAIqM,MAAM,GAAG,CAA9D,EAAiErM,GAAC,EAAlE,EAAsE;AAClE/B,QAAAA,IAAI,GAAGD,CAAC,CAACE,eAAF,CAAkB8B,GAAlB,CAAP;;AACA,YAAI/B,IAAJ,EAAU;AACN,cAAIwT,OAAO,GAAGzT,CAAC,CAACqM,YAAF,CAAerK,GAAC,GAAG,CAAnB,CAAd;;AACAuR,UAAAA,IAAI,GAAG,CACH,IAAIhX,EAAE,CAACmX,MAAP,CAAcJ,GAAd,EAAmB,IAAI/W,EAAE,CAAC+O,EAAP,CAAUmI,OAAO,CAACrI,CAAlB,EAAqBqI,OAAO,CAACtI,CAA7B,CAAnB,CADG,CAAP;;AAGA,cAAInJ,GAAC,IAAIqM,MAAM,GAAG,CAAlB,EAAqB;AACjBmF,YAAAA,MAAM,GAAG,IAAT;AACAD,YAAAA,IAAI,CAAC1S,IAAL,CAAU,IAAItE,EAAE,CAACoX,QAAP,CAAgB,YAAM;AAC5B3T,cAAAA,CAAC,CAACgL,aAAF,GAAkB,KAAlB;AACA6H,cAAAA,QAAQ,CAACxE,MAAD,CAAR;AACH,aAHS,CAAV;AAIH;;AACD,cAAIkF,IAAI,CAAC/G,MAAL,GAAc,CAAlB,EACIvM,IAAI,CAACwO,SAAL,CAAe,IAAIlS,EAAE,CAACqX,QAAP,CAAgBL,IAAhB,CAAf,EADJ,KAGItT,IAAI,CAACwO,SAAL,CAAe8E,IAAI,CAAC,CAAD,CAAnB;AACP;AACJ;;AACD,UAAI,CAACC,MAAL,EAAa;AACTxT,QAAAA,CAAC,CAACgL,aAAF,GAAkB,KAAlB;AACA6H,QAAAA,QAAQ,CAACxE,MAAD,CAAR;AACH;AACJ,KAzED,EAyEG,IAzEH;AA0EH,GA7qDI;;AA8qDL;;;;;;;AAOA6B,EAAAA,QArrDK,oBAqrDI7B,MArrDJ,EAqrDYqC,YArrDZ,EAqrD0B5C,MArrD1B,EAqrDkC+F,UArrDlC,EAqrD8C;AAC/C,QAAI7T,CAAC,GAAG,IAAR;AACA,QAAI,CAACA,CAAC,CAACiB,WAAF,EAAL,EACI,OAH2C,CAI/C;;AACA,QAAIyP,YAAY,IAAI,IAApB,EAA4B;AACxBA,MAAAA,YAAY,GAAG,EAAf,CADJ,KAEK,IAAIA,YAAY,GAAG,CAAnB,EACDA,YAAY,GAAG,CAAf;AACJ,QAAIrC,MAAM,GAAG,CAAb,EACIA,MAAM,GAAG,CAAT,CADJ,KAEK,IAAIA,MAAM,IAAIrO,CAAC,CAAClB,SAAhB,EACDuP,MAAM,GAAGrO,CAAC,CAAClB,SAAF,GAAc,CAAvB,CAZ2C,CAa/C;;AACA,QAAI,CAACkB,CAAC,CAACpB,QAAH,IAAeoB,CAAC,CAACiE,OAAjB,IAA4BjE,CAAC,CAACiE,OAAF,CAAUrC,OAA1C,EACI5B,CAAC,CAACiE,OAAF,CAAU6P,YAAV;AAEJ,QAAIhC,GAAG,GAAG9R,CAAC,CAACoO,UAAF,CAAaC,MAAb,CAAV;AACA,QAAI0F,OAAJ,EAAaC,OAAb;;AAEA,YAAQhU,CAAC,CAACuG,cAAV;AACI,WAAK,CAAL;AAAO;AACHwN,QAAAA,OAAO,GAAGjC,GAAG,CAACvF,IAAd;AACA,YAAIuB,MAAM,IAAI,IAAd,EACIiG,OAAO,IAAI/T,CAAC,CAAC6C,IAAF,CAAOmG,KAAP,GAAe8E,MAA1B,CADJ,KAGIiG,OAAO,IAAI/T,CAAC,CAAC6E,QAAb;AACJiN,QAAAA,GAAG,GAAG,IAAIvV,EAAE,CAAC+O,EAAP,CAAUyI,OAAV,EAAmB,CAAnB,CAAN;AACA;;AACJ,WAAK,CAAL;AAAO;AACHA,QAAAA,OAAO,GAAGjC,GAAG,CAACxF,KAAJ,GAAYtM,CAAC,CAAC6C,IAAF,CAAOmG,KAA7B;AACA,YAAI8E,MAAM,IAAI,IAAd,EACIiG,OAAO,IAAI/T,CAAC,CAAC6C,IAAF,CAAOmG,KAAP,GAAe8E,MAA1B,CADJ,KAGIiG,OAAO,IAAI/T,CAAC,CAACyE,SAAb;AACJqN,QAAAA,GAAG,GAAG,IAAIvV,EAAE,CAAC+O,EAAP,CAAUyI,OAAO,GAAG/T,CAAC,CAACyB,OAAF,CAAUuH,KAA9B,EAAqC,CAArC,CAAN;AACA;;AACJ,WAAK,CAAL;AAAO;AACHgL,QAAAA,OAAO,GAAGlC,GAAG,CAACpF,GAAd;AACA,YAAIoB,MAAM,IAAI,IAAd,EACIkG,OAAO,IAAIhU,CAAC,CAAC6C,IAAF,CAAOoG,MAAP,GAAgB6E,MAA3B,CADJ,KAGIkG,OAAO,IAAIhU,CAAC,CAACuE,OAAb;AACJuN,QAAAA,GAAG,GAAG,IAAIvV,EAAE,CAAC+O,EAAP,CAAU,CAAV,EAAa,CAAC0I,OAAd,CAAN;AACA;;AACJ,WAAK,CAAL;AAAO;AACHA,QAAAA,OAAO,GAAGlC,GAAG,CAACrF,MAAJ,GAAazM,CAAC,CAAC6C,IAAF,CAAOoG,MAA9B;AACA,YAAI6E,MAAM,IAAI,IAAd,EACIkG,OAAO,IAAIhU,CAAC,CAAC6C,IAAF,CAAOoG,MAAP,GAAgB6E,MAA3B,CADJ,KAGIkG,OAAO,IAAIhU,CAAC,CAAC2E,UAAb;AACJmN,QAAAA,GAAG,GAAG,IAAIvV,EAAE,CAAC+O,EAAP,CAAU,CAAV,EAAa,CAAC0I,OAAD,GAAWhU,CAAC,CAACyB,OAAF,CAAUwH,MAAlC,CAAN;AACA;AAhCR;;AAkCA,QAAIgL,OAAO,GAAGjU,CAAC,CAACyB,OAAF,CAAUyJ,WAAV,EAAd;AACA+I,IAAAA,OAAO,GAAG7M,IAAI,CAACa,GAAL,CAASjI,CAAC,CAACsJ,SAAF,GAAc2K,OAAO,CAAC9I,CAAtB,GAA0B8I,OAAO,CAAC7I,CAA3C,CAAV;AAEA,QAAI8I,UAAU,GAAGlU,CAAC,CAACsJ,SAAF,GAAcwI,GAAG,CAAC3G,CAAlB,GAAsB2G,GAAG,CAAC1G,CAA3C;AACA,QAAI+I,SAAS,GAAG/M,IAAI,CAACa,GAAL,CAAS,CAACjI,CAAC,CAAC0P,UAAF,IAAgB,IAAhB,GAAuB1P,CAAC,CAAC0P,UAAzB,GAAsCuE,OAAvC,IAAkDC,UAA3D,IAAyE,EAAzF,CA1D+C,CA2D/C;AAEA;;AAEA,QAAIC,SAAJ,EAAe;AACXnU,MAAAA,CAAC,CAAC0P,UAAF,GAAewE,UAAf;AACAlU,MAAAA,CAAC,CAAC+P,eAAF,GAAoB1B,MAApB;AACArO,MAAAA,CAAC,CAACoQ,gBAAF,GAAuB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyB,IAA1B,GAAkCI,YAAvD;;AACA1Q,MAAAA,CAAC,CAAC+D,WAAF,CAAcqQ,cAAd,CAA6BtC,GAA7B,EAAkCpB,YAAlC,EAJW,CAKX;;;AACA1Q,MAAAA,CAAC,CAACiQ,WAAF,GAAgBjQ,CAAC,CAACqU,YAAF,CAAe,YAAM;AACjC,YAAI,CAACrU,CAAC,CAAC2P,gBAAP,EAAyB;AACrB3P,UAAAA,CAAC,CAAC4O,QAAF,GAAa5O,CAAC,CAAC2P,gBAAF,GAAqB,KAAlC;AACH;;AACD3P,QAAAA,CAAC,CAAC0P,UAAF,GACI1P,CAAC,CAAC+P,eAAF,GACI/P,CAAC,CAACoQ,gBAAF,GACIpQ,CAAC,CAACiQ,WAAF,GACI,IAJhB,CAJiC,CASjC;;AACA,YAAI4D,UAAJ,EAAgB;AACZ;AACA,cAAI5T,IAAI,GAAGD,CAAC,CAACE,eAAF,CAAkBmO,MAAlB,CAAX;;AACA,cAAIpO,IAAJ,EAAU;AACNA,YAAAA,IAAI,CAACwO,SAAL,CAAe,IAAIlS,EAAE,CAACmS,QAAP,CACX,IAAInS,EAAE,CAACoS,OAAP,CAAe,EAAf,EAAmB,IAAnB,CADW,EAEX,IAAIpS,EAAE,CAACoS,OAAP,CAAe,EAAf,EAAmB,CAAnB,CAFW,CAAf;AAIH;AACJ;AACJ,OApBe,EAoBb+B,YAAY,GAAG,EApBF,CAAhB;;AAsBA,UAAIA,YAAY,IAAI,CAApB,EAAuB;AACnB1Q,QAAAA,CAAC,CAACjB,YAAF;AACH;AACJ;AACJ,GApxDI;;AAqxDL;;;AAGAsO,EAAAA,gBAxxDK,8BAwxDc;AACf,QAAIrN,CAAC,GAAG,IAAR;AACAA,IAAAA,CAAC,CAACuB,aAAF,GAAkB,IAAlB;AACA,QAAI4M,IAAJ,EAAUmG,MAAV;AAEA,QAAItU,CAAC,CAACpB,QAAN,EACIoB,CAAC,CAACwL,YAAF;AAEJ,QAAIC,IAAJ,EAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,KAA3B;AACAH,IAAAA,IAAI,GAAGzL,CAAC,CAAC6L,OAAT;AACAH,IAAAA,MAAM,GAAG1L,CAAC,CAAC+L,SAAX;AACAJ,IAAAA,OAAO,GAAG3L,CAAC,CAAC8L,UAAZ;AACAF,IAAAA,KAAK,GAAG5L,CAAC,CAACgM,QAAV;AAEA,QAAII,QAAQ,GAAG,KAAf;;AACA,SAAK,IAAIpK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,CAAC,CAACyB,OAAF,CAAU6P,aAAd,IAA+B,CAAClF,QAAhD,EAA0DpK,CAAC,IAAIhC,CAAC,CAACmF,WAAjE,EAA8E;AAC1EgJ,MAAAA,IAAI,GAAG,KAAKvP,QAAL,GAAgB,KAAKkH,WAAL,CAAiB9D,CAAjB,CAAhB,GAAsC,KAAKkM,iBAAL,CAAuBlM,CAAvB,CAA7C;;AACA,UAAImM,IAAJ,EAAU;AACNmG,QAAAA,MAAM,GAAG,KAAKhL,SAAL,GAAkB,CAAC6E,IAAI,CAACzB,GAAL,GAAWyB,IAAI,CAAC1B,MAAjB,IAA2B,CAA7C,GAAmD6H,MAAM,GAAG,CAACnG,IAAI,CAAC5B,IAAL,GAAY4B,IAAI,CAAC7B,KAAlB,IAA2B,CAAhG;;AACA,gBAAQ,KAAK/F,cAAb;AACI,eAAK,CAAL;AAAO;AACH,gBAAI4H,IAAI,CAAC7B,KAAL,IAAcV,KAAlB,EAAyB;AACrB,mBAAKrK,aAAL,GAAqB4M,IAAI,CAACtB,EAA1B;AACA,kBAAIjB,KAAK,GAAG0I,MAAZ,EACI,KAAK/S,aAAL,IAAsB,KAAK4D,WAA3B;AACJiH,cAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,eAAK,CAAL;AAAO;AACH,gBAAI+B,IAAI,CAAC5B,IAAL,IAAab,MAAjB,EAAyB;AACrB,mBAAKnK,aAAL,GAAqB4M,IAAI,CAACtB,EAA1B;AACA,kBAAInB,MAAM,GAAG4I,MAAb,EACI,KAAK/S,aAAL,IAAsB,KAAK4D,WAA3B;AACJiH,cAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,eAAK,CAAL;AAAO;AACH,gBAAI+B,IAAI,CAAC1B,MAAL,IAAehB,IAAnB,EAAyB;AACrB,mBAAKlK,aAAL,GAAqB4M,IAAI,CAACtB,EAA1B;AACA,kBAAIpB,IAAI,GAAG6I,MAAX,EACI,KAAK/S,aAAL,IAAsB,KAAK4D,WAA3B;AACJiH,cAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;;AACJ,eAAK,CAAL;AAAO;AACH,gBAAI+B,IAAI,CAACzB,GAAL,IAAYf,OAAhB,EAAyB;AACrB,mBAAKpK,aAAL,GAAqB4M,IAAI,CAACtB,EAA1B;AACA,kBAAIlB,OAAO,GAAG2I,MAAd,EACI,KAAK/S,aAAL,IAAsB,KAAK4D,WAA3B;AACJiH,cAAAA,QAAQ,GAAG,IAAX;AACH;;AACD;AAhCR;AAkCH;AACJ,KAtDc,CAuDf;AACA;AACA;AACA;AACA;;;AACA+B,IAAAA,IAAI,GAAG,KAAKvP,QAAL,GAAgB,KAAKkH,WAAL,CAAiB,KAAK1D,cAAL,GAAsB,CAAvC,CAAhB,GAA4D,KAAK8L,iBAAL,CAAuB,KAAKpP,SAAL,GAAiB,CAAxC,CAAnE;;AACA,QAAIqP,IAAI,IAAIA,IAAI,CAACtB,EAAL,IAAW7M,CAAC,CAAClB,SAAF,GAAc,CAArC,EAAwC;AACpCwV,MAAAA,MAAM,GAAGtU,CAAC,CAACsJ,SAAF,GAAe,CAAC6E,IAAI,CAACzB,GAAL,GAAWyB,IAAI,CAAC1B,MAAjB,IAA2B,CAA1C,GAAgD6H,MAAM,GAAG,CAACnG,IAAI,CAAC5B,IAAL,GAAY4B,IAAI,CAAC7B,KAAlB,IAA2B,CAA7F;;AACA,cAAQtM,CAAC,CAACuG,cAAV;AACI,aAAK,CAAL;AAAO;AACH,cAAImF,MAAM,GAAG4I,MAAb,EACItU,CAAC,CAACuB,aAAF,GAAkB4M,IAAI,CAACtB,EAAvB;AACJ;;AACJ,aAAK,CAAL;AAAO;AACH,cAAIjB,KAAK,GAAG0I,MAAZ,EACItU,CAAC,CAACuB,aAAF,GAAkB4M,IAAI,CAACtB,EAAvB;AACJ;;AACJ,aAAK,CAAL;AAAO;AACH,cAAIlB,OAAO,GAAG2I,MAAd,EACItU,CAAC,CAACuB,aAAF,GAAkB4M,IAAI,CAACtB,EAAvB;AACJ;;AACJ,aAAK,CAAL;AAAO;AACH,cAAIpB,IAAI,GAAG6I,MAAX,EACItU,CAAC,CAACuB,aAAF,GAAkB4M,IAAI,CAACtB,EAAvB;AACJ;AAhBR;AAkBH,KAjFc,CAkFf;;AACH,GA32DI;AA42DL;AACA8D,EAAAA,OA72DK,mBA62DGD,YA72DH,EA62DiB;AAClB;AACA,QAAI,CAAC,KAAKzP,WAAL,EAAL,EACI;AACJ,QAAIyP,YAAY,IAAI,IAApB,EACIA,YAAY,GAAG,EAAf;AACJ,SAAK6D,QAAL,CAAc,KAAKjT,UAAL,GAAkB,CAAhC,EAAmCoP,YAAnC;AACH,GAp3DI;AAq3DL;AACAE,EAAAA,QAt3DK,oBAs3DIF,YAt3DJ,EAs3DkB;AACnB;AACA,QAAI,CAAC,KAAKzP,WAAL,EAAL,EACI;AACJ,QAAIyP,YAAY,IAAI,IAApB,EACIA,YAAY,GAAG,EAAf;AACJ,SAAK6D,QAAL,CAAc,KAAKjT,UAAL,GAAkB,CAAhC,EAAmCoP,YAAnC;AACH,GA73DI;AA83DL;AACA6D,EAAAA,QA/3DK,oBA+3DIC,OA/3DJ,EA+3Da9D,YA/3Db,EA+3D2B;AAC5B,QAAI1Q,CAAC,GAAG,IAAR;AACA,QAAI,CAACA,CAAC,CAACiB,WAAF,EAAL,EACI;AACJ,QAAIjB,CAAC,CAAChC,UAAF,IAAgBvB,SAAS,CAACgC,IAA9B,EACI,OAAOlC,EAAE,CAAC2E,KAAH,CAAS,mEAAT,CAAP;AACJ,QAAIsT,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAIxU,CAAC,CAAClB,SAAhC,EACI;AACJ,QAAIkB,CAAC,CAACsB,UAAF,IAAgBkT,OAApB,EACI,OATwB,CAU5B;;AACAxU,IAAAA,CAAC,CAACsB,UAAF,GAAekT,OAAf;;AACA,QAAIxU,CAAC,CAACtB,eAAN,EAAuB;AACnBnC,MAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAACP,CAAC,CAACtB,eAAH,CAArC,EAA0D8V,OAA1D;AACH;;AACDxU,IAAAA,CAAC,CAACkQ,QAAF,CAAWsE,OAAX,EAAoB9D,YAApB;AACH,GA/4DI;AAg5DL;AACA+D,EAAAA,cAj5DK,0BAi5DUzT,QAj5DV,EAi5DoB;AACrB,QAAIhB,CAAC,GAAG,IAAR;AACA,QAAI,CAACA,CAAC,CAACiB,WAAF,EAAL,EACI;AACJ,QAAI,CAACjB,CAAC,CAACwC,QAAP,EACI,OAAOjG,EAAE,CAAC2E,KAAH,CAAS,sBAAT,CAAP;AACJ,QAAI,CAAClB,CAAC,CAACR,WAAP,EACI,OAAOjD,EAAE,CAAC2E,KAAH,CAAS,qBAAT,CAAP;AACJlB,IAAAA,CAAC,CAAC4J,WAAF,GAAgB,EAAhB;AACA,QAAI8K,IAAI,GAAGnY,EAAE,CAACkJ,WAAH,CAAezF,CAAC,CAACwC,QAAjB,CAAX;AACAxC,IAAAA,CAAC,CAACyB,OAAF,CAAUyP,QAAV,CAAmBwD,IAAnB;;AACA,SAAK,IAAI1S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,QAApB,EAA8BgB,CAAC,EAA/B,EAAmC;AAC/BzF,MAAAA,EAAE,CAACK,SAAH,CAAa+B,YAAb,CAA0B4B,UAA1B,CAAqC,CAACP,CAAC,CAACR,WAAH,CAArC,EAAsDkV,IAAtD,EAA4D1S,CAA5D;;AACA,UAAI0S,IAAI,CAACzL,MAAL,IAAejJ,CAAC,CAAC8I,SAAF,CAAYG,MAA3B,IAAqCyL,IAAI,CAAC1L,KAAL,IAAchJ,CAAC,CAAC8I,SAAF,CAAYE,KAAnE,EAA0E;AACtEhJ,QAAAA,CAAC,CAAC4J,WAAF,CAAc5H,CAAd,IAAmBhC,CAAC,CAACsJ,SAAF,GAAcoL,IAAI,CAACzL,MAAnB,GAA4ByL,IAAI,CAAC1L,KAApD;AACH;AACJ;;AACD,QAAI,CAAC2L,MAAM,CAACC,IAAP,CAAY5U,CAAC,CAAC4J,WAAd,EAA2B4C,MAAhC,EACIxM,CAAC,CAAC4J,WAAF,GAAgB,IAAhB;AACJ8K,IAAAA,IAAI,CAAC/B,gBAAL;AACA,QAAI+B,IAAI,CAAChS,OAAT,EACIgS,IAAI,CAAChS,OAAL;AACJ,WAAO1C,CAAC,CAAC4J,WAAT;AACH;AAx6DI,CAAT","sourceRoot":"/","sourcesContent":["/******************************************\r\n * @author kL <klk0@qq.com>\r\n * @date 2019/1/5\r\n * @doc List component.\r\n * @end\r\n ******************************************/\r\nconst TemplateType = cc.Enum({\r\n    'NODE': 1,\r\n    'PREFAB': 2,\r\n});\r\nconst SlideType = cc.Enum({\r\n    'NORMAL': 1,    //Normal\r\n    'ADHERING': 2,  //Sticky mode that will force off rolling inertia\r\n    'PAGE': 3,      //Page mode, which will force the scroll inertia off\r\n});\r\nconst SelectedType = cc.Enum({\r\n    'NONE'  : 0,\r\n    'SINGLE': 1, //Single choice\r\n    'MULT'  : 2, //Multiple choice\r\n});\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        disallowMultiple: false,\r\n        menu: 'Custom component / List',\r\n        requireComponent: cc.ScrollView,\r\n        // The execution priority of the script lifecycle callback. Scripts less than 0 are executed first, and scripts greater than 0 are executed last. This priority is only valid for onLoad, onEnable, start, update and lateUpdate, and not for onDisable and onDestroy。\r\n        executionOrder: -5000,\r\n    },\r\n\r\n    properties: {\r\n        templateType: {\r\n            default: TemplateType.NODE,\r\n            type: TemplateType,\r\n        },\r\n        tmpNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: CC_DEV && 'Item template, type: cc.Node',\r\n            visible: function () {\r\n                let bool = this.templateType == TemplateType.NODE;\r\n                if (!bool)\r\n                    this.tmpNode = null;\r\n                return bool;\r\n            }\r\n        },\r\n        tmpPrefab: {\r\n            default: null,\r\n            type: cc.Prefab,\r\n            tooltip: CC_DEV && 'Item template, type: cc.Prefab',\r\n            visible: function () {\r\n                let bool = this.templateType == TemplateType.PREFAB;\r\n                if (!bool)\r\n                    this.tmpPrefab = null;\r\n                return bool;\r\n            }\r\n        },\r\n        _slideMode: 1,\r\n        slideMode: {\r\n            type: SlideType,\r\n            tooltip: CC_DEV && 'Sliding mode',\r\n            get: function () {\r\n                return this._slideMode;\r\n            },\r\n            set: function (val) {\r\n                if (val != null)\r\n                    this._slideMode = val;\r\n            }\r\n        },\r\n        pageDistance: {\r\n            default: .3,\r\n            type: cc.Float,\r\n            range: [0, 1, .1],\r\n            tooltip: CC_DEV && 'Page turning distance',\r\n            slide: true,\r\n            visible: function () {\r\n                return this._slideMode == SlideType.PAGE;\r\n            },\r\n        },\r\n        pageChangeEvent: {\r\n            default: null,\r\n            type: cc.Component.EventHandler,\r\n            tooltip: CC_DEV && 'Page change event',\r\n            visible: function () {\r\n                let bool = this._slideMode == SlideType.PAGE;\r\n                if (!bool)\r\n                    this.pageChangeEvent = null;\r\n                return bool;\r\n            },\r\n        },\r\n        _virtual: true,\r\n        virtual: {\r\n            tooltip: CC_DEV && 'Whether it is a virtual list (dynamic list)',\r\n            get() {\r\n                return this._virtual;\r\n            },\r\n            set(val) {\r\n                if (val != null)\r\n                    this._virtual = val;\r\n                if (!CC_DEV && this._numItems != 0) {\r\n                    this._onScrolling();\r\n                }\r\n            }\r\n        },\r\n        cyclic: {\r\n            default: false,\r\n            tooltip: CC_DEV && 'Whether it is a circular list',\r\n            visible: function () {\r\n                let val = this.virtual && this.slideMode == SlideType.NORMAL;\r\n                if (!val)\r\n                    this.cyclic = false;\r\n                return val;\r\n            },\r\n        },\r\n        lackCenter: {\r\n            default: false,\r\n            tooltip: CC_DEV && 'When the number of items is not enough to fill the Content, whether to display the items in the center (Grid layout is not supported)',\r\n            visible: function () {\r\n                return this.virtual;\r\n            }\r\n        },\r\n        lackSlide: {\r\n            default: false,\r\n            tooltip: CC_DEV && 'Whether the number of items is sufficient to fill the content',\r\n            visible: function () {\r\n                let val = this.virtual && !this.lackCenter;\r\n                if (!val)\r\n                    this.lackSlide = false;\r\n                return val;\r\n            }\r\n        },\r\n        _updateRate: 0,\r\n        updateRate: {\r\n            type: cc.Integer,\r\n            range: [0, 6, 1],\r\n            tooltip: CC_DEV && 'Refresh frequency (the larger the value, the lower the refresh frequency and the higher the performance)',\r\n            slide: true,\r\n            get() {\r\n                return this._updateRate;\r\n            },\r\n            set(val) {\r\n                if (val >= 0 && val <= 6) {\r\n                    this._updateRate = val;\r\n                }\r\n            }\r\n        },\r\n        frameByFrameRenderNum: {\r\n            default: 0,\r\n            type: cc.Integer,\r\n            range: [0, 12, 1],\r\n            tooltip: CC_DEV && 'When rendering frame by frame, the number of items rendered per frame (frame rendering is turned off when <= 0)',\r\n            slide: true,\r\n        },\r\n        renderEvent: {\r\n            default: null,\r\n            type: cc.Component.EventHandler,\r\n            tooltip: CC_DEV && 'Rendering event (renderer)',\r\n        },\r\n        selectedMode: {\r\n            default: SelectedType.NONE,\r\n            type: SelectedType,\r\n            tooltip: CC_DEV && 'Select mode',\r\n        },\r\n        repeatEventSingle: {\r\n            default: false,\r\n            tooltip: CC_DEV && 'Whether to repeatedly respond to radio events',\r\n            visible: function () {\r\n                return this.selectedMode == SelectedType.SINGLE;\r\n            }\r\n        },\r\n        selectedEvent: {\r\n            default: null,\r\n            type: cc.Component.EventHandler,\r\n            tooltip: CC_DEV && 'Trigger selection event',\r\n            visible: function () {\r\n                let bool = this.selectedMode > 0;\r\n                if (!bool)\r\n                    this.selectedEvent = null;\r\n                return bool;\r\n            },\r\n        },\r\n        _selectedId: -1,\r\n        selectedId: {\r\n            visible: false,\r\n            get: function () {\r\n                return this._selectedId;\r\n            },\r\n            set: function (val) {\r\n                let t = this;\r\n                let item;\r\n                switch (t.selectedMode) {\r\n                    case SelectedType.SINGLE: {\r\n                        if (!t.repeatEventSingle && val == t._selectedId)\r\n                            return;\r\n                        item = t.getItemByListId(val);\r\n                        // if (!item && val >= 0)\r\n                        //     return;\r\n                        if (t._selectedId >= 0)\r\n                            t._lastSelectedId = t._selectedId;\r\n                        else //If it is less than 0, cancel the selection. Leave _lastSelectedId empty, and change it if you have special needs in the future.\r\n                            t._lastSelectedId = null;\r\n                        t._selectedId = val;\r\n                        if (item)\r\n                            item.listItem.selected = true;\r\n                        if (t._lastSelectedId >= 0 && t._lastSelectedId != t._selectedId) {\r\n                            let lastItem = t.getItemByListId(t._lastSelectedId);\r\n                            if (lastItem) {\r\n                                lastItem.listItem.selected = false;\r\n                            }\r\n                        }\r\n                        if (t.selectedEvent) {\r\n                            cc.Component.EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems));\r\n                        }\r\n                        break;\r\n                    }\r\n                    case SelectedType.MULT: {\r\n                        item = t.getItemByListId(val);\r\n                        if (!item)\r\n                            return;\r\n                        if (t._selectedId >= 0)\r\n                            t._lastSelectedId = t._selectedId;\r\n                        t._selectedId = val;\r\n                        let bool = !item.listItem.selected;\r\n                        item.listItem.selected = bool;\r\n                        let sub = t.multSelected.indexOf(val);\r\n                        if (bool && sub < 0) {\r\n                            t.multSelected.push(val);\r\n                        } else if (!bool && sub >= 0) {\r\n                            t.multSelected.splice(sub, 1);\r\n                        }\r\n                        if (t.selectedEvent) {\r\n                            cc.Component.EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems), bool);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        _numItems: {\r\n            default: 0,\r\n            serializable: false,\r\n        },\r\n        numItems: {\r\n            visible: false,\r\n            get() {\r\n                return this._actualNumItems;\r\n            },\r\n            set(val) {\r\n                let t = this;\r\n                if (!t.checkInited())\r\n                    return;\r\n                if (val == null || val < 0) {\r\n                    cc.error('numItems set the wrong::', val);\r\n                    return;\r\n                }\r\n                t._actualNumItems = t._numItems = val;\r\n                t._forceUpdate = true;\r\n\r\n                if (t._virtual) {\r\n                    t._resizeContent();\r\n                    if (t.cyclic) {\r\n                        t._numItems = t._cyclicNum * t._numItems;\r\n                    }\r\n                    t._onScrolling();\r\n                    if (!t.frameByFrameRenderNum && t.slideMode == SlideType.PAGE)\r\n                        t.curPageNum = t.nearestListId;\r\n                } else {\r\n                    let layout = t.content.getComponent(cc.Layout);\r\n                    if (layout) {\r\n                        layout.enabled = true;\r\n                    }\r\n                    t._delRedundantItem();\r\n\r\n                    t.firstListId = 0;\r\n                    if (t.frameByFrameRenderNum > 0) {\r\n                        //Render a few first\r\n                        let len = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum;\r\n                        for (let n = 0; n < len; n++) {\r\n                            t._createOrUpdateItem2(n);\r\n                        }\r\n                        if (t.frameByFrameRenderNum < t._numItems) {\r\n                            t._updateCounter = t.frameByFrameRenderNum;\r\n                            t._updateDone = false;\r\n                        }\r\n                    } else {\r\n                        for (let n = 0; n < val; n++) {\r\n                            t._createOrUpdateItem2(n);\r\n                        }\r\n                        t.displayItemNum = val;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n\r\n    onLoad() {\r\n        this._init();\r\n    },\r\n\r\n    onDestroy() {\r\n        let t = this;\r\n        if (t._itemTmp && t._itemTmp.isValid)\r\n            t._itemTmp.destroy();\r\n        if (t.tmpNode && t.tmpNode.isValid)\r\n            t.tmpNode.destroy();\r\n        // let total = t._pool.size();\r\n        while (t._pool.size()) {\r\n            let node = t._pool.get();\r\n            node.destroy();\r\n        }\r\n        // if (total)\r\n        //     cc.log('-----------------' + t.node.name + '<List> destroy node total num. =>', total);\r\n    },\r\n\r\n    onEnable() {\r\n        // if (!CC_EDITOR)\r\n        this._registerEvent();\r\n        this._init();\r\n    },\r\n\r\n    onDisable() {\r\n        // if (!CC_EDITOR)\r\n        this._unregisterEvent();\r\n    },\r\n    //Registration Event\r\n    _registerEvent() {\r\n        let t = this;\r\n        t.node.on(cc.Node.EventType.TOUCH_START, t._onTouchStart, t, true);\r\n        t.node.on('touch-up', t._onTouchUp, t, true);\r\n        t.node.on(cc.Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\r\n        t.node.on('scroll-began', t._onScrollBegan, t, true);\r\n        t.node.on('scroll-ended', t._onScrollEnded, t, true);\r\n        t.node.on('scrolling', t._onScrolling, t, true);\r\n        t.node.on(cc.Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    },\r\n    //Unregister Event\r\n    _unregisterEvent() {\r\n        let t = this;\r\n        t.node.off(cc.Node.EventType.TOUCH_START, t._onTouchStart, t, true);\r\n        t.node.off('touch-up', t._onTouchUp, t, true);\r\n        t.node.off(cc.Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\r\n        t.node.off('scroll-began', t._onScrollBegan, t, true);\r\n        t.node.off('scroll-ended', t._onScrollEnded, t, true);\r\n        t.node.off('scrolling', t._onScrolling, t, true);\r\n        t.node.off(cc.Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    },\r\n    //Initialize various:\r\n    _init() {\r\n        let t = this;\r\n        if (t._inited)\r\n            return;\r\n\r\n        t._scrollView = t.node.getComponent(cc.ScrollView);\r\n\r\n        t.content = t._scrollView.content;\r\n        if (!t.content) {\r\n            cc.error(t.node.name + \"'s cc.ScrollView unset content!\");\r\n            return;\r\n        }\r\n\r\n        t._layout       = t.content.getComponent(cc.Layout);\r\n\r\n        t._align        = t._layout.type; //Arrange mode\r\n        t._resizeMode   = t._layout.resizeMode; // Adaptive Mode\r\n        t._startAxis    = t._layout.startAxis;\r\n\r\n        t._topGap       = t._layout.paddingTop;       //Top margin\r\n        t._rightGap     = t._layout.paddingRight;   //Right margin\r\n        t._bottomGap    = t._layout.paddingBottom; //Bottom margin\r\n        t._leftGap      = t._layout.paddingLeft;     //Left margin\r\n\r\n        t._columnGap    = t._layout.spacingX;      //Column spacing\r\n        t._lineGap      = t._layout.spacingY;        //Line spacing\r\n\r\n        t._colLineNum; //Number of columns or rows (= 1 for non-GRID mode, which means single column or single row);\r\n\r\n        t._verticalDir   = t._layout.verticalDirection; //Orientation of child nodes vertically\r\n        t._horizontalDir = t._layout.horizontalDirection; //Orient the children horizontally\r\n\r\n        t.setTemplateItem(cc.instantiate(t.templateType == TemplateType.PREFAB ? t.tmpPrefab : t.tmpNode));\r\n\r\n        // Specific sliding mode processing\r\n        if (t._slideMode == SlideType.ADHERING || t._slideMode == SlideType.PAGE) {\r\n            t._scrollView.inertia = false;\r\n            t._scrollView._onMouseWheel = function () {\r\n                return;\r\n            };\r\n        }\r\n        if (!t.virtual)         // lackCenter only supports Virtual mode\r\n            t.lackCenter    = false;\r\n\r\n        t._lastDisplayData  = [];//Last refreshed data\r\n        t.displayData       = [];     //Current data\r\n        t._pool             = new cc.NodePool();    //This is a pool ...\r\n        t._forceUpdate      = false; //Whether to force updates\r\n        t._updateCounter    = 0;   //Framed Rendering Frames\r\n        t._updateDone       = true;   //Whether framed rendering is complete\r\n        t.curPageNum        = 0;   //Current page number\r\n\r\n        if (t.cyclic) { // If it is a loop list, override some cc.ScrollView functions\r\n            t._scrollView._processAutoScrolling = this._processAutoScrolling.bind(t);\r\n            t._scrollView._startBounceBackIfNeeded = function () {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        switch (t._align) {\r\n            case cc.Layout.Type.HORIZONTAL: {\r\n                switch (t._horizontalDir) {\r\n                    case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                        t._alignCalcType = 1;\r\n                        break;\r\n                    case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                        t._alignCalcType = 2;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.VERTICAL: {\r\n                switch (t._verticalDir) {\r\n                    case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                        t._alignCalcType = 3;\r\n                        break;\r\n                    case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                        t._alignCalcType = 4;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.GRID: {\r\n                switch (t._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL:\r\n                        switch (t._verticalDir) {\r\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                                t._alignCalcType = 3;\r\n                                break;\r\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                                t._alignCalcType = 4;\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case cc.Layout.AxisDirection.VERTICAL:\r\n                        switch (t._horizontalDir) {\r\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                                t._alignCalcType = 1;\r\n                                break;\r\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                                t._alignCalcType = 2;\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // // Clear content\r\n        // t.content.children.forEach(child => {\r\n        //     child.removeFromParent();\r\n        //     if (child.isValid)\r\n        //         child.destroy();\r\n        // });\r\n        t.content.removeAllChildren();\r\n        t._inited = true;\r\n    },\r\n    /**\r\n     * In order to implement a circular list, some functions of cc.ScrollView must be overridden\r\n     * @param {Number} dt\r\n     */\r\n    _processAutoScrolling(dt) {\r\n        // let isAutoScrollBrake = this._scrollView._isNecessaryAutoScrollBrake();\r\n        let brakingFactor = 1;\r\n        this._scrollView._autoScrollAccumulatedTime += dt * (1 / brakingFactor);\r\n\r\n        let percentage = Math.min(1, this._scrollView._autoScrollAccumulatedTime / this._scrollView._autoScrollTotalTime);\r\n        if (this._scrollView._autoScrollAttenuate) {\r\n            let time = percentage - 1;\r\n            percentage = time * time * time * time * time + 1;\r\n        }\r\n\r\n        let newPosition = this._scrollView._autoScrollStartPosition.add(this._scrollView._autoScrollTargetDelta.mul(percentage));\r\n        let EPSILON = this._scrollView.getScrollEndedEventTiming();\r\n        let reachedEnd = Math.abs(percentage - 1) <= EPSILON;\r\n        // cc.log(reachedEnd, Math.abs(percentage - 1), EPSILON)\r\n\r\n        let fireEvent = Math.abs(percentage - 1) <= this._scrollView.getScrollEndedEventTiming();\r\n        if (fireEvent && !this._scrollView._isScrollEndedWithThresholdEventFired) {\r\n            this._scrollView._dispatchEvent('scroll-ended-with-threshold');\r\n            this._scrollView._isScrollEndedWithThresholdEventFired = true;\r\n        }\r\n\r\n        // if (this._scrollView.elastic && !reachedEnd) {\r\n        //     let brakeOffsetPosition = newPosition.sub(this._scrollView._autoScrollBrakingStartPosition);\r\n        //     if (isAutoScrollBrake) {\r\n        //         brakeOffsetPosition = brakeOffsetPosition.mul(brakingFactor);\r\n        //     }\r\n        //     newPosition = this._scrollView._autoScrollBrakingStartPosition.add(brakeOffsetPosition);\r\n        // } else {\r\n        //     let moveDelta = newPosition.sub(this._scrollView.getContentPosition());\r\n        //     let outOfBoundary = this._scrollView._getHowMuchOutOfBoundary(moveDelta);\r\n        //     if (!outOfBoundary.fuzzyEquals(cc.v2(0, 0), EPSILON)) {\r\n        //         newPosition = newPosition.add(outOfBoundary);\r\n        //         reachedEnd = true;\r\n        //     }\r\n        // }\r\n\r\n        if (reachedEnd) {\r\n            this._scrollView._autoScrolling = false;\r\n        }\r\n\r\n        let deltaMove = newPosition.sub(this._scrollView.getContentPosition());\r\n        // cc.log(deltaMove)\r\n        this._scrollView._moveContent(this._scrollView._clampDelta(deltaMove), reachedEnd);\r\n        this._scrollView._dispatchEvent('scrolling');\r\n\r\n        // scollTo API controll move\r\n        if (!this._scrollView._autoScrolling) {\r\n            this._scrollView._isBouncing = false;\r\n            this._scrollView._scrolling = false;\r\n            this._scrollView._dispatchEvent('scroll-ended');\r\n        }\r\n    },\r\n    //Set template Item\r\n    setTemplateItem(item) {\r\n        if (!item)\r\n            return;\r\n        let t = this;\r\n        t._itemTmp = item;\r\n\r\n        if (t._resizeMode == cc.Layout.ResizeMode.CHILDREN)\r\n            t._itemSize = t._layout.cellSize;\r\n        else\r\n            t._itemSize = new cc.size(item.width, item.height);\r\n\r\n        //Get ListItem, or deselect mode if not\r\n        let com = item.getComponent(item.name);\r\n        let remove = false;\r\n        if (!com)\r\n            remove = true;\r\n        // if (com) {\r\n        //     if (!com._btnCom && !item.getComponent(cc.Button)) {\r\n        //         remove = true;\r\n        //     }\r\n        // }\r\n        if (remove) {\r\n            t.selectedMode = SelectedType.NONE;\r\n        }\r\n        com = item.getComponent(cc.Widget);\r\n        if (com && com.enabled) {\r\n            t._needUpdateWidget = true;\r\n        }\r\n        if (t.selectedMode == SelectedType.MULT)\r\n            t.multSelected = [];\r\n\r\n        switch (t._align) {\r\n            case cc.Layout.Type.HORIZONTAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = false;\r\n                break;\r\n            case cc.Layout.Type.VERTICAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = true;\r\n                break;\r\n            case cc.Layout.Type.GRID:\r\n                switch (t._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL:\r\n                        //计算列数\r\n                        let trimW = t.content.width - t._leftGap - t._rightGap;\r\n                        t._colLineNum = Math.floor((trimW + t._columnGap) / (t._itemSize.width + t._columnGap));\r\n                        t._sizeType = true;\r\n                        break;\r\n                    case cc.Layout.AxisDirection.VERTICAL:\r\n                        //计算行数\r\n                        let trimH = t.content.height - t._topGap - t._bottomGap;\r\n                        t._colLineNum = Math.floor((trimH + t._lineGap) / (t._itemSize.height + t._lineGap));\r\n                        t._sizeType = false;\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    /**\r\n     * Check if initialized\r\n     * @param {Boolean} printLog Whether to print error messages\r\n     * @returns\r\n     */\r\n    checkInited(printLog) {\r\n        printLog = printLog == null ? true : printLog;\r\n        if (!this._inited) {\r\n            if (printLog) {\r\n                cc.error('List initialization not completed!');\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    //Disable Layout component and calculate Content size by yourself\r\n    _resizeContent() {\r\n        let t = this;\r\n        let result;\r\n        switch (t._align) {\r\n            case cc.Layout.Type.HORIZONTAL: {\r\n                if (t._customSize) {\r\n                    let fixed = t._getFixedSize();\r\n                    result = t._leftGap + fixed.val + (t._itemSize.width * (t._numItems - fixed.count)) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                } else {\r\n                    result = t._leftGap + (t._itemSize.width * t._numItems) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.VERTICAL: {\r\n                if (t._customSize) {\r\n                    let fixed = t._getFixedSize();\r\n                    result = t._topGap + fixed.val + (t._itemSize.height * (t._numItems - fixed.count)) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                } else {\r\n                    result = t._topGap + (t._itemSize.height * t._numItems) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.GRID: {\r\n                //Grid mode does not support centering\r\n                if (t.lackCenter)\r\n                    t.lackCenter = false;\r\n                switch (t._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL:\r\n                        let lineNum = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._topGap + (t._itemSize.height * lineNum) + (t._lineGap * (lineNum - 1)) + t._bottomGap;\r\n                        break;\r\n                    case cc.Layout.AxisDirection.VERTICAL:\r\n                        let colNum = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._leftGap + (t._itemSize.width * colNum) + (t._columnGap * (colNum - 1)) + t._rightGap;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let layout = t.content.getComponent(cc.Layout);\r\n        if (layout)\r\n            layout.enabled = false;\r\n\r\n        t._allItemSize = result;\r\n        t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? (t._topGap + t._bottomGap) : (t._leftGap + t._rightGap));\r\n\r\n        if (t.cyclic) {\r\n            let totalSize = (t._sizeType ? t.node.height : t.node.width);\r\n\r\n            t._cyclicPos1 = 0;\r\n            totalSize -= t._cyclicPos1;\r\n            t._cyclicNum = Math.ceil(totalSize / t._allItemSizeNoEdge) + 1;\r\n            let spacing = t._sizeType ? t._lineGap : t._columnGap;\r\n            t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + spacing;\r\n            t._cyclicAllItemSize = t._allItemSize + (t._allItemSizeNoEdge * (t._cyclicNum - 1)) + (spacing * (t._cyclicNum - 1));\r\n            t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;\r\n            t._cycilcAllItemSizeNoEdge += spacing * (t._cyclicNum - 1);\r\n            // cc.log('_cyclicNum ->', t._cyclicNum, t._allItemSizeNoEdge, t._allItemSize, t._cyclicPos1, t._cyclicPos2);\r\n        }\r\n\r\n        t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);\r\n        let slideOffset = ((!t._lack || !t.lackCenter) && t.lackSlide) ? 0 : .1;\r\n\r\n        let targetWH = t._lack ? ((t._sizeType ? t.node.height : t.node.width) - slideOffset) : (t.cyclic ? t._cyclicAllItemSize : t._allItemSize);\r\n        if (targetWH < 0)\r\n            targetWH = 0;\r\n\r\n        if (t._sizeType) {\r\n            t.content.height = targetWH;\r\n        } else {\r\n            t.content.width = targetWH;\r\n        }\r\n        // cc.log('_resizeContent()  numItems =', t._numItems, '，content =', t.content);\r\n    },\r\n    //While scrolling ...\r\n    _onScrolling(ev) {\r\n        if (this.frameCount == null)\r\n            this.frameCount = this._updateRate;\r\n        if (!this._forceUpdate && (ev && ev.type != 'scroll-ended') && this.frameCount > 0) {\r\n            this.frameCount--;\r\n            return;\r\n        } else\r\n            this.frameCount = this._updateRate;\r\n\r\n        if (this._aniDelRuning)\r\n            return;\r\n\r\n        //循环列表处理\r\n        if (this.cyclic) {\r\n            let scrollPos = this.content.getPosition();\r\n            scrollPos = this._sizeType ? scrollPos.y : scrollPos.x;\r\n\r\n            let addVal = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap);\r\n            let add = this._sizeType ? cc.v2(0, addVal) : cc.v2(addVal, 0);\r\n\r\n            switch (this._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        this.content.x = -this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos += add;\r\n                        // }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        this.content.x = -this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos -= add;\r\n                        // }\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        this.content.x = this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        this.content.x = this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        this.content.y = this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        this.content.y = this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        this.content.y = -this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\r\n                        }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        this.content.y = -this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this._calcViewPos();\r\n\r\n        let vTop, vRight, vBottom, vLeft;\r\n        if (this._sizeType) {\r\n            vTop = this.viewTop;\r\n            vBottom = this.viewBottom;\r\n        } else {\r\n            vRight = this.viewRight;\r\n            vLeft = this.viewLeft;\r\n        }\r\n\r\n        if (this._virtual) {\r\n            this.displayData = [];\r\n            let itemPos;\r\n\r\n            let curId = 0;\r\n            let endId = this._numItems - 1;\r\n\r\n            if (this._customSize) {\r\n                let breakFor = false;\r\n                //If the item's position is within the visible area, push it in displayData\r\n                for (; curId <= endId && !breakFor; curId++) {\r\n                    itemPos = this._calcItemPos(curId);\r\n                    switch (this._align) {\r\n                        case cc.Layout.Type.HORIZONTAL:\r\n                            if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case cc.Layout.Type.VERTICAL:\r\n                            if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case cc.Layout.Type.GRID:\r\n                            switch (this._startAxis) {\r\n                                case cc.Layout.AxisDirection.HORIZONTAL:\r\n                                    if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                                case cc.Layout.AxisDirection.VERTICAL:\r\n                                    if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                let ww = this._itemSize.width + this._columnGap;\r\n                let hh = this._itemSize.height + this._lineGap;\r\n                switch (this._alignCalcType) {\r\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                        curId = (vLeft + this._leftGap) / ww;\r\n                        endId = (vRight + this._rightGap) / ww;\r\n                        break;\r\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                        curId = (-vRight - this._rightGap) / ww;\r\n                        endId = (-vLeft - this._leftGap) / ww;\r\n                        break;\r\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                        curId = (-vTop - this._topGap) / hh;\r\n                        endId = (-vBottom - this._bottomGap) / hh;\r\n                        break;\r\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                        curId = (vBottom + this._bottomGap) / hh;\r\n                        endId = (vTop + this._topGap) / hh;\r\n                        break;\r\n                }\r\n                curId = Math.floor(curId) * this._colLineNum;\r\n                endId = Math.ceil(endId) * this._colLineNum;\r\n                endId--;\r\n                if (curId < 0)\r\n                    curId = 0;\r\n                if (endId >= this._numItems)\r\n                    endId = this._numItems - 1;\r\n                // cc.log(curId, endId);\r\n                for (; curId <= endId; curId++) {\r\n                    this.displayData.push(this._calcItemPos(curId));\r\n                }\r\n            }\r\n            this._delRedundantItem();\r\n            if (this.displayData.length <= 0 || !this._numItems) { //if none, delete all.\r\n                this._lastDisplayData = [];\r\n                return;\r\n            }\r\n            this.firstListId = this.displayData[0].id;\r\n            this.displayItemNum = this.displayData.length;\r\n\r\n            let len = this._lastDisplayData.length;\r\n            let haveDataChange = this.displayItemNum != len;\r\n            if (haveDataChange) {\r\n                // 如果是逐帧渲染，需要排序\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    this._lastDisplayData.sort((a, b) => { return a - b });\r\n                }\r\n                // 因List的显示数据是有序的，所以只需要判断数组长度是否相等，以及头、尾两个元素是否相等即可。\r\n                haveDataChange = this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[len - 1];\r\n            }\r\n\r\n            if (this._forceUpdate || haveDataChange) {    //如果是强制更新\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    // if (this._updateDone) {\r\n                    // this._lastDisplayData = [];\r\n                    //逐帧渲染\r\n                    if (this._numItems > 0) {\r\n                        if (!this._updateDone) {\r\n                            this._doneAfterUpdate = true;\r\n                        } else {\r\n                            this._updateCounter = 0;\r\n                        }\r\n                        this._updateDone = false;\r\n                    } else {\r\n                        this._updateCounter = 0;\r\n                        this._updateDone = true;\r\n                    }\r\n                    // }\r\n                } else {\r\n                    //直接渲染\r\n                    this._lastDisplayData = [];\r\n                    // cc.log('List Display Data II::', this.displayData);\r\n                    for (let c = 0; c < this.displayItemNum; c++) {\r\n                        this._createOrUpdateItem(this.displayData[c]);\r\n                    }\r\n                    this._forceUpdate = false;\r\n                }\r\n            }\r\n            this._calcNearestItem();\r\n        }\r\n    },\r\n    //Calculate View Position\r\n    _calcViewPos() {\r\n        let scrollPos = this.content.getPosition();\r\n        switch (this._alignCalcType) {\r\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                this.elasticLeft = scrollPos.x > 0 ? scrollPos.x : 0;\r\n                this.viewLeft = (scrollPos.x < 0 ? -scrollPos.x : 0) - this.elasticLeft;\r\n                this.viewRight = this.viewLeft + this.node.width;\r\n                this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;\r\n                this.viewRight += this.elasticRight;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                this.elasticRight = scrollPos.x < 0 ? -scrollPos.x : 0;\r\n                this.viewRight = (scrollPos.x > 0 ? -scrollPos.x : 0) + this.elasticRight;\r\n                this.viewLeft = this.viewRight - this.node.width;\r\n                this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;\r\n                this.viewLeft -= this.elasticLeft;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                this.elasticTop = scrollPos.y < 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewTop = (scrollPos.y > 0 ? -scrollPos.y : 0) + this.elasticTop;\r\n                this.viewBottom = this.viewTop - this.node.height;\r\n                this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;\r\n                this.viewBottom += this.elasticBottom;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                this.elasticBottom = scrollPos.y > 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewBottom = (scrollPos.y < 0 ? -scrollPos.y : 0) - this.elasticBottom;\r\n                this.viewTop = this.viewBottom + this.node.height;\r\n                this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;\r\n                this.viewTop -= this.elasticTop;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n        }\r\n    },\r\n    getItemHeight(id) {\r\n\r\n    },\r\n    //Calculate location based on id\r\n    _calcItemPos(id) {\r\n        let width, height, top, bottom, left, right, itemX, itemY;\r\n        switch (this._align) {\r\n            case cc.Layout.Type.HORIZONTAL:\r\n                switch (this._horizontalDir) {\r\n                    case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                        if (this._customSize) {\r\n                            let fixed = this._getFixedSize(id);\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * (id - fixed.count)) + (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        right = left + width;\r\n                        if (this.lackCenter) {\r\n                            let offset = (this.content.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            left += offset;\r\n                            right += offset;\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: left + (this._itemTmp.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                    case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                        if (this._customSize) {\r\n                            let fixed = this._getFixedSize(id);\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * (id - fixed.count)) - (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        left = right - width;\r\n                        if (this.lackCenter) {\r\n                            let offset = (this.content.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            left -= offset;\r\n                            right -= offset;\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            right: right,\r\n                            left: left,\r\n                            x: left + (this._itemTmp.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            case cc.Layout.Type.VERTICAL: {\r\n                switch (this._verticalDir) {\r\n                    case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                        if (this._customSize) {\r\n                            let fixed = this._getFixedSize(id);\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * (id - fixed.count)) - (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                            bottom = top - height;\r\n                        } else {\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        bottom = top - height;\r\n                        if (this.lackCenter) {\r\n                            let offset = (this.content.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            top -= offset;\r\n                            bottom -= offset;\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmp.anchorY * height),\r\n                        };\r\n                    }\r\n                    case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                        if (this._customSize) {\r\n                            let fixed = this._getFixedSize(id);\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * (id - fixed.count)) + (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                        } else {\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        top = bottom + height;\r\n                        if (this.lackCenter) {\r\n                            let offset = (this.content.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            top += offset;\r\n                            bottom += offset;\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmp.anchorY * height),\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            case cc.Layout.Type.GRID: {\r\n                let colLine = Math.floor(id / this._colLineNum);\r\n                switch (this._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL: {\r\n                        switch (this._verticalDir) {\r\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                top = -this._topGap - ((this._itemSize.height + this._lineGap) * colLine);\r\n                                bottom = top - this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmp.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * colLine);\r\n                                top = bottom + this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmp.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemX = this._leftGap + ((id % this._colLineNum) * (this._itemSize.width + this._columnGap));\r\n                        switch (this._horizontalDir) {\r\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                itemX += (this._itemTmp.anchorX * this._itemSize.width);\r\n                                itemX -= (this.content.anchorX * this.content.width);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                itemX += ((1 - this._itemTmp.anchorX) * this._itemSize.width);\r\n                                itemX -= ((1 - this.content.anchorX) * this.content.width);\r\n                                itemX *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                    case cc.Layout.AxisDirection.VERTICAL: {\r\n                        switch (this._horizontalDir) {\r\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                left = this._leftGap + ((this._itemSize.width + this._columnGap) * colLine);\r\n                                right = left + this._itemSize.width;\r\n                                itemX = left + (this._itemTmp.anchorX * this._itemSize.width);\r\n                                itemX -= (this.content.anchorX * this.content.width);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                right = -this._rightGap - ((this._itemSize.width + this._columnGap) * colLine);\r\n                                left = right - this._itemSize.width;\r\n                                itemX = left + (this._itemTmp.anchorX * this._itemSize.width);\r\n                                itemX += ((1 - this.content.anchorX) * this.content.width);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemY = -this._topGap - ((id % this._colLineNum) * (this._itemSize.height + this._lineGap));\r\n                        switch (this._verticalDir) {\r\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                itemY -= ((1 - this._itemTmp.anchorY) * this._itemSize.height);\r\n                                itemY += ((1 - this.content.anchorY) * this.content.height);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                itemY -= ((this._itemTmp.anchorY) * this._itemSize.height);\r\n                                itemY += (this.content.anchorY * this.content.height);\r\n                                itemY *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    //Calculate the position of an existing item\r\n    _calcExistItemPos(id) {\r\n        let item = this.getItemByListId(id);\r\n        if (!item)\r\n            return null;\r\n        let data = {\r\n            id: id,\r\n            x: item.x,\r\n            y: item.y,\r\n        };\r\n        if (this._sizeType) {\r\n            data.top = item.y + (item.height * (1 - item.anchorY));\r\n            data.bottom = item.y - (item.height * item.anchorY);\r\n        } else {\r\n            data.left = item.x - (item.width * item.anchorX);\r\n            data.right = item.x + (item.width * (1 - item.anchorX));\r\n        }\r\n        return data;\r\n    },\r\n    //Get Item Position\r\n    getItemPos(id) {\r\n        if (this._virtual)\r\n            return this._calcItemPos(id);\r\n        else {\r\n            if (this.frameByFrameRenderNum)\r\n                return this._calcItemPos(id);\r\n            else\r\n                return this._calcExistItemPos(id);\r\n        }\r\n    },\r\n    //Get fixed size\r\n    _getFixedSize(listId) {\r\n        if (!this._customSize)\r\n            return null;\r\n        if (listId == null)\r\n            listId = this._numItems;\r\n        let fixed = 0;\r\n        let count = 0;\r\n        for (let id in this._customSize) {\r\n            if (parseInt(id) < listId) {\r\n                fixed += this._customSize[id];\r\n                count++;\r\n            }\r\n        }\r\n        return {\r\n            val: fixed,\r\n            count: count,\r\n        }\r\n    },\r\n    //When scrolling starts:\r\n    _onScrollBegan() {\r\n        this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;\r\n    },\r\n    //When scrolling ends:\r\n    _onScrollEnded() {\r\n        let t = this;\r\n        if (t.scrollToListId != null) {\r\n            let item = t.getItemByListId(t.scrollToListId);\r\n            t.scrollToListId = null;\r\n            if (item) {\r\n                item.runAction(new cc.sequence(\r\n                    new cc.scaleTo(.1, 1.06),\r\n                    new cc.scaleTo(.1, 1),\r\n                    //new cc.callFunc(function (runNode) {\r\n\r\n                    // })\r\n                ));\r\n            }\r\n        }\r\n        t._onScrolling();\r\n\r\n        if (t._slideMode == SlideType.ADHERING && !t.adhering) {\r\n            //cc.log(t.adhering, t._scrollView.isAutoScrolling(), t._scrollView.isScrolling());\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                this._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n    },\r\n    // When touched\r\n    _onTouchStart(ev, captureListeners) {\r\n        if (this._scrollView._hasNestedViewGroup(ev, captureListeners))\r\n            return;\r\n        let isMe = ev.eventPhase === cc.Event.AT_TARGET && ev.target === this.node;\r\n        if (!isMe) {\r\n            let itemNode = ev.target;\r\n            while (itemNode._listId == null && itemNode.parent)\r\n                itemNode = itemNode.parent;\r\n            this._scrollItem = itemNode._listId != null ? itemNode : ev.target;\r\n        }\r\n    },\r\n    //When touched:\r\n    _onTouchUp() {\r\n        let t = this;\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (t.adhering)\r\n                t._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                t._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    },\r\n\r\n    _onTouchCancelled(ev, captureListeners) {\r\n        let t = this;\r\n        if (t._scrollView._hasNestedViewGroup(ev, captureListeners) || ev.simulate)\r\n            return;\r\n\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (t.adhering)\r\n                t._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                t._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    },\r\n    // When the size changes\r\n    _onSizeChanged() {\r\n        if (this.checkInited(false))\r\n            this._onScrolling();\r\n    },\r\n    //When Item is adaptive\r\n    _onItemAdaptive(item) {\r\n        // if (this.checkInited(false)) {\r\n        if (\r\n            (!this._sizeType && item.width != this._itemSize.width)\r\n            || (this._sizeType && item.height != this._itemSize.height)\r\n        ) {\r\n            if (!this._customSize)\r\n                this._customSize = {};\r\n            let val = this._sizeType ? item.height : item.width;\r\n            if (this._customSize[item._listId] != val) {\r\n                this._customSize[item._listId] = val;\r\n                this._resizeContent();\r\n                // this.content.children.forEach(child => {\r\n                //     this._updateItemPos(child);\r\n                // });\r\n                this.updateAll();\r\n                // 如果当前正在运行 scrollTo，肯定会不准确，在这里做修正\r\n                if (this._scrollToListId != null) {\r\n                    this._scrollPos = null;\r\n                    this.unschedule(this._scrollToSo);\r\n                    this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - ((new Date()).getTime() / 1000)));\r\n                }\r\n            }\r\n        }\r\n        // }\r\n    },\r\n    //PAGE config\r\n    _pageAdhere() {\r\n        let t = this;\r\n        if (!t.cyclic && (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0))\r\n            return;\r\n        let curPos = t._sizeType ? t.viewTop : t.viewLeft;\r\n        let dis = (t._sizeType ? t.node.height : t.node.width) * t.pageDistance;\r\n        let canSkip = Math.abs(t._beganPos - curPos) > dis;\r\n        if (canSkip) {\r\n            let timeInSecond = .5;\r\n            switch (t._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (t._beganPos > curPos) {\r\n                        t.prePage(timeInSecond);\r\n                        // cc.log('_pageAdhere   PPPPPPPPPPPPPPP');\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                        // cc.log('_pageAdhere   NNNNNNNNNNNNNNN')\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (t._beganPos < curPos) {\r\n                        t.prePage(timeInSecond);\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                    }\r\n                    break;\r\n            }\r\n        } else if (t.elasticTop <= 0 && t.elasticRight <= 0 && t.elasticBottom <= 0 && t.elasticLeft <= 0) {\r\n            t.adhere();\r\n        }\r\n        t._beganPos = null;\r\n    },\r\n    //config\r\n    adhere() {\r\n        let t = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0)\r\n            return;\r\n        t.adhering = true;\r\n        // if (!t._virtual)\r\n        t._calcNearestItem();\r\n        let offset = (t._sizeType ? t._topGap : t._leftGap) / (t._sizeType ? t.node.height : t.node.width);\r\n        let timeInSecond = .7;\r\n        t.scrollTo(t.nearestListId, timeInSecond, offset);\r\n    },\r\n    //Update..\r\n    update() {\r\n        if (this.frameByFrameRenderNum <= 0 || this._updateDone)\r\n            return;\r\n        // cc.log(this.displayData.length, this._updateCounter, this.displayData[this._updateCounter]);\r\n        if (this._virtual) {\r\n            let len = (this._updateCounter + this.frameByFrameRenderNum) > this.displayItemNum ? this.displayItemNum : (this._updateCounter + this.frameByFrameRenderNum);\r\n            for (let n = this._updateCounter; n < len; n++) {\r\n                let data = this.displayData[n];\r\n                if (data) {\r\n                    // cc.log(data.id);\r\n                    this._createOrUpdateItem(data);\r\n                }\r\n            }\r\n\r\n            if (this._updateCounter >= this.displayItemNum - 1) { //最后一个\r\n                if (this._doneAfterUpdate) {\r\n                    this._updateCounter = 0;\r\n                    this._updateDone = false;\r\n                    // if (!this._scrollView.isScrolling())\r\n                    this._doneAfterUpdate = false;\r\n                } else {\r\n                    this._updateDone = true;\r\n                    this._delRedundantItem();\r\n                    this._forceUpdate = false;\r\n                    this._calcNearestItem();\r\n                    if (this.slideMode == SlideType.PAGE)\r\n                        this.curPageNum = this.nearestListId;\r\n                }\r\n            } else {\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            }\r\n        } else {\r\n            if (this._updateCounter < this._numItems) {\r\n                let len = (this._updateCounter + this.frameByFrameRenderNum) > this._numItems ? this._numItems : (this._updateCounter + this.frameByFrameRenderNum);\r\n                for (let n = this._updateCounter; n < len; n++) {\r\n                    this._createOrUpdateItem2(n);\r\n                }\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            } else {\r\n                this._updateDone = true;\r\n                this._calcNearestItem();\r\n                if (this.slideMode == SlideType.PAGE)\r\n                    this.curPageNum = this.nearestListId;\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Create or update Item (for virtual list)\r\n     * @param {Object} data\r\n     */\r\n    _createOrUpdateItem(data) {\r\n        let item = this.getItemByListId(data.id);\r\n        if (!item) { //If not present\r\n            let canGet = this._pool.size() > 0;\r\n            if (canGet) {\r\n                item = this._pool.get();\r\n                // cc.log('Remove from the pool :: old id = ', item._listId,', new id = ', data.id, item);\r\n            } else {\r\n                item = cc.instantiate(this._itemTmp);\r\n                // cc.log('New ::', data.id, item);\r\n            }\r\n            if (item._listId != data.id) {\r\n                item._listId = data.id;\r\n                item.setContentSize(this._itemSize);\r\n            }\r\n            item.setPosition(new cc.v2(data.x, data.y));\r\n            this._resetItemSize(item);\r\n            this.content.addChild(item);\r\n            if (canGet && this._needUpdateWidget) {\r\n                let widget = item.getComponent(cc.Widget);\r\n                if (widget)\r\n                    widget.updateAlignment();\r\n            }\r\n            item.setSiblingIndex(this.content.childrenCount - 1);\r\n\r\n            let listItem = item.getComponent(item.name);\r\n            item.listItem = listItem;\r\n            if (listItem) {\r\n                listItem._list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //Force update\r\n            item.setPosition(new cc.v2(data.x, data.y));\r\n            this._resetItemSize(item);\r\n            // cc.log('ADD::', data.id);\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        }\r\n        this._resetItemSize(item);\r\n\r\n        this._updateListItem(item.listItem);\r\n        if (this._lastDisplayData.indexOf(data.id) < 0) {\r\n            this._lastDisplayData.push(data.id);\r\n        }\r\n    },\r\n    //Create or update Item (for non-virtual lists)\r\n    _createOrUpdateItem2(listId) {\r\n        let item = this.content.children[listId];\r\n        if (!item) { //If not present\r\n            item = cc.instantiate(this._itemTmp);\r\n            item._listId = listId;\r\n            this.content.addChild(item);\r\n            let listItem = item.getComponent(ListItem);\r\n            item.listItem = listItem;\r\n            if (listItem) {\r\n                listItem._list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //Force update\r\n            item._listId = listId;\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId);\r\n            }\r\n        }\r\n        this._updateListItem(item.listItem);\r\n        if (this._lastDisplayData.indexOf(listId) < 0) {\r\n            this._lastDisplayData.push(listId);\r\n        }\r\n    },\r\n\r\n    _updateListItem(listItem) {\r\n        if (!listItem)\r\n            return;\r\n        if (this.selectedMode > SelectedType.NONE) {\r\n            switch (this.selectedMode) {\r\n                case SelectedType.SINGLE:\r\n                    listItem.selected = this.selectedId == listItem.node._listId;\r\n                    break;\r\n                case SelectedType.MULT:\r\n                    listItem.selected = this.multSelected.indexOf(listItem.node._listId) >= 0;\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n    //For virtual lists only\r\n    _resetItemSize(item) {\r\n        // return;\r\n        let size;\r\n        if (this._customSize && this._customSize[item._listId]) {\r\n            size = this._customSize[item._listId];\r\n        } else {\r\n            if (this._colLineNum > 1)\r\n                item.setContentSize(this._itemSize);\r\n            else\r\n                size = this._sizeType ? this._itemSize.height : this._itemSize.width;\r\n        }\r\n        if (size) {\r\n            if (this._sizeType)\r\n                item.height = size;\r\n            else\r\n                item.width = size;\r\n        }\r\n    },\r\n    /**\r\n     * Update Item Position\r\n     * @param {Number||Node} listIdOrItem\r\n     */\r\n    _updateItemPos(listIdOrItem) {\r\n        let item = isNaN(listIdOrItem) ? listIdOrItem : this.getItemByListId(listIdOrItem);\r\n        let pos = this.getItemPos(item._listId);\r\n        item.setPosition(pos.x, pos.y);\r\n    },\r\n    /**\r\n     * Set multiple selection\r\n     * @param {Array} args can be a single listId or an array of listIds\r\n     * @param {Boolean} bool value, if null, directly overwrite with args\r\n     */\r\n    setMultSelected(args, bool) {\r\n        let t = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        if (bool == null) {\r\n            t.multSelected = args;\r\n        } else {\r\n            let listId, sub;\r\n            if (bool) {\r\n                for (let n = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub < 0) {\r\n                        t.multSelected.push(listId);\r\n                    }\r\n                }\r\n            } else {\r\n                for (let n = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub >= 0) {\r\n                        t.multSelected.splice(sub, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        t._forceUpdate = true;\r\n        t._onScrolling();\r\n    },\r\n    /**\r\n     * Update the specified Item\r\n     * @param {Array} args single listId, or array\r\n     * @returns\r\n     */\r\n    updateItem(args) {\r\n        if (!this.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        for (let n = 0, len = args.length; n < len; n++) {\r\n            let listId = args[n];\r\n            let item = this.getItemByListId(listId);\r\n            if (item) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Update all\r\n     */\r\n    updateAll() {\r\n        if (!this.checkInited())\r\n            return;\r\n        this.numItems = this.numItems;\r\n    },\r\n    /**\r\n     * Get Item by ListID\r\n     * @param {Number} listId\r\n     * @returns\r\n     */\r\n    getItemByListId(listId) {\r\n        for (let n = this.content.childrenCount - 1; n >= 0; n--) {\r\n            if (this.content.children[n]._listId == listId)\r\n                return this.content.children[n];\r\n        }\r\n    },\r\n    /**\r\n     * Get Item outside the display area\r\n     * @returns\r\n     */\r\n    _getOutsideItem() {\r\n        let item;\r\n        let result = [];\r\n        for (let n = this.content.childrenCount - 1; n >= 0; n--) {\r\n            item = this.content.children[n];\r\n            if (!this.displayData.find(d => d.id == item._listId)) {\r\n                result.push(item);\r\n            }\r\n        }\r\n        return result;\r\n    },\r\n    //Delete items outside the display area\r\n    _delRedundantItem() {\r\n        if (this._virtual) {\r\n            let arr = this._getOutsideItem();\r\n            for (let n = arr.length - 1; n >= 0; n--) {\r\n                let item = arr[n];\r\n                // 加这一句是为了防止拖动时被卡住...\r\n                if (this._scrollItem && item._listId == this._scrollItem._listId)\r\n                    continue;\r\n                this._pool.put(item);\r\n                for (let m = this._lastDisplayData.length - 1; m >= 0; m--) {\r\n                    if (this._lastDisplayData[m] == item._listId) {\r\n                        this._lastDisplayData.splice(m, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // cc.log('存入::', str, '    pool.length =', this._pool.length);\r\n        } else {\r\n            while (this.content.childrenCount > this._numItems) {\r\n                this._delSingleItem(this.content.children[this.content.childrenCount - 1]);\r\n            }\r\n        }\r\n    },\r\n    //Delete a single Item\r\n    _delSingleItem(item) {\r\n        // cc.log('DEL::', item._listId, item);\r\n        item.removeFromParent();\r\n        if (item.destroy)\r\n            item.destroy();\r\n        item = null;\r\n    },\r\n    /**\r\n     * Dynamic deletion of Item (this method is only applicable to virtual lists, that is, _virtual = true)\r\n     * Be sure to reset the new numItems in the callback function to refresh, after all, this List is data driven.\r\n     */\r\n    aniDelItem(listId, callFunc, aniType) {\r\n        let t = this;\r\n\r\n        if (!t.checkInited() || t.cyclic || !t._virtual)\r\n            return cc.error('This function is not allowed to be called!');\r\n\r\n        if (t._aniDelRuning)\r\n            return cc.warn('Please wait for the current deletion to finish!');\r\n\r\n        let item = t.getItemByListId(listId);\r\n        if (!item) {\r\n            callFunc(listId);\r\n            return;\r\n        }\r\n        t._aniDelRuning = true;\r\n        let curLastId = t.displayData[t.displayData.length - 1].id;\r\n        let resetSelectedId = item.listItem.selected;\r\n        item.listItem.showAni(aniType, () => {\r\n            //判断有没有下一个，如果有的话，创建粗来\r\n            let newId;\r\n            if (curLastId < t._numItems - 2) {\r\n                newId = curLastId + 1;\r\n            }\r\n            if (newId != null) {\r\n                let newData = t._calcItemPos(newId);\r\n                t.displayData.push(newData);\r\n                if (t._virtual)\r\n                    t._createOrUpdateItem(newData);\r\n                else\r\n                    t._createOrUpdateItem2(newId);\r\n            } else\r\n                t._numItems--;\r\n            if (t.selectedMode == SelectedType.SINGLE) {\r\n                if (resetSelectedId) {\r\n                    t._selectedId = -1;\r\n                } else if (t._selectedId - 1 >= 0) {\r\n                    t._selectedId--;\r\n                }\r\n            } else if (t.selectedMode == SelectedType.MULT && t.multSelected.length) {\r\n                let sub = t.multSelected.indexOf(listId);\r\n                // let tmp;\r\n                if (sub >= 0) {\r\n                    t.multSelected.splice(sub, 1);\r\n                }\r\n                //多选的数据，在其后的全部减一\r\n                for (let n = t.multSelected.length - 1; n >= 0; n--) {\r\n                    let id = t.multSelected[n];\r\n                    if (id >= listId)\r\n                        t.multSelected[n]--;\r\n                }\r\n            }\r\n            if (t._customSize) {\r\n                if (t._customSize[listId])\r\n                    delete t._customSize[listId];\r\n                let newCustomSize = {};\r\n                let size;\r\n                for (let id in t._customSize) {\r\n                    size = t._customSize[id];\r\n                    id = parseInt(id);\r\n                    newCustomSize[id - (id >= listId ? 1 : 0)] = size;\r\n                }\r\n                t._customSize = newCustomSize;\r\n            }\r\n            //后面的Item向前怼的动效\r\n            let sec = .2333;\r\n            let acts, haveCB;\r\n            for (let n = newId != null ? newId : curLastId; n >= listId + 1; n--) {\r\n                item = t.getItemByListId(n);\r\n                if (item) {\r\n                    let posData = t._calcItemPos(n - 1);\r\n                    acts = [\r\n                        new cc.moveTo(sec, new cc.v2(posData.x, posData.y)),\r\n                    ];\r\n                    if (n <= listId + 1) {\r\n                        haveCB = true;\r\n                        acts.push(new cc.CallFunc(() => {\r\n                            t._aniDelRuning = false;\r\n                            callFunc(listId);\r\n                        }));\r\n                    }\r\n                    if (acts.length > 1)\r\n                        item.runAction(new cc.Sequence(acts));\r\n                    else\r\n                        item.runAction(acts[0]);\r\n                }\r\n            }\r\n            if (!haveCB) {\r\n                t._aniDelRuning = false;\r\n                callFunc(listId);\r\n            }\r\n        }, true);\r\n    },\r\n    /**\r\n     * Scroll to:\r\n     * @param {Number} listId Index (if <0, scroll to the first Item position, if> = _ numItems, scroll to the last Item position)\r\n     * @param {Number} timeInSecond time\r\n     * @param {Number} offset Index target position offset, 0-1\r\n     * @param {Boolean} overStress Whether to emphasize the item after scrolling (this is just an experimental feature)\r\n     */\r\n    scrollTo(listId, timeInSecond, offset, overStress) {\r\n        let t = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        // t._scrollView.stopAutoScroll();\r\n        if (timeInSecond == null)   //默认0.5\r\n            timeInSecond = .5;\r\n        else if (timeInSecond < 0)\r\n            timeInSecond = 0;\r\n        if (listId < 0)\r\n            listId = 0;\r\n        else if (listId >= t._numItems)\r\n            listId = t._numItems - 1;\r\n        // Just in case the layout size has not been updated after setting numItems\r\n        if (!t._virtual && t._layout && t._layout.enabled)\r\n            t._layout.updateLayout();\r\n\r\n        let pos = t.getItemPos(listId);\r\n        let targetX, targetY;\r\n\r\n        switch (t._alignCalcType) {\r\n            case 1://Single row HORIZONTAL (LEFT_TO_RIGHT), grid VERTICAL (LEFT_TO_RIGHT)\r\n                targetX = pos.left;\r\n                if (offset != null)\r\n                    targetX -= t.node.width * offset;\r\n                else\r\n                    targetX -= t._leftGap;\r\n                pos = new cc.v2(targetX, 0);\r\n                break;\r\n            case 2://Single row HORIZONTAL (RIGHT_TO_LEFT), grid VERTICAL (RIGHT_TO_LEFT)\r\n                targetX = pos.right - t.node.width;\r\n                if (offset != null)\r\n                    targetX += t.node.width * offset;\r\n                else\r\n                    targetX += t._rightGap;\r\n                pos = new cc.v2(targetX + t.content.width, 0);\r\n                break;\r\n            case 3://Single column VERTICAL (TOP_TO_BOTTOM), grid HORIZONTAL (TOP_TO_BOTTOM)\r\n                targetY = pos.top;\r\n                if (offset != null)\r\n                    targetY += t.node.height * offset;\r\n                else\r\n                    targetY += t._topGap;\r\n                pos = new cc.v2(0, -targetY);\r\n                break;\r\n            case 4://Single column VERTICAL (BOTTOM_TO_TOP), grid HORIZONTAL (BOTTOM_TO_TOP)\r\n                targetY = pos.bottom + t.node.height;\r\n                if (offset != null)\r\n                    targetY -= t.node.height * offset;\r\n                else\r\n                    targetY -= t._bottomGap;\r\n                pos = new cc.v2(0, -targetY + t.content.height);\r\n                break;\r\n        }\r\n        let viewPos = t.content.getPosition();\r\n        viewPos = Math.abs(t._sizeType ? viewPos.y : viewPos.x);\r\n\r\n        let comparePos = t._sizeType ? pos.y : pos.x;\r\n        let runScroll = Math.abs((t._scrollPos != null ? t._scrollPos : viewPos) - comparePos) > .5;\r\n        // cc.log(runScroll, t._scrollPos, viewPos, comparePos)\r\n\r\n        // t._scrollView.stopAutoScroll();\r\n\r\n        if (runScroll) {\r\n            t._scrollPos = comparePos;\r\n            t._scrollToListId = listId;\r\n            t._scrollToEndTime = ((new Date()).getTime() / 1000) + timeInSecond;\r\n            t._scrollView.scrollToOffset(pos, timeInSecond);\r\n            // cc.log(listId, t.content.height, t.content.getPosition().y, pos.y);\r\n            t._scrollToSo = t.scheduleOnce(() => {\r\n                if (!t._adheringBarrier) {\r\n                    t.adhering = t._adheringBarrier = false;\r\n                }\r\n                t._scrollPos =\r\n                    t._scrollToListId =\r\n                        t._scrollToEndTime =\r\n                            t._scrollToSo =\r\n                                null;\r\n                //cc.log('2222222222', t._adheringBarrier)\r\n                if (overStress) {\r\n                    // t.scrollToListId = listId;\r\n                    let item = t.getItemByListId(listId);\r\n                    if (item) {\r\n                        item.runAction(new cc.sequence(\r\n                            new cc.scaleTo(.1, 1.05),\r\n                            new cc.scaleTo(.1, 1),\r\n                        ));\r\n                    }\r\n                }\r\n            }, timeInSecond + .1);\r\n\r\n            if (timeInSecond <= 0) {\r\n                t._onScrolling();\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Calculate the nearest item in the current scroll window\r\n     */\r\n    _calcNearestItem() {\r\n        let t = this;\r\n        t.nearestListId = null;\r\n        let data, center;\r\n\r\n        if (t._virtual)\r\n            t._calcViewPos();\r\n\r\n        let vTop, vRight, vBottom, vLeft;\r\n        vTop = t.viewTop;\r\n        vRight = t.viewRight;\r\n        vBottom = t.viewBottom;\r\n        vLeft = t.viewLeft;\r\n\r\n        let breakFor = false;\r\n        for (let n = 0; n < t.content.childrenCount && !breakFor; n += t._colLineNum) {\r\n            data = this._virtual ? this.displayData[n] : this._calcExistItemPos(n);\r\n            if (data) {\r\n                center = this._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n                switch (this._alignCalcType) {\r\n                    case 1://Single row HORIZONTAL (LEFT_TO_RIGHT), grid VERTICAL (LEFT_TO_RIGHT)\r\n                        if (data.right >= vLeft) {\r\n                            this.nearestListId = data.id;\r\n                            if (vLeft > center)\r\n                                this.nearestListId += this._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 2://Single row HORIZONTAL (RIGHT_TO_LEFT), grid VERTICAL (RIGHT_TO_LEFT)\r\n                        if (data.left <= vRight) {\r\n                            this.nearestListId = data.id;\r\n                            if (vRight < center)\r\n                                this.nearestListId += this._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 3://Single column VERTICAL (TOP_TO_BOTTOM), grid HORIZONTAL (TOP_TO_BOTTOM)\r\n                        if (data.bottom <= vTop) {\r\n                            this.nearestListId = data.id;\r\n                            if (vTop < center)\r\n                                this.nearestListId += this._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 4://Single column VERTICAL (BOTTOM_TO_TOP), grid HORIZONTAL (BOTTOM_TO_TOP)\r\n                        if (data.top >= vBottom) {\r\n                            this.nearestListId = data.id;\r\n                            if (vBottom > center)\r\n                                this.nearestListId += this._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        //Judge the last Item. . . (Hey, these judgments are really disgusting.\r\n        // If you judge the previous one, you must judge the last one ...\r\n        // At the beginning, there was only one layout (single-column layout).\r\n        // At that time, the code was only three hundred lines. Later, I wanted to improve it. .\r\n        // This pit is really deep, now this line counts one thousand and five = = ||)\r\n        data = this._virtual ? this.displayData[this.displayItemNum - 1] : this._calcExistItemPos(this._numItems - 1);\r\n        if (data && data.id == t._numItems - 1) {\r\n            center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n            switch (t._alignCalcType) {\r\n                case 1://Single row HORIZONTAL (LEFT_TO_RIGHT), grid VERTICAL (LEFT_TO_RIGHT)\r\n                    if (vRight > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 2://Single row HORIZONTAL (RIGHT_TO_LEFT), grid VERTICAL (RIGHT_TO_LEFT)\r\n                    if (vLeft < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 3://Single column VERTICAL (TOP_TO_BOTTOM), grid HORIZONTAL (TOP_TO_BOTTOM)\r\n                    if (vBottom < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 4://Single column VERTICAL (BOTTOM_TO_TOP), grid HORIZONTAL (BOTTOM_TO_TOP)\r\n                    if (vTop > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n            }\r\n        }\r\n        // cc.log('t.nearestListId =', t.nearestListId);\r\n    },\r\n    // Previous\r\n    prePage(timeInSecond) {\r\n        // cc.log('👈');\r\n        if (!this.checkInited())\r\n            return;\r\n        if (timeInSecond == null)\r\n            timeInSecond = .5;\r\n        this.skipPage(this.curPageNum - 1, timeInSecond);\r\n    },\r\n    //Next\r\n    nextPage(timeInSecond) {\r\n        // cc.log('👉');\r\n        if (!this.checkInited())\r\n            return;\r\n        if (timeInSecond == null)\r\n            timeInSecond = .5;\r\n        this.skipPage(this.curPageNum + 1, timeInSecond);\r\n    },\r\n    //Go to page\r\n    skipPage(pageNum, timeInSecond) {\r\n        let t = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t._slideMode != SlideType.PAGE)\r\n            return cc.error('This function is not allowed to be called, Must SlideMode = PAGE!');\r\n        if (pageNum < 0 || pageNum >= t._numItems)\r\n            return;\r\n        if (t.curPageNum == pageNum)\r\n            return;\r\n        // cc.log(pageNum);\r\n        t.curPageNum = pageNum;\r\n        if (t.pageChangeEvent) {\r\n            cc.Component.EventHandler.emitEvents([t.pageChangeEvent], pageNum);\r\n        }\r\n        t.scrollTo(pageNum, timeInSecond);\r\n    },\r\n    // Calculate CustomSize (this function is reserved, in some rare cases, it is still necessary to manually calculate customSize)\r\n    calcCustomSize(numItems) {\r\n        let t = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!t._itemTmp)\r\n            return cc.error('Unset template item!');\r\n        if (!t.renderEvent)\r\n            return cc.error('Unset Render-Event!');\r\n        t._customSize = {};\r\n        let temp = cc.instantiate(t._itemTmp);\r\n        t.content.addChild(temp);\r\n        for (let n = 0; n < numItems; n++) {\r\n            cc.Component.EventHandler.emitEvents([t.renderEvent], temp, n);\r\n            if (temp.height != t._itemSize.height || temp.width != t._itemSize.width) {\r\n                t._customSize[n] = t._sizeType ? temp.height : temp.width;\r\n            }\r\n        }\r\n        if (!Object.keys(t._customSize).length)\r\n            t._customSize = null;\r\n        temp.removeFromParent();\r\n        if (temp.destroy)\r\n            temp.destroy();\r\n        return t._customSize;\r\n    },\r\n\r\n});"]}