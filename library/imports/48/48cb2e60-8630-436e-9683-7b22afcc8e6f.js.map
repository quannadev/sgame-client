{"version":3,"sources":["assets/scripts/minipoker/UIMiniPokerTransaction.js"],"names":["Listview","require","cc","Class","VozBaseComponent","properties","listview","ListCard","onLoad","listRank","numItems","length","onEnable","mm","Loading","hide","node","zIndex","lastZIndex","_data","items","eventClose","audio","playButton","back","onListRender","item","idx","rank","getComponent","name","init","onListSelected","selectedId","lastSelectedId","val","list","listItem","_list","str","selectedMode","console","log"],"mappings":";;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,gBADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAMN,QADN;AAERO,IAAAA,QAAQ,EAAM;AAFN,GAHP;AAOLC,EAAAA,MAPK,oBAOI;AACL,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKH,QAAL,CAAcI,QAAd,GAAyB,KAAKD,QAAL,CAAcE,MAAvC;AACH,GAVI;AAWLC,EAAAA,QAXK,sBAWM;AACPC,IAAAA,EAAE,CAACC,OAAH,CAAWC,IAAX;;AACA,QAAI,KAAKC,IAAL,CAAUC,MAAV,IAAoBf,EAAE,CAACgB,UAA3B,EAAsC;AAClC,WAAKF,IAAL,CAAUC,MAAV,GAAmBf,EAAE,CAACgB,UAAtB;AACH;;AACD,QAAG,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWC,KAA5B,EAAkC;AAC9B,WAAKX,QAAL,GAAgB,KAAKU,KAAL,CAAWC,KAA3B;AACA,WAAKd,QAAL,CAAcI,QAAd,GAAyB,KAAKD,QAAL,CAAcE,MAAvC;AACH;AACJ,GApBI;AAqBLU,EAAAA,UArBK,wBAqBQ;AACTR,IAAAA,EAAE,CAACS,KAAH,CAASC,UAAT;AACA,SAAKC,IAAL;AACH,GAxBI;AAyBLC,EAAAA,YAzBK,wBAyBQC,IAzBR,EAyBcC,GAzBd,EAyBmB;AACpB,QAAIC,IAAI,GAAG,KAAKnB,QAAL,CAAckB,GAAd,CAAX;AACAD,IAAAA,IAAI,CAACG,YAAL,CAAkBH,IAAI,CAACI,IAAvB,EAA6BC,IAA7B,CAAkCH,IAAlC;AACH,GA5BI;AA6BLI,EAAAA,cA7BK,0BA6BUN,IA7BV,EA6BgBO,UA7BhB,EA6B4BC,cA7B5B,EA6B4CC,GA7B5C,EA6BiD;AAClD,QAAI,CAACT,IAAL,EACI;AACJ,QAAIU,IAAI,GAAGV,IAAI,CAACW,QAAL,CAAcC,KAAzB;AACA,QAAIC,GAAG,GAAG,qCAAqCH,IAAI,CAACpB,IAAL,CAAUc,IAA/C,GAAsD,wBAAtD,GAAiFG,UAAjF,GAA8F,yBAA9F,GAA0HC,cAApI;;AACA,QAAIE,IAAI,CAACI,YAAL,IAAqB,CAAzB,EAA4B;AAAE;AAC1BD,MAAAA,GAAG,IAAI,uBAAuBJ,GAA9B;AACH;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH;AAtCI,CAAT","sourceRoot":"/","sourcesContent":["const Listview = require('Listview');\ncc.Class({\n    extends: cc.VozBaseComponent,\n\n    properties: {\n        listview    : Listview,\n        ListCard    : [],\n    },\n    onLoad() {\n        this.listRank = [];\n        this.listview.numItems = this.listRank.length;\n    },\n    onEnable() {\n        mm.Loading.hide();\n        if (this.node.zIndex <= cc.lastZIndex){\n            this.node.zIndex = cc.lastZIndex;\n        }\n        if(this._data && this._data.items){\n            this.listRank = this._data.items;\n            this.listview.numItems = this.listRank.length;\n        }\n    },\n    eventClose() {\n        mm.audio.playButton();\n        this.back();\n    },\n    onListRender(item, idx) {\n        let rank = this.listRank[idx];\n        item.getComponent(item.name).init(rank);\n    },\n    onListSelected(item, selectedId, lastSelectedId, val) {\n        if (!item)\n            return;\n        let list = item.listItem._list;\n        let str = 'Danh sách hoạt động hiện tại là:' + list.node.name + '，Lựa chọn hiện tại là：' + selectedId + '，Lựa chọn cuối cùng là：' + lastSelectedId;\n        if (list.selectedMode == 2) { //Nếu nó là chế độ đa lựa chọn\n            str += '，Giá trị hiện tại：' + val;\n        }\n        console.log(str);\n    },\n});\n"]}