{"version":3,"sources":["assets\\scripts\\candy\\CandyLine.js"],"names":["helper","require","cc","Class","Component","properties","nodeLine","Node","typeLine","init","obj","CDV","eventSelectAll","eventOpen","node","active","eventClose","total","getTotalLineSelect","addNotice","eventSelect","event","numberStr","numberLine","parseInt","setMaterialGray","target","getComponent","Sprite","isMaterialGray","data","updateString","eventBoChon","Promise","all","children","map","line","index","then","result","eventSelectChan","eventSelectLe","e","select","setNumberLines","i","length"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\nvar helper = require('Helper');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        nodeLine:   cc.Node,\r\n        typeLine: 0\r\n    },\r\n    init: function(obj){\r\n        this.CDV = obj;\r\n        this.eventSelectAll();\r\n    },\r\n    eventOpen: function(){\r\n        this.node.active = true;\r\n    },\r\n    eventClose: function(){\r\n        let total = this.getTotalLineSelect();\r\n        if (this.node.active && total < 1) {\r\n            this.CDV.addNotice('Chọn ít nhất 1 dòng');\r\n        }else{\r\n            this.node.active = false;\r\n        }\r\n    },\r\n    eventSelect: function(event, numberStr) {\r\n        let numberLine = parseInt(numberStr);\r\n        helper.setMaterialGray(event.target.getComponent(cc.Sprite), helper.isMaterialGray(event.target.getComponent(cc.Sprite)));\r\n        this.data[numberLine] = helper.isMaterialGray(event.target.getComponent(cc.Sprite));\r\n        this.updateString();\r\n        this.typeLine = 3;\r\n    },\r\n    eventBoChon: function(){\r\n        Promise.all(this.nodeLine.children.map(function(line, index){\r\n            helper.setMaterialGray(line.getComponent(cc.Sprite), true);\r\n            return false;\r\n        })).then(result=>{\r\n            this.data = result;\r\n            this.typeLine = -1;\r\n        });\r\n    },\r\n    eventSelectChan: function() {\r\n        Promise.all(this.nodeLine.children.map(function(line, index){\r\n            helper.setMaterialGray(line.getComponent(cc.Sprite), index%2 ==1);\r\n            return index%2 !=1;\r\n        }))\r\n            .then(result => {\r\n                this.data = result;\r\n                this.updateString();\r\n            });\r\n        this.typeLine = 2;\r\n    },\r\n    eventSelectLe: function() {\r\n        Promise.all(this.nodeLine.children.map(function(line, index){\r\n            helper.setMaterialGray(line.getComponent(cc.Sprite), index%2 ==0);\r\n            return index%2 != 0;\r\n        }))\r\n            .then(result => {\r\n                this.data = result;\r\n                this.updateString();\r\n            });\r\n        this.typeLine = 1;\r\n    },\r\n    eventSelectAll: function(e, select) {\r\n        Promise.all(this.nodeLine.children.map(function(line, index){\r\n            helper.setMaterialGray(line.getComponent(cc.Sprite), false);\r\n            return true;\r\n        }))\r\n            .then(result => {\r\n                this.data = result;\r\n                this.updateString();\r\n            });\r\n        this.typeLine = 0;\r\n    },\r\n    updateString: function () {\r\n        let total = this.getTotalLineSelect();\r\n        this.CDV.setNumberLines(total);\r\n    },\r\n    getTotalLineSelect: function () {\r\n        let total = 0;\r\n        for (let i=1; i< this.data.length; i++){\r\n            if (this.data[i])\r\n                total++;\r\n        }\r\n        return total;\r\n    }\r\n});\r\n"]}